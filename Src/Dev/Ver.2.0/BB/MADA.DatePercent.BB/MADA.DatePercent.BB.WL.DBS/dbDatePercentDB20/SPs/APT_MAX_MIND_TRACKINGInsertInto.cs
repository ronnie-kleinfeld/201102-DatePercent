//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by the Database Schema tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
//
//     Exception should be handled in a higher layer.
//
//     generation time: 27/12/2011 08:42
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using Microsoft.Practices.EnterpriseLibrary.Data;

namespace MADA.DatePercent.BB.WL.DBS.dbDatePercentDB20.SPs
{
public class procAPT_MAX_MIND_TRACKINGInsertInto
{
public const string _Name = "APT_MAX_MIND_TRACKINGInsertInto";
public const string _Caption = "APT_ MAX_ MIND_ TRACKINGInsert Into";

public static SqlCommand SqlCommand()
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "APT_MAX_MIND_TRACKINGInsertInto";
SqlParameterCollection(cmd.Parameters);
return cmd;
}
public static SqlCommand SqlCommand(
System.Nullable<int> p_iMIP_ID, System.Nullable<DateTime> p_dtMIP_REQUEST_DATETIME, string p_strMIP_REQUEST_IP, string p_strMIP_REQUEST_URI, System.Nullable<decimal> p_decMIP_RESPONSE_LAT, System.Nullable<decimal> p_decMIP_RESPONSE_LNG, string p_strMIP_RESPONSE_STREAM, string p_strMIP_RESULT)
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "APT_MAX_MIND_TRACKINGInsertInto";
SqlParameterCollection(cmd.Parameters, p_iMIP_ID, p_dtMIP_REQUEST_DATETIME, p_strMIP_REQUEST_IP, p_strMIP_REQUEST_URI, p_decMIP_RESPONSE_LAT, p_decMIP_RESPONSE_LNG, p_strMIP_RESPONSE_STREAM, p_strMIP_RESULT);
return cmd;
}
public static void SqlCommandOutput(
System.Data.SqlClient.SqlCommand p_cmd,
out object p_iMIP_ID)
{
p_iMIP_ID = p_cmd.Parameters["@MIP_ID"].Value;
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parMIP_ID._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_REQUEST_DATETIME._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_REQUEST_IP._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_REQUEST_URI._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_RESPONSE_LAT._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_RESPONSE_LNG._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_RESPONSE_STREAM._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_RESULT._SqlParameter());
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection
, System.Nullable<int> p_iMIP_ID, System.Nullable<DateTime> p_dtMIP_REQUEST_DATETIME, string p_strMIP_REQUEST_IP, string p_strMIP_REQUEST_URI, System.Nullable<decimal> p_decMIP_RESPONSE_LAT, System.Nullable<decimal> p_decMIP_RESPONSE_LNG, string p_strMIP_RESPONSE_STREAM, string p_strMIP_RESULT)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parMIP_ID._SqlParameter());
p_oSqlParameterCollection.Add(parMIP_REQUEST_DATETIME._SqlParameter(p_dtMIP_REQUEST_DATETIME));
p_oSqlParameterCollection.Add(parMIP_REQUEST_IP._SqlParameter(p_strMIP_REQUEST_IP));
p_oSqlParameterCollection.Add(parMIP_REQUEST_URI._SqlParameter(p_strMIP_REQUEST_URI));
p_oSqlParameterCollection.Add(parMIP_RESPONSE_LAT._SqlParameter(p_decMIP_RESPONSE_LAT));
p_oSqlParameterCollection.Add(parMIP_RESPONSE_LNG._SqlParameter(p_decMIP_RESPONSE_LNG));
p_oSqlParameterCollection.Add(parMIP_RESPONSE_STREAM._SqlParameter(p_strMIP_RESPONSE_STREAM));
p_oSqlParameterCollection.Add(parMIP_RESULT._SqlParameter(p_strMIP_RESULT));
}
public class parMIP_ID
{
public const string _Name = "@MIP_ID";
public const string _Caption = "@ MIP_ ID";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_ID";
public const string _BindDataReader = "[@MIP_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Output;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameter("@MIP_ID", 10, 0, 4, SqlDbType.Int, ParameterDirection.Output, true);
}
}
public class parMIP_REQUEST_DATETIME
{
public const string _Name = "@MIP_REQUEST_DATETIME";
public const string _Caption = "@ MIP_ REQUEST_ DATETIME";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.DateTime;
public const Int32 _Length = 8;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_REQUEST_DATETIME";
public const string _BindDataReader = "[@MIP_REQUEST_DATETIME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_REQUEST_DATETIME", 23, 3, 8, SqlDbType.DateTime, "DateTime", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<DateTime> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_REQUEST_DATETIME", 23, 3, 8, SqlDbType.DateTime, "DateTime", ParameterDirection.Input, true, false, "", Value);
}
}
public class parMIP_REQUEST_IP
{
public const string _Name = "@MIP_REQUEST_IP";
public const string _Caption = "@ MIP_ REQUEST_ IP";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 50;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_REQUEST_IP";
public const string _BindDataReader = "[@MIP_REQUEST_IP]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_REQUEST_IP", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_REQUEST_IP", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parMIP_REQUEST_URI
{
public const string _Name = "@MIP_REQUEST_URI";
public const string _Caption = "@ MIP_ REQUEST_ URI";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 2000;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_REQUEST_URI";
public const string _BindDataReader = "[@MIP_REQUEST_URI]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_REQUEST_URI", 2000, -1, 2000, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_REQUEST_URI", 2000, -1, 2000, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parMIP_RESPONSE_LAT
{
public const string _Name = "@MIP_RESPONSE_LAT";
public const string _Caption = "@ MIP_ RESPONSE_ LAT";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Decimal;
public const Int32 _Length = 9;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_RESPONSE_LAT";
public const string _BindDataReader = "[@MIP_RESPONSE_LAT]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESPONSE_LAT", 18, 12, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<decimal> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESPONSE_LAT", 18, 12, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "", Value);
}
}
public class parMIP_RESPONSE_LNG
{
public const string _Name = "@MIP_RESPONSE_LNG";
public const string _Caption = "@ MIP_ RESPONSE_ LNG";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Decimal;
public const Int32 _Length = 9;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_RESPONSE_LNG";
public const string _BindDataReader = "[@MIP_RESPONSE_LNG]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESPONSE_LNG", 18, 12, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<decimal> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESPONSE_LNG", 18, 12, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "", Value);
}
}
public class parMIP_RESPONSE_STREAM
{
public const string _Name = "@MIP_RESPONSE_STREAM";
public const string _Caption = "@ MIP_ RESPONSE_ STREAM";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 0;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_RESPONSE_STREAM";
public const string _BindDataReader = "[@MIP_RESPONSE_STREAM]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESPONSE_STREAM", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESPONSE_STREAM", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parMIP_RESULT
{
public const string _Name = "@MIP_RESULT";
public const string _Caption = "@ MIP_ RESULT";
public const string _ParentName = "APT_MAX_MIND_TRACKINGInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 50;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_MAX_MIND_TRACKINGInsertInto.DefaultView.[0].@MIP_RESULT";
public const string _BindDataReader = "[@MIP_RESULT]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESULT", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@MIP_RESULT", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class inMIP_REQUEST_DATETIME : parMIP_REQUEST_DATETIME {}
public class inMIP_REQUEST_IP : parMIP_REQUEST_IP {}
public class inMIP_REQUEST_URI : parMIP_REQUEST_URI {}
public class inMIP_RESPONSE_LAT : parMIP_RESPONSE_LAT {}
public class inMIP_RESPONSE_LNG : parMIP_RESPONSE_LNG {}
public class inMIP_RESPONSE_STREAM : parMIP_RESPONSE_STREAM {}
public class inMIP_RESULT : parMIP_RESULT {}
public class outMIP_ID : parMIP_ID {}
public static int ExecuteNonQuery(
System.Nullable<int> p_iMIP_ID, System.Nullable<DateTime> p_dtMIP_REQUEST_DATETIME, string p_strMIP_REQUEST_IP, string p_strMIP_REQUEST_URI, System.Nullable<decimal> p_decMIP_RESPONSE_LAT, System.Nullable<decimal> p_decMIP_RESPONSE_LNG, string p_strMIP_RESPONSE_STREAM, string p_strMIP_RESULT,out object p_iMIP_IDOut)
{
try
{
Microsoft.Practices.EnterpriseLibrary.Data.Database db = DatabaseFactory.CreateDatabase();
SqlCommand cmd = SqlCommand(p_iMIP_ID, p_dtMIP_REQUEST_DATETIME, p_strMIP_REQUEST_IP, p_strMIP_REQUEST_URI, p_decMIP_RESPONSE_LAT, p_decMIP_RESPONSE_LNG, p_strMIP_RESPONSE_STREAM, p_strMIP_RESULT);
int iResult = db.ExecuteNonQuery(cmd);
SqlCommandOutput(cmd, out p_iMIP_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.BB.WL.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
public static int ExecuteNonQuery(
System.Nullable<int> p_iMIP_ID, System.Nullable<DateTime> p_dtMIP_REQUEST_DATETIME, string p_strMIP_REQUEST_IP, string p_strMIP_REQUEST_URI, System.Nullable<decimal> p_decMIP_RESPONSE_LAT, System.Nullable<decimal> p_decMIP_RESPONSE_LNG, string p_strMIP_RESPONSE_STREAM, string p_strMIP_RESULT,out object p_iMIP_IDOut,Microsoft.Practices.EnterpriseLibrary.Data.Database p_db,System.Data.Common.DbTransaction p_trn)
{
try
{
SqlCommand cmd = SqlCommand(p_iMIP_ID, p_dtMIP_REQUEST_DATETIME, p_strMIP_REQUEST_IP, p_strMIP_REQUEST_URI, p_decMIP_RESPONSE_LAT, p_decMIP_RESPONSE_LNG, p_strMIP_RESPONSE_STREAM, p_strMIP_RESULT);
int iResult = p_db.ExecuteNonQuery(cmd, p_trn);
SqlCommandOutput(cmd, out p_iMIP_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.BB.WL.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
}
}
