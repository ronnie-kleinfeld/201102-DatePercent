//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MADA.DatePercent.BB.WL.WS.Worker {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MailComposerDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MailComposerDataSet : global::System.Data.DataSet {
        
        private T_EMAIL_BOXDataTable tableT_EMAIL_BOX;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MailComposerDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MailComposerDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_EMAIL_BOX"] != null)) {
                    base.Tables.Add(new T_EMAIL_BOXDataTable(ds.Tables["T_EMAIL_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_EMAIL_BOXDataTable T_EMAIL_BOX {
            get {
                return this.tableT_EMAIL_BOX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MailComposerDataSet cln = ((MailComposerDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_EMAIL_BOX"] != null)) {
                    base.Tables.Add(new T_EMAIL_BOXDataTable(ds.Tables["T_EMAIL_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_EMAIL_BOX = ((T_EMAIL_BOXDataTable)(base.Tables["T_EMAIL_BOX"]));
            if ((initTable == true)) {
                if ((this.tableT_EMAIL_BOX != null)) {
                    this.tableT_EMAIL_BOX.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MailComposerDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MailComposerDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_EMAIL_BOX = new T_EMAIL_BOXDataTable();
            base.Tables.Add(this.tableT_EMAIL_BOX);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_EMAIL_BOX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MailComposerDataSet ds = new MailComposerDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_EMAIL_BOXRowChangeEventHandler(object sender, T_EMAIL_BOXRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_EMAIL_BOXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEMB_ID;
            
            private global::System.Data.DataColumn columnEMB_PUBLISH_DATETIME;
            
            private global::System.Data.DataColumn columnEMB_SENDER_EMAIL;
            
            private global::System.Data.DataColumn columnEMB_SENDER_NAME;
            
            private global::System.Data.DataColumn columnEMB_GETTER_USER_UID;
            
            private global::System.Data.DataColumn columnEMB_GETTER_EMAIL;
            
            private global::System.Data.DataColumn columnEMB_GETTER_NAME;
            
            private global::System.Data.DataColumn columnEMB_BOX_HTML;
            
            private global::System.Data.DataColumn columnEMB_SUBJECT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOXDataTable() {
                this.TableName = "T_EMAIL_BOX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_EMAIL_BOXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_EMAIL_BOXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_IDColumn {
                get {
                    return this.columnEMB_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_PUBLISH_DATETIMEColumn {
                get {
                    return this.columnEMB_PUBLISH_DATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_SENDER_EMAILColumn {
                get {
                    return this.columnEMB_SENDER_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_SENDER_NAMEColumn {
                get {
                    return this.columnEMB_SENDER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_GETTER_USER_UIDColumn {
                get {
                    return this.columnEMB_GETTER_USER_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_GETTER_EMAILColumn {
                get {
                    return this.columnEMB_GETTER_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_GETTER_NAMEColumn {
                get {
                    return this.columnEMB_GETTER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_BOX_HTMLColumn {
                get {
                    return this.columnEMB_BOX_HTML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMB_SUBJECTColumn {
                get {
                    return this.columnEMB_SUBJECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOXRow this[int index] {
                get {
                    return ((T_EMAIL_BOXRow)(this.Rows[index]));
                }
            }
            
            public event T_EMAIL_BOXRowChangeEventHandler T_EMAIL_BOXRowChanging;
            
            public event T_EMAIL_BOXRowChangeEventHandler T_EMAIL_BOXRowChanged;
            
            public event T_EMAIL_BOXRowChangeEventHandler T_EMAIL_BOXRowDeleting;
            
            public event T_EMAIL_BOXRowChangeEventHandler T_EMAIL_BOXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_EMAIL_BOXRow(T_EMAIL_BOXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOXRow AddT_EMAIL_BOXRow(System.DateTime EMB_PUBLISH_DATETIME, string EMB_SENDER_EMAIL, string EMB_SENDER_NAME, string EMB_GETTER_USER_UID, string EMB_GETTER_EMAIL, string EMB_GETTER_NAME, string EMB_BOX_HTML, string EMB_SUBJECT) {
                T_EMAIL_BOXRow rowT_EMAIL_BOXRow = ((T_EMAIL_BOXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EMB_PUBLISH_DATETIME,
                        EMB_SENDER_EMAIL,
                        EMB_SENDER_NAME,
                        EMB_GETTER_USER_UID,
                        EMB_GETTER_EMAIL,
                        EMB_GETTER_NAME,
                        EMB_BOX_HTML,
                        EMB_SUBJECT};
                rowT_EMAIL_BOXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_EMAIL_BOXRow);
                return rowT_EMAIL_BOXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOXRow FindByEMB_ID(int EMB_ID) {
                return ((T_EMAIL_BOXRow)(this.Rows.Find(new object[] {
                            EMB_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_EMAIL_BOXDataTable cln = ((T_EMAIL_BOXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_EMAIL_BOXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEMB_ID = base.Columns["EMB_ID"];
                this.columnEMB_PUBLISH_DATETIME = base.Columns["EMB_PUBLISH_DATETIME"];
                this.columnEMB_SENDER_EMAIL = base.Columns["EMB_SENDER_EMAIL"];
                this.columnEMB_SENDER_NAME = base.Columns["EMB_SENDER_NAME"];
                this.columnEMB_GETTER_USER_UID = base.Columns["EMB_GETTER_USER_UID"];
                this.columnEMB_GETTER_EMAIL = base.Columns["EMB_GETTER_EMAIL"];
                this.columnEMB_GETTER_NAME = base.Columns["EMB_GETTER_NAME"];
                this.columnEMB_BOX_HTML = base.Columns["EMB_BOX_HTML"];
                this.columnEMB_SUBJECT = base.Columns["EMB_SUBJECT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEMB_ID = new global::System.Data.DataColumn("EMB_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_ID);
                this.columnEMB_PUBLISH_DATETIME = new global::System.Data.DataColumn("EMB_PUBLISH_DATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_PUBLISH_DATETIME);
                this.columnEMB_SENDER_EMAIL = new global::System.Data.DataColumn("EMB_SENDER_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_SENDER_EMAIL);
                this.columnEMB_SENDER_NAME = new global::System.Data.DataColumn("EMB_SENDER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_SENDER_NAME);
                this.columnEMB_GETTER_USER_UID = new global::System.Data.DataColumn("EMB_GETTER_USER_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_GETTER_USER_UID);
                this.columnEMB_GETTER_EMAIL = new global::System.Data.DataColumn("EMB_GETTER_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_GETTER_EMAIL);
                this.columnEMB_GETTER_NAME = new global::System.Data.DataColumn("EMB_GETTER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_GETTER_NAME);
                this.columnEMB_BOX_HTML = new global::System.Data.DataColumn("EMB_BOX_HTML", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_BOX_HTML);
                this.columnEMB_SUBJECT = new global::System.Data.DataColumn("EMB_SUBJECT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMB_SUBJECT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEMB_ID}, true));
                this.columnEMB_ID.AutoIncrement = true;
                this.columnEMB_ID.AllowDBNull = false;
                this.columnEMB_ID.ReadOnly = true;
                this.columnEMB_ID.Unique = true;
                this.columnEMB_PUBLISH_DATETIME.AllowDBNull = false;
                this.columnEMB_SENDER_EMAIL.AllowDBNull = false;
                this.columnEMB_SENDER_EMAIL.MaxLength = 255;
                this.columnEMB_SENDER_NAME.AllowDBNull = false;
                this.columnEMB_SENDER_NAME.MaxLength = 255;
                this.columnEMB_GETTER_USER_UID.AllowDBNull = false;
                this.columnEMB_GETTER_EMAIL.AllowDBNull = false;
                this.columnEMB_GETTER_EMAIL.MaxLength = 255;
                this.columnEMB_GETTER_NAME.AllowDBNull = false;
                this.columnEMB_GETTER_NAME.MaxLength = 255;
                this.columnEMB_BOX_HTML.AllowDBNull = false;
                this.columnEMB_BOX_HTML.MaxLength = 2147483647;
                this.columnEMB_SUBJECT.AllowDBNull = false;
                this.columnEMB_SUBJECT.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOXRow NewT_EMAIL_BOXRow() {
                return ((T_EMAIL_BOXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_EMAIL_BOXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_EMAIL_BOXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_EMAIL_BOXRowChanged != null)) {
                    this.T_EMAIL_BOXRowChanged(this, new T_EMAIL_BOXRowChangeEvent(((T_EMAIL_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_EMAIL_BOXRowChanging != null)) {
                    this.T_EMAIL_BOXRowChanging(this, new T_EMAIL_BOXRowChangeEvent(((T_EMAIL_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_EMAIL_BOXRowDeleted != null)) {
                    this.T_EMAIL_BOXRowDeleted(this, new T_EMAIL_BOXRowChangeEvent(((T_EMAIL_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_EMAIL_BOXRowDeleting != null)) {
                    this.T_EMAIL_BOXRowDeleting(this, new T_EMAIL_BOXRowChangeEvent(((T_EMAIL_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_EMAIL_BOXRow(T_EMAIL_BOXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MailComposerDataSet ds = new MailComposerDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_EMAIL_BOXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_EMAIL_BOXRow : global::System.Data.DataRow {
            
            private T_EMAIL_BOXDataTable tableT_EMAIL_BOX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_EMAIL_BOXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_EMAIL_BOX = ((T_EMAIL_BOXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EMB_ID {
                get {
                    return ((int)(this[this.tableT_EMAIL_BOX.EMB_IDColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EMB_PUBLISH_DATETIME {
                get {
                    return ((global::System.DateTime)(this[this.tableT_EMAIL_BOX.EMB_PUBLISH_DATETIMEColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_PUBLISH_DATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMB_SENDER_EMAIL {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX.EMB_SENDER_EMAILColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_SENDER_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMB_SENDER_NAME {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX.EMB_SENDER_NAMEColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_SENDER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMB_GETTER_USER_UID {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX.EMB_GETTER_USER_UIDColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_GETTER_USER_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMB_GETTER_EMAIL {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX.EMB_GETTER_EMAILColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_GETTER_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMB_GETTER_NAME {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX.EMB_GETTER_NAMEColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_GETTER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMB_BOX_HTML {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX.EMB_BOX_HTMLColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_BOX_HTMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMB_SUBJECT {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX.EMB_SUBJECTColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX.EMB_SUBJECTColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_EMAIL_BOXRowChangeEvent : global::System.EventArgs {
            
            private T_EMAIL_BOXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOXRowChangeEvent(T_EMAIL_BOXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591