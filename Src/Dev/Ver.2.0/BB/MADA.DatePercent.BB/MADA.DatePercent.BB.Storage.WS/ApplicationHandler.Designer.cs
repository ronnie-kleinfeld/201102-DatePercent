//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MADA.DatePercent.BB.Storage.WS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ApplicationHandler")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ApplicationHandler : global::System.Data.DataSet {
        
        private T_DISTANCE_UNITS_TYPE_ENUMDataTable tableT_DISTANCE_UNITS_TYPE_ENUM;
        
        private T_SEX_TYPE_ENUMDataTable tableT_SEX_TYPE_ENUM;
        
        private T_SERIALIZERDataTable tableT_SERIALIZER;
        
        private T_LOCALE_TYPEDataTable tableT_LOCALE_TYPE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationHandler() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ApplicationHandler(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_DISTANCE_UNITS_TYPE_ENUMDataTable(ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SEX_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_SEX_TYPE_ENUMDataTable(ds.Tables["T_SEX_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SERIALIZER"] != null)) {
                    base.Tables.Add(new T_SERIALIZERDataTable(ds.Tables["T_SERIALIZER"]));
                }
                if ((ds.Tables["T_LOCALE_TYPE"] != null)) {
                    base.Tables.Add(new T_LOCALE_TYPEDataTable(ds.Tables["T_LOCALE_TYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DISTANCE_UNITS_TYPE_ENUMDataTable T_DISTANCE_UNITS_TYPE_ENUM {
            get {
                return this.tableT_DISTANCE_UNITS_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_SEX_TYPE_ENUMDataTable T_SEX_TYPE_ENUM {
            get {
                return this.tableT_SEX_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_SERIALIZERDataTable T_SERIALIZER {
            get {
                return this.tableT_SERIALIZER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_LOCALE_TYPEDataTable T_LOCALE_TYPE {
            get {
                return this.tableT_LOCALE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ApplicationHandler cln = ((ApplicationHandler)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_DISTANCE_UNITS_TYPE_ENUMDataTable(ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SEX_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_SEX_TYPE_ENUMDataTable(ds.Tables["T_SEX_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SERIALIZER"] != null)) {
                    base.Tables.Add(new T_SERIALIZERDataTable(ds.Tables["T_SERIALIZER"]));
                }
                if ((ds.Tables["T_LOCALE_TYPE"] != null)) {
                    base.Tables.Add(new T_LOCALE_TYPEDataTable(ds.Tables["T_LOCALE_TYPE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_DISTANCE_UNITS_TYPE_ENUM = ((T_DISTANCE_UNITS_TYPE_ENUMDataTable)(base.Tables["T_DISTANCE_UNITS_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_DISTANCE_UNITS_TYPE_ENUM != null)) {
                    this.tableT_DISTANCE_UNITS_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_SEX_TYPE_ENUM = ((T_SEX_TYPE_ENUMDataTable)(base.Tables["T_SEX_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_SEX_TYPE_ENUM != null)) {
                    this.tableT_SEX_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_SERIALIZER = ((T_SERIALIZERDataTable)(base.Tables["T_SERIALIZER"]));
            if ((initTable == true)) {
                if ((this.tableT_SERIALIZER != null)) {
                    this.tableT_SERIALIZER.InitVars();
                }
            }
            this.tableT_LOCALE_TYPE = ((T_LOCALE_TYPEDataTable)(base.Tables["T_LOCALE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_LOCALE_TYPE != null)) {
                    this.tableT_LOCALE_TYPE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ApplicationHandler";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ApplicationHandler.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_DISTANCE_UNITS_TYPE_ENUM = new T_DISTANCE_UNITS_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_DISTANCE_UNITS_TYPE_ENUM);
            this.tableT_SEX_TYPE_ENUM = new T_SEX_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_SEX_TYPE_ENUM);
            this.tableT_SERIALIZER = new T_SERIALIZERDataTable();
            base.Tables.Add(this.tableT_SERIALIZER);
            this.tableT_LOCALE_TYPE = new T_LOCALE_TYPEDataTable();
            base.Tables.Add(this.tableT_LOCALE_TYPE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_DISTANCE_UNITS_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_SEX_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_SERIALIZER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_LOCALE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ApplicationHandler ds = new ApplicationHandler();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler(object sender, T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_SEX_TYPE_ENUMRowChangeEventHandler(object sender, T_SEX_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_SERIALIZERRowChangeEventHandler(object sender, T_SERIALIZERRowChangeEvent e);
        
        public delegate void T_LOCALE_TYPERowChangeEventHandler(object sender, T_LOCALE_TYPERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_DISTANCE_UNITS_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDUT_CODE;
            
            private global::System.Data.DataColumn columnDUT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMDataTable() {
                this.TableName = "T_DISTANCE_UNITS_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DISTANCE_UNITS_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_DISTANCE_UNITS_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUT_CODEColumn {
                get {
                    return this.columnDUT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUT_DESCRIPTIONColumn {
                get {
                    return this.columnDUT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowChanging;
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowChanged;
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowDeleting;
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_DISTANCE_UNITS_TYPE_ENUMRow(T_DISTANCE_UNITS_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow AddT_DISTANCE_UNITS_TYPE_ENUMRow(int DUT_CODE, string DUT_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_DISTANCE_UNITS_TYPE_ENUMRow rowT_DISTANCE_UNITS_TYPE_ENUMRow = ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DUT_CODE,
                        DUT_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_DISTANCE_UNITS_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_DISTANCE_UNITS_TYPE_ENUMRow);
                return rowT_DISTANCE_UNITS_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow FindByDUT_CODE(int DUT_CODE) {
                return ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            DUT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_DISTANCE_UNITS_TYPE_ENUMDataTable cln = ((T_DISTANCE_UNITS_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_DISTANCE_UNITS_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDUT_CODE = base.Columns["DUT_CODE"];
                this.columnDUT_DESCRIPTION = base.Columns["DUT_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDUT_CODE = new global::System.Data.DataColumn("DUT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUT_CODE);
                this.columnDUT_DESCRIPTION = new global::System.Data.DataColumn("DUT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUT_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDUT_CODE}, true));
                this.columnDUT_CODE.AllowDBNull = false;
                this.columnDUT_CODE.Unique = true;
                this.columnDUT_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow NewT_DISTANCE_UNITS_TYPE_ENUMRow() {
                return ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_DISTANCE_UNITS_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_DISTANCE_UNITS_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowChanged != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowChanged(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowChanging != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowChanging(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleted != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleted(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleting != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleting(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_DISTANCE_UNITS_TYPE_ENUMRow(T_DISTANCE_UNITS_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_DISTANCE_UNITS_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_SEX_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSEX_CODE;
            
            private global::System.Data.DataColumn columnSEX_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SEX_TYPE_ENUMDataTable() {
                this.TableName = "T_SEX_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SEX_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_SEX_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEX_CODEColumn {
                get {
                    return this.columnSEX_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEX_DESCRIPTIONColumn {
                get {
                    return this.columnSEX_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SEX_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_SEX_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_SEX_TYPE_ENUMRowChangeEventHandler T_SEX_TYPE_ENUMRowChanging;
            
            public event T_SEX_TYPE_ENUMRowChangeEventHandler T_SEX_TYPE_ENUMRowChanged;
            
            public event T_SEX_TYPE_ENUMRowChangeEventHandler T_SEX_TYPE_ENUMRowDeleting;
            
            public event T_SEX_TYPE_ENUMRowChangeEventHandler T_SEX_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_SEX_TYPE_ENUMRow(T_SEX_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SEX_TYPE_ENUMRow AddT_SEX_TYPE_ENUMRow(int SEX_CODE, string SEX_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_SEX_TYPE_ENUMRow rowT_SEX_TYPE_ENUMRow = ((T_SEX_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SEX_CODE,
                        SEX_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_SEX_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_SEX_TYPE_ENUMRow);
                return rowT_SEX_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SEX_TYPE_ENUMRow FindBySEX_CODE(int SEX_CODE) {
                return ((T_SEX_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            SEX_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_SEX_TYPE_ENUMDataTable cln = ((T_SEX_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_SEX_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSEX_CODE = base.Columns["SEX_CODE"];
                this.columnSEX_DESCRIPTION = base.Columns["SEX_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSEX_CODE = new global::System.Data.DataColumn("SEX_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX_CODE);
                this.columnSEX_DESCRIPTION = new global::System.Data.DataColumn("SEX_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSEX_CODE}, true));
                this.columnSEX_CODE.AllowDBNull = false;
                this.columnSEX_CODE.Unique = true;
                this.columnSEX_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SEX_TYPE_ENUMRow NewT_SEX_TYPE_ENUMRow() {
                return ((T_SEX_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_SEX_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_SEX_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_SEX_TYPE_ENUMRowChanged != null)) {
                    this.T_SEX_TYPE_ENUMRowChanged(this, new T_SEX_TYPE_ENUMRowChangeEvent(((T_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_SEX_TYPE_ENUMRowChanging != null)) {
                    this.T_SEX_TYPE_ENUMRowChanging(this, new T_SEX_TYPE_ENUMRowChangeEvent(((T_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_SEX_TYPE_ENUMRowDeleted != null)) {
                    this.T_SEX_TYPE_ENUMRowDeleted(this, new T_SEX_TYPE_ENUMRowChangeEvent(((T_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_SEX_TYPE_ENUMRowDeleting != null)) {
                    this.T_SEX_TYPE_ENUMRowDeleting(this, new T_SEX_TYPE_ENUMRowChangeEvent(((T_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_SEX_TYPE_ENUMRow(T_SEX_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_SEX_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_SERIALIZERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSRL_DESCRIPTION;
            
            private global::System.Data.DataColumn columnSRL_KEY_1;
            
            private global::System.Data.DataColumn columnSRL_KEY_2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERDataTable() {
                this.TableName = "T_SERIALIZER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SERIALIZERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_SERIALIZERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SRL_DESCRIPTIONColumn {
                get {
                    return this.columnSRL_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SRL_KEY_1Column {
                get {
                    return this.columnSRL_KEY_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SRL_KEY_2Column {
                get {
                    return this.columnSRL_KEY_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow this[int index] {
                get {
                    return ((T_SERIALIZERRow)(this.Rows[index]));
                }
            }
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowChanging;
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowChanged;
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowDeleting;
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_SERIALIZERRow(T_SERIALIZERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow AddT_SERIALIZERRow(string SRL_DESCRIPTION, string SRL_KEY_1, string SRL_KEY_2) {
                T_SERIALIZERRow rowT_SERIALIZERRow = ((T_SERIALIZERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SRL_DESCRIPTION,
                        SRL_KEY_1,
                        SRL_KEY_2};
                rowT_SERIALIZERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_SERIALIZERRow);
                return rowT_SERIALIZERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow FindBySRL_DESCRIPTION(string SRL_DESCRIPTION) {
                return ((T_SERIALIZERRow)(this.Rows.Find(new object[] {
                            SRL_DESCRIPTION})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_SERIALIZERDataTable cln = ((T_SERIALIZERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_SERIALIZERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSRL_DESCRIPTION = base.Columns["SRL_DESCRIPTION"];
                this.columnSRL_KEY_1 = base.Columns["SRL_KEY_1"];
                this.columnSRL_KEY_2 = base.Columns["SRL_KEY_2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSRL_DESCRIPTION = new global::System.Data.DataColumn("SRL_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRL_DESCRIPTION);
                this.columnSRL_KEY_1 = new global::System.Data.DataColumn("SRL_KEY_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRL_KEY_1);
                this.columnSRL_KEY_2 = new global::System.Data.DataColumn("SRL_KEY_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRL_KEY_2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSRL_DESCRIPTION}, true));
                this.columnSRL_DESCRIPTION.AllowDBNull = false;
                this.columnSRL_DESCRIPTION.Unique = true;
                this.columnSRL_DESCRIPTION.MaxLength = 255;
                this.columnSRL_KEY_1.MaxLength = 5;
                this.columnSRL_KEY_2.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow NewT_SERIALIZERRow() {
                return ((T_SERIALIZERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_SERIALIZERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_SERIALIZERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_SERIALIZERRowChanged != null)) {
                    this.T_SERIALIZERRowChanged(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_SERIALIZERRowChanging != null)) {
                    this.T_SERIALIZERRowChanging(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_SERIALIZERRowDeleted != null)) {
                    this.T_SERIALIZERRowDeleted(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_SERIALIZERRowDeleting != null)) {
                    this.T_SERIALIZERRowDeleting(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_SERIALIZERRow(T_SERIALIZERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_SERIALIZERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_LOCALE_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLCL_CODE;
            
            private global::System.Data.DataColumn columnLCL_LOCALE;
            
            private global::System.Data.DataColumn columnLCL_ENGLISH_NAME;
            
            private global::System.Data.DataColumn columnLCL_NATIVE_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOCALE_TYPEDataTable() {
                this.TableName = "T_LOCALE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOCALE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_LOCALE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCL_CODEColumn {
                get {
                    return this.columnLCL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCL_LOCALEColumn {
                get {
                    return this.columnLCL_LOCALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCL_ENGLISH_NAMEColumn {
                get {
                    return this.columnLCL_ENGLISH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCL_NATIVE_NAMEColumn {
                get {
                    return this.columnLCL_NATIVE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOCALE_TYPERow this[int index] {
                get {
                    return ((T_LOCALE_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_LOCALE_TYPERowChangeEventHandler T_LOCALE_TYPERowChanging;
            
            public event T_LOCALE_TYPERowChangeEventHandler T_LOCALE_TYPERowChanged;
            
            public event T_LOCALE_TYPERowChangeEventHandler T_LOCALE_TYPERowDeleting;
            
            public event T_LOCALE_TYPERowChangeEventHandler T_LOCALE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_LOCALE_TYPERow(T_LOCALE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOCALE_TYPERow AddT_LOCALE_TYPERow(int LCL_CODE, string LCL_LOCALE, string LCL_ENGLISH_NAME, string LCL_NATIVE_NAME) {
                T_LOCALE_TYPERow rowT_LOCALE_TYPERow = ((T_LOCALE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LCL_CODE,
                        LCL_LOCALE,
                        LCL_ENGLISH_NAME,
                        LCL_NATIVE_NAME};
                rowT_LOCALE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_LOCALE_TYPERow);
                return rowT_LOCALE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOCALE_TYPERow FindByLCL_CODE(int LCL_CODE) {
                return ((T_LOCALE_TYPERow)(this.Rows.Find(new object[] {
                            LCL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_LOCALE_TYPEDataTable cln = ((T_LOCALE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_LOCALE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLCL_CODE = base.Columns["LCL_CODE"];
                this.columnLCL_LOCALE = base.Columns["LCL_LOCALE"];
                this.columnLCL_ENGLISH_NAME = base.Columns["LCL_ENGLISH_NAME"];
                this.columnLCL_NATIVE_NAME = base.Columns["LCL_NATIVE_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLCL_CODE = new global::System.Data.DataColumn("LCL_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCL_CODE);
                this.columnLCL_LOCALE = new global::System.Data.DataColumn("LCL_LOCALE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCL_LOCALE);
                this.columnLCL_ENGLISH_NAME = new global::System.Data.DataColumn("LCL_ENGLISH_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCL_ENGLISH_NAME);
                this.columnLCL_NATIVE_NAME = new global::System.Data.DataColumn("LCL_NATIVE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCL_NATIVE_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLCL_CODE}, true));
                this.columnLCL_CODE.AllowDBNull = false;
                this.columnLCL_CODE.Unique = true;
                this.columnLCL_LOCALE.AllowDBNull = false;
                this.columnLCL_LOCALE.MaxLength = 5;
                this.columnLCL_ENGLISH_NAME.AllowDBNull = false;
                this.columnLCL_ENGLISH_NAME.MaxLength = 50;
                this.columnLCL_NATIVE_NAME.AllowDBNull = false;
                this.columnLCL_NATIVE_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOCALE_TYPERow NewT_LOCALE_TYPERow() {
                return ((T_LOCALE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_LOCALE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_LOCALE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_LOCALE_TYPERowChanged != null)) {
                    this.T_LOCALE_TYPERowChanged(this, new T_LOCALE_TYPERowChangeEvent(((T_LOCALE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_LOCALE_TYPERowChanging != null)) {
                    this.T_LOCALE_TYPERowChanging(this, new T_LOCALE_TYPERowChangeEvent(((T_LOCALE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_LOCALE_TYPERowDeleted != null)) {
                    this.T_LOCALE_TYPERowDeleted(this, new T_LOCALE_TYPERowChangeEvent(((T_LOCALE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_LOCALE_TYPERowDeleting != null)) {
                    this.T_LOCALE_TYPERowDeleting(this, new T_LOCALE_TYPERowChangeEvent(((T_LOCALE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_LOCALE_TYPERow(T_LOCALE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_LOCALE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_DISTANCE_UNITS_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_DISTANCE_UNITS_TYPE_ENUMDataTable tableT_DISTANCE_UNITS_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DISTANCE_UNITS_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_DISTANCE_UNITS_TYPE_ENUM = ((T_DISTANCE_UNITS_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DUT_CODE {
                get {
                    return ((int)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_CODEColumn]));
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DUT_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUT_DESCRIPTION\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDUT_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDUT_DESCRIPTIONNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_SEX_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_SEX_TYPE_ENUMDataTable tableT_SEX_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SEX_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_SEX_TYPE_ENUM = ((T_SEX_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEX_CODE {
                get {
                    return ((int)(this[this.tableT_SEX_TYPE_ENUM.SEX_CODEColumn]));
                }
                set {
                    this[this.tableT_SEX_TYPE_ENUM.SEX_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX_DESCRIPTION\' in table \'T_SEX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_SEX_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_SEX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SEX_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_SEX_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_SEX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SEX_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_SEX_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_SEX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SEX_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEX_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEX_DESCRIPTIONNull() {
                this[this.tableT_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_SEX_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_SEX_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_SEX_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_SEX_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_SEX_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_SEX_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_SERIALIZERRow : global::System.Data.DataRow {
            
            private T_SERIALIZERDataTable tableT_SERIALIZER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SERIALIZERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_SERIALIZER = ((T_SERIALIZERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRL_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_SERIALIZER.SRL_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_SERIALIZER.SRL_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRL_KEY_1 {
                get {
                    try {
                        return ((string)(this[this.tableT_SERIALIZER.SRL_KEY_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SRL_KEY_1\' in table \'T_SERIALIZER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SERIALIZER.SRL_KEY_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRL_KEY_2 {
                get {
                    try {
                        return ((string)(this[this.tableT_SERIALIZER.SRL_KEY_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SRL_KEY_2\' in table \'T_SERIALIZER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SERIALIZER.SRL_KEY_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSRL_KEY_1Null() {
                return this.IsNull(this.tableT_SERIALIZER.SRL_KEY_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSRL_KEY_1Null() {
                this[this.tableT_SERIALIZER.SRL_KEY_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSRL_KEY_2Null() {
                return this.IsNull(this.tableT_SERIALIZER.SRL_KEY_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSRL_KEY_2Null() {
                this[this.tableT_SERIALIZER.SRL_KEY_2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_LOCALE_TYPERow : global::System.Data.DataRow {
            
            private T_LOCALE_TYPEDataTable tableT_LOCALE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LOCALE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_LOCALE_TYPE = ((T_LOCALE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LCL_CODE {
                get {
                    return ((int)(this[this.tableT_LOCALE_TYPE.LCL_CODEColumn]));
                }
                set {
                    this[this.tableT_LOCALE_TYPE.LCL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LCL_LOCALE {
                get {
                    return ((string)(this[this.tableT_LOCALE_TYPE.LCL_LOCALEColumn]));
                }
                set {
                    this[this.tableT_LOCALE_TYPE.LCL_LOCALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LCL_ENGLISH_NAME {
                get {
                    return ((string)(this[this.tableT_LOCALE_TYPE.LCL_ENGLISH_NAMEColumn]));
                }
                set {
                    this[this.tableT_LOCALE_TYPE.LCL_ENGLISH_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LCL_NATIVE_NAME {
                get {
                    return ((string)(this[this.tableT_LOCALE_TYPE.LCL_NATIVE_NAMEColumn]));
                }
                set {
                    this[this.tableT_LOCALE_TYPE.LCL_NATIVE_NAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_DISTANCE_UNITS_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(T_DISTANCE_UNITS_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_SEX_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_SEX_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SEX_TYPE_ENUMRowChangeEvent(T_SEX_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SEX_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_SERIALIZERRowChangeEvent : global::System.EventArgs {
            
            private T_SERIALIZERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRowChangeEvent(T_SERIALIZERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_LOCALE_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_LOCALE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOCALE_TYPERowChangeEvent(T_LOCALE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LOCALE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591