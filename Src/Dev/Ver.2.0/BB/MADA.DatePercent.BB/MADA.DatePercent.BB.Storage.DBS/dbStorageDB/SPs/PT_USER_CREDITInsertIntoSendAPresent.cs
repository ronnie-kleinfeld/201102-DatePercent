//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by the Database Schema tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
//
//     Exception should be handled in a higher layer.
//
//     generation time: 29/03/2012 14:43
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using Microsoft.Practices.EnterpriseLibrary.Data;

namespace MADA.DatePercent.BB.Storage.DBS.dbStorageDB.SPs
{
public class procPT_USER_CREDITInsertIntoSendAPresent
{
public const string _Name = "PT_USER_CREDITInsertIntoSendAPresent";
public const string _Caption = "PT_ USER_ CREDITInsert Into Send APresent";

public static SqlCommand SqlCommand()
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "PT_USER_CREDITInsertIntoSendAPresent";
SqlParameterCollection(cmd.Parameters);
return cmd;
}
public static SqlCommand SqlCommand(
System.Nullable<int> p_iUSD_CREDITS, System.Nullable<int> p_iUSD_PRESENT_CODE, System.Nullable<int> p_iUSD_USER_ID)
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "PT_USER_CREDITInsertIntoSendAPresent";
SqlParameterCollection(cmd.Parameters, p_iUSD_CREDITS, p_iUSD_PRESENT_CODE, p_iUSD_USER_ID);
return cmd;
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parUSD_CREDITS._SqlParameter());
p_oSqlParameterCollection.Add(parUSD_PRESENT_CODE._SqlParameter());
p_oSqlParameterCollection.Add(parUSD_USER_ID._SqlParameter());
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection
, System.Nullable<int> p_iUSD_CREDITS, System.Nullable<int> p_iUSD_PRESENT_CODE, System.Nullable<int> p_iUSD_USER_ID)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parUSD_CREDITS._SqlParameter(p_iUSD_CREDITS));
p_oSqlParameterCollection.Add(parUSD_PRESENT_CODE._SqlParameter(p_iUSD_PRESENT_CODE));
p_oSqlParameterCollection.Add(parUSD_USER_ID._SqlParameter(p_iUSD_USER_ID));
}
public class parUSD_CREDITS
{
public const string _Name = "@USD_CREDITS";
public const string _Caption = "@ USD_ CREDITS";
public const string _ParentName = "PT_USER_CREDITInsertIntoSendAPresent";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_CREDITInsertIntoSendAPresent.DefaultView.[0].@USD_CREDITS";
public const string _BindDataReader = "[@USD_CREDITS]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_CREDITS", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<int> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_CREDITS", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUSD_PRESENT_CODE
{
public const string _Name = "@USD_PRESENT_CODE";
public const string _Caption = "@ USD_ PRESENT_ CODE";
public const string _ParentName = "PT_USER_CREDITInsertIntoSendAPresent";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_CREDITInsertIntoSendAPresent.DefaultView.[0].@USD_PRESENT_CODE";
public const string _BindDataReader = "[@USD_PRESENT_CODE]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_PRESENT_CODE", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<int> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_PRESENT_CODE", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUSD_USER_ID
{
public const string _Name = "@USD_USER_ID";
public const string _Caption = "@ USD_ USER_ ID";
public const string _ParentName = "PT_USER_CREDITInsertIntoSendAPresent";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_CREDITInsertIntoSendAPresent.DefaultView.[0].@USD_USER_ID";
public const string _BindDataReader = "[@USD_USER_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<int> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "", Value);
}
}
public class inUSD_CREDITS : parUSD_CREDITS {}
public class inUSD_PRESENT_CODE : parUSD_PRESENT_CODE {}
public class inUSD_USER_ID : parUSD_USER_ID {}
public static int ExecuteNonQuery(
System.Nullable<int> p_iUSD_CREDITS, System.Nullable<int> p_iUSD_PRESENT_CODE, System.Nullable<int> p_iUSD_USER_ID)
{
try
{
Microsoft.Practices.EnterpriseLibrary.Data.Database db = DatabaseFactory.CreateDatabase();
SqlCommand cmd = SqlCommand(p_iUSD_CREDITS, p_iUSD_PRESENT_CODE, p_iUSD_USER_ID);
int iResult = db.ExecuteNonQuery(cmd);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.BB.Storage.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
public static int ExecuteNonQuery(
System.Nullable<int> p_iUSD_CREDITS, System.Nullable<int> p_iUSD_PRESENT_CODE, System.Nullable<int> p_iUSD_USER_ID,Microsoft.Practices.EnterpriseLibrary.Data.Database p_db,System.Data.Common.DbTransaction p_trn)
{
try
{
SqlCommand cmd = SqlCommand(p_iUSD_CREDITS, p_iUSD_PRESENT_CODE, p_iUSD_USER_ID);
int iResult = p_db.ExecuteNonQuery(cmd, p_trn);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.BB.Storage.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
}
}
