//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by the Database Schema tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
//
//     Exception should be handled in a higher layer.
//
//     generation time: 29/03/2012 14:43
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using Microsoft.Practices.EnterpriseLibrary.Data;

namespace MADA.DatePercent.BB.Storage.DBS.dbStorageDB.SPs
{
public class procPT_USER_TRANSACTIONInsertInto
{
public const string _Name = "PT_USER_TRANSACTIONInsertInto";
public const string _Caption = "PT_ USER_ TRANSACTIONInsert Into";

public static SqlCommand SqlCommand()
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "PT_USER_TRANSACTIONInsertInto";
SqlParameterCollection(cmd.Parameters);
return cmd;
}
public static SqlCommand SqlCommand(
System.Nullable<int> p_iUPT_CREDITS, string p_strUPT_CUSTOM, System.Nullable<int> p_iUPT_ID, string p_strUPT_IPN_DATA, string p_strUPT_ITEM_NAME, string p_strUPT_ITEM_NUMBER, System.Nullable<decimal> p_decUPT_MC_FEE, System.Nullable<decimal> p_decUPT_MC_GROSS, string p_strUPT_NOTIFICATION_ID, System.Nullable<int> p_iUPT_PAYED_FOR_USER_ID, string p_strUPT_PAYER_BUSINESS_NAME, string p_strUPT_PAYER_EMAIL, string p_strUPT_PAYER_FIRST_NAME, string p_strUPT_PAYER_FOR_UID, string p_strUPT_PAYER_ID, string p_strUPT_PAYER_LAST_NAME, string p_strUPT_PAYER_UID, string p_strUPT_PAYMENT_STATUS, string p_strUPT_RESIDENCE_COUNTRY, string p_strUPT_TRANSACTION_ID, System.Nullable<int> p_iUPT_USER_ID)
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "PT_USER_TRANSACTIONInsertInto";
SqlParameterCollection(cmd.Parameters, p_iUPT_CREDITS, p_strUPT_CUSTOM, p_iUPT_ID, p_strUPT_IPN_DATA, p_strUPT_ITEM_NAME, p_strUPT_ITEM_NUMBER, p_decUPT_MC_FEE, p_decUPT_MC_GROSS, p_strUPT_NOTIFICATION_ID, p_iUPT_PAYED_FOR_USER_ID, p_strUPT_PAYER_BUSINESS_NAME, p_strUPT_PAYER_EMAIL, p_strUPT_PAYER_FIRST_NAME, p_strUPT_PAYER_FOR_UID, p_strUPT_PAYER_ID, p_strUPT_PAYER_LAST_NAME, p_strUPT_PAYER_UID, p_strUPT_PAYMENT_STATUS, p_strUPT_RESIDENCE_COUNTRY, p_strUPT_TRANSACTION_ID, p_iUPT_USER_ID);
return cmd;
}
public static void SqlCommandOutput(
System.Data.SqlClient.SqlCommand p_cmd,
out object p_iUPT_ID)
{
p_iUPT_ID = p_cmd.Parameters["@UPT_ID"].Value;
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parUPT_CREDITS._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_CUSTOM._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_IPN_DATA._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_ITEM_NAME._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_ITEM_NUMBER._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_MC_FEE._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_MC_GROSS._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_NOTIFICATION_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYED_FOR_USER_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYER_BUSINESS_NAME._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYER_EMAIL._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYER_FIRST_NAME._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYER_FOR_UID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYER_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYER_LAST_NAME._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYER_UID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_PAYMENT_STATUS._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_RESIDENCE_COUNTRY._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_TRANSACTION_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_USER_ID._SqlParameter());
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection
, System.Nullable<int> p_iUPT_CREDITS, string p_strUPT_CUSTOM, System.Nullable<int> p_iUPT_ID, string p_strUPT_IPN_DATA, string p_strUPT_ITEM_NAME, string p_strUPT_ITEM_NUMBER, System.Nullable<decimal> p_decUPT_MC_FEE, System.Nullable<decimal> p_decUPT_MC_GROSS, string p_strUPT_NOTIFICATION_ID, System.Nullable<int> p_iUPT_PAYED_FOR_USER_ID, string p_strUPT_PAYER_BUSINESS_NAME, string p_strUPT_PAYER_EMAIL, string p_strUPT_PAYER_FIRST_NAME, string p_strUPT_PAYER_FOR_UID, string p_strUPT_PAYER_ID, string p_strUPT_PAYER_LAST_NAME, string p_strUPT_PAYER_UID, string p_strUPT_PAYMENT_STATUS, string p_strUPT_RESIDENCE_COUNTRY, string p_strUPT_TRANSACTION_ID, System.Nullable<int> p_iUPT_USER_ID)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parUPT_CREDITS._SqlParameter(p_iUPT_CREDITS));
p_oSqlParameterCollection.Add(parUPT_CUSTOM._SqlParameter(p_strUPT_CUSTOM));
p_oSqlParameterCollection.Add(parUPT_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUPT_IPN_DATA._SqlParameter(p_strUPT_IPN_DATA));
p_oSqlParameterCollection.Add(parUPT_ITEM_NAME._SqlParameter(p_strUPT_ITEM_NAME));
p_oSqlParameterCollection.Add(parUPT_ITEM_NUMBER._SqlParameter(p_strUPT_ITEM_NUMBER));
p_oSqlParameterCollection.Add(parUPT_MC_FEE._SqlParameter(p_decUPT_MC_FEE));
p_oSqlParameterCollection.Add(parUPT_MC_GROSS._SqlParameter(p_decUPT_MC_GROSS));
p_oSqlParameterCollection.Add(parUPT_NOTIFICATION_ID._SqlParameter(p_strUPT_NOTIFICATION_ID));
p_oSqlParameterCollection.Add(parUPT_PAYED_FOR_USER_ID._SqlParameter(p_iUPT_PAYED_FOR_USER_ID));
p_oSqlParameterCollection.Add(parUPT_PAYER_BUSINESS_NAME._SqlParameter(p_strUPT_PAYER_BUSINESS_NAME));
p_oSqlParameterCollection.Add(parUPT_PAYER_EMAIL._SqlParameter(p_strUPT_PAYER_EMAIL));
p_oSqlParameterCollection.Add(parUPT_PAYER_FIRST_NAME._SqlParameter(p_strUPT_PAYER_FIRST_NAME));
p_oSqlParameterCollection.Add(parUPT_PAYER_FOR_UID._SqlParameter(p_strUPT_PAYER_FOR_UID));
p_oSqlParameterCollection.Add(parUPT_PAYER_ID._SqlParameter(p_strUPT_PAYER_ID));
p_oSqlParameterCollection.Add(parUPT_PAYER_LAST_NAME._SqlParameter(p_strUPT_PAYER_LAST_NAME));
p_oSqlParameterCollection.Add(parUPT_PAYER_UID._SqlParameter(p_strUPT_PAYER_UID));
p_oSqlParameterCollection.Add(parUPT_PAYMENT_STATUS._SqlParameter(p_strUPT_PAYMENT_STATUS));
p_oSqlParameterCollection.Add(parUPT_RESIDENCE_COUNTRY._SqlParameter(p_strUPT_RESIDENCE_COUNTRY));
p_oSqlParameterCollection.Add(parUPT_TRANSACTION_ID._SqlParameter(p_strUPT_TRANSACTION_ID));
p_oSqlParameterCollection.Add(parUPT_USER_ID._SqlParameter(p_iUPT_USER_ID));
}
public class parUPT_CREDITS
{
public const string _Name = "@UPT_CREDITS";
public const string _Caption = "@ UPT_ CREDITS";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_CREDITS";
public const string _BindDataReader = "[@UPT_CREDITS]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_CREDITS", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<int> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_CREDITS", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_CUSTOM
{
public const string _Name = "@UPT_CUSTOM";
public const string _Caption = "@ UPT_ CUSTOM";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_CUSTOM";
public const string _BindDataReader = "[@UPT_CUSTOM]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_CUSTOM", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_CUSTOM", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_ID
{
public const string _Name = "@UPT_ID";
public const string _Caption = "@ UPT_ ID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_ID";
public const string _BindDataReader = "[@UPT_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Output;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameter("@UPT_ID", 10, 0, 4, SqlDbType.Int, ParameterDirection.Output, true);
}
}
public class parUPT_IPN_DATA
{
public const string _Name = "@UPT_IPN_DATA";
public const string _Caption = "@ UPT_ IPN_ DATA";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 0;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_IPN_DATA";
public const string _BindDataReader = "[@UPT_IPN_DATA]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_IPN_DATA", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_IPN_DATA", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_ITEM_NAME
{
public const string _Name = "@UPT_ITEM_NAME";
public const string _Caption = "@ UPT_ ITEM_ NAME";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_ITEM_NAME";
public const string _BindDataReader = "[@UPT_ITEM_NAME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_ITEM_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_ITEM_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_ITEM_NUMBER
{
public const string _Name = "@UPT_ITEM_NUMBER";
public const string _Caption = "@ UPT_ ITEM_ NUMBER";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 50;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_ITEM_NUMBER";
public const string _BindDataReader = "[@UPT_ITEM_NUMBER]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_ITEM_NUMBER", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_ITEM_NUMBER", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_MC_FEE
{
public const string _Name = "@UPT_MC_FEE";
public const string _Caption = "@ UPT_ MC_ FEE";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Decimal;
public const Int32 _Length = 9;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_MC_FEE";
public const string _BindDataReader = "[@UPT_MC_FEE]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_MC_FEE", 18, 2, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<decimal> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_MC_FEE", 18, 2, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_MC_GROSS
{
public const string _Name = "@UPT_MC_GROSS";
public const string _Caption = "@ UPT_ MC_ GROSS";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Decimal;
public const Int32 _Length = 9;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_MC_GROSS";
public const string _BindDataReader = "[@UPT_MC_GROSS]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_MC_GROSS", 18, 2, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<decimal> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_MC_GROSS", 18, 2, 9, SqlDbType.Decimal, "decimal", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_NOTIFICATION_ID
{
public const string _Name = "@UPT_NOTIFICATION_ID";
public const string _Caption = "@ UPT_ NOTIFICATION_ ID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_NOTIFICATION_ID";
public const string _BindDataReader = "[@UPT_NOTIFICATION_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_NOTIFICATION_ID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_NOTIFICATION_ID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYED_FOR_USER_ID
{
public const string _Name = "@UPT_PAYED_FOR_USER_ID";
public const string _Caption = "@ UPT_ PAYED_ FOR_ USER_ ID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYED_FOR_USER_ID";
public const string _BindDataReader = "[@UPT_PAYED_FOR_USER_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYED_FOR_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<int> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYED_FOR_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYER_BUSINESS_NAME
{
public const string _Name = "@UPT_PAYER_BUSINESS_NAME";
public const string _Caption = "@ UPT_ PAYER_ BUSINESS_ NAME";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYER_BUSINESS_NAME";
public const string _BindDataReader = "[@UPT_PAYER_BUSINESS_NAME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_BUSINESS_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_BUSINESS_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYER_EMAIL
{
public const string _Name = "@UPT_PAYER_EMAIL";
public const string _Caption = "@ UPT_ PAYER_ EMAIL";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYER_EMAIL";
public const string _BindDataReader = "[@UPT_PAYER_EMAIL]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_EMAIL", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_EMAIL", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYER_FIRST_NAME
{
public const string _Name = "@UPT_PAYER_FIRST_NAME";
public const string _Caption = "@ UPT_ PAYER_ FIRST_ NAME";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYER_FIRST_NAME";
public const string _BindDataReader = "[@UPT_PAYER_FIRST_NAME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_FIRST_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_FIRST_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYER_FOR_UID
{
public const string _Name = "@UPT_PAYER_FOR_UID";
public const string _Caption = "@ UPT_ PAYER_ FOR_ UID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYER_FOR_UID";
public const string _BindDataReader = "[@UPT_PAYER_FOR_UID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_FOR_UID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_FOR_UID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYER_ID
{
public const string _Name = "@UPT_PAYER_ID";
public const string _Caption = "@ UPT_ PAYER_ ID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 50;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYER_ID";
public const string _BindDataReader = "[@UPT_PAYER_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_ID", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_ID", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYER_LAST_NAME
{
public const string _Name = "@UPT_PAYER_LAST_NAME";
public const string _Caption = "@ UPT_ PAYER_ LAST_ NAME";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYER_LAST_NAME";
public const string _BindDataReader = "[@UPT_PAYER_LAST_NAME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_LAST_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_LAST_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYER_UID
{
public const string _Name = "@UPT_PAYER_UID";
public const string _Caption = "@ UPT_ PAYER_ UID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYER_UID";
public const string _BindDataReader = "[@UPT_PAYER_UID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_UID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYER_UID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_PAYMENT_STATUS
{
public const string _Name = "@UPT_PAYMENT_STATUS";
public const string _Caption = "@ UPT_ PAYMENT_ STATUS";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 50;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_PAYMENT_STATUS";
public const string _BindDataReader = "[@UPT_PAYMENT_STATUS]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYMENT_STATUS", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_PAYMENT_STATUS", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_RESIDENCE_COUNTRY
{
public const string _Name = "@UPT_RESIDENCE_COUNTRY";
public const string _Caption = "@ UPT_ RESIDENCE_ COUNTRY";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 50;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_RESIDENCE_COUNTRY";
public const string _BindDataReader = "[@UPT_RESIDENCE_COUNTRY]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_RESIDENCE_COUNTRY", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_RESIDENCE_COUNTRY", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_TRANSACTION_ID
{
public const string _Name = "@UPT_TRANSACTION_ID";
public const string _Caption = "@ UPT_ TRANSACTION_ ID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_TRANSACTION_ID";
public const string _BindDataReader = "[@UPT_TRANSACTION_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_TRANSACTION_ID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_TRANSACTION_ID", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUPT_USER_ID
{
public const string _Name = "@UPT_USER_ID";
public const string _Caption = "@ UPT_ USER_ ID";
public const string _ParentName = "PT_USER_TRANSACTIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_USER_TRANSACTIONInsertInto.DefaultView.[0].@UPT_USER_ID";
public const string _BindDataReader = "[@UPT_USER_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<int> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@UPT_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "", Value);
}
}
public class inUPT_CREDITS : parUPT_CREDITS {}
public class inUPT_CUSTOM : parUPT_CUSTOM {}
public class inUPT_IPN_DATA : parUPT_IPN_DATA {}
public class inUPT_ITEM_NAME : parUPT_ITEM_NAME {}
public class inUPT_ITEM_NUMBER : parUPT_ITEM_NUMBER {}
public class inUPT_MC_FEE : parUPT_MC_FEE {}
public class inUPT_MC_GROSS : parUPT_MC_GROSS {}
public class inUPT_NOTIFICATION_ID : parUPT_NOTIFICATION_ID {}
public class inUPT_PAYED_FOR_USER_ID : parUPT_PAYED_FOR_USER_ID {}
public class inUPT_PAYER_BUSINESS_NAME : parUPT_PAYER_BUSINESS_NAME {}
public class inUPT_PAYER_EMAIL : parUPT_PAYER_EMAIL {}
public class inUPT_PAYER_FIRST_NAME : parUPT_PAYER_FIRST_NAME {}
public class inUPT_PAYER_FOR_UID : parUPT_PAYER_FOR_UID {}
public class inUPT_PAYER_ID : parUPT_PAYER_ID {}
public class inUPT_PAYER_LAST_NAME : parUPT_PAYER_LAST_NAME {}
public class inUPT_PAYER_UID : parUPT_PAYER_UID {}
public class inUPT_PAYMENT_STATUS : parUPT_PAYMENT_STATUS {}
public class inUPT_RESIDENCE_COUNTRY : parUPT_RESIDENCE_COUNTRY {}
public class inUPT_TRANSACTION_ID : parUPT_TRANSACTION_ID {}
public class inUPT_USER_ID : parUPT_USER_ID {}
public class outUPT_ID : parUPT_ID {}
public static int ExecuteNonQuery(
System.Nullable<int> p_iUPT_CREDITS, string p_strUPT_CUSTOM, System.Nullable<int> p_iUPT_ID, string p_strUPT_IPN_DATA, string p_strUPT_ITEM_NAME, string p_strUPT_ITEM_NUMBER, System.Nullable<decimal> p_decUPT_MC_FEE, System.Nullable<decimal> p_decUPT_MC_GROSS, string p_strUPT_NOTIFICATION_ID, System.Nullable<int> p_iUPT_PAYED_FOR_USER_ID, string p_strUPT_PAYER_BUSINESS_NAME, string p_strUPT_PAYER_EMAIL, string p_strUPT_PAYER_FIRST_NAME, string p_strUPT_PAYER_FOR_UID, string p_strUPT_PAYER_ID, string p_strUPT_PAYER_LAST_NAME, string p_strUPT_PAYER_UID, string p_strUPT_PAYMENT_STATUS, string p_strUPT_RESIDENCE_COUNTRY, string p_strUPT_TRANSACTION_ID, System.Nullable<int> p_iUPT_USER_ID,out object p_iUPT_IDOut)
{
try
{
Microsoft.Practices.EnterpriseLibrary.Data.Database db = DatabaseFactory.CreateDatabase();
SqlCommand cmd = SqlCommand(p_iUPT_CREDITS, p_strUPT_CUSTOM, p_iUPT_ID, p_strUPT_IPN_DATA, p_strUPT_ITEM_NAME, p_strUPT_ITEM_NUMBER, p_decUPT_MC_FEE, p_decUPT_MC_GROSS, p_strUPT_NOTIFICATION_ID, p_iUPT_PAYED_FOR_USER_ID, p_strUPT_PAYER_BUSINESS_NAME, p_strUPT_PAYER_EMAIL, p_strUPT_PAYER_FIRST_NAME, p_strUPT_PAYER_FOR_UID, p_strUPT_PAYER_ID, p_strUPT_PAYER_LAST_NAME, p_strUPT_PAYER_UID, p_strUPT_PAYMENT_STATUS, p_strUPT_RESIDENCE_COUNTRY, p_strUPT_TRANSACTION_ID, p_iUPT_USER_ID);
int iResult = db.ExecuteNonQuery(cmd);
SqlCommandOutput(cmd, out p_iUPT_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.BB.Storage.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
public static int ExecuteNonQuery(
System.Nullable<int> p_iUPT_CREDITS, string p_strUPT_CUSTOM, System.Nullable<int> p_iUPT_ID, string p_strUPT_IPN_DATA, string p_strUPT_ITEM_NAME, string p_strUPT_ITEM_NUMBER, System.Nullable<decimal> p_decUPT_MC_FEE, System.Nullable<decimal> p_decUPT_MC_GROSS, string p_strUPT_NOTIFICATION_ID, System.Nullable<int> p_iUPT_PAYED_FOR_USER_ID, string p_strUPT_PAYER_BUSINESS_NAME, string p_strUPT_PAYER_EMAIL, string p_strUPT_PAYER_FIRST_NAME, string p_strUPT_PAYER_FOR_UID, string p_strUPT_PAYER_ID, string p_strUPT_PAYER_LAST_NAME, string p_strUPT_PAYER_UID, string p_strUPT_PAYMENT_STATUS, string p_strUPT_RESIDENCE_COUNTRY, string p_strUPT_TRANSACTION_ID, System.Nullable<int> p_iUPT_USER_ID,out object p_iUPT_IDOut,Microsoft.Practices.EnterpriseLibrary.Data.Database p_db,System.Data.Common.DbTransaction p_trn)
{
try
{
SqlCommand cmd = SqlCommand(p_iUPT_CREDITS, p_strUPT_CUSTOM, p_iUPT_ID, p_strUPT_IPN_DATA, p_strUPT_ITEM_NAME, p_strUPT_ITEM_NUMBER, p_decUPT_MC_FEE, p_decUPT_MC_GROSS, p_strUPT_NOTIFICATION_ID, p_iUPT_PAYED_FOR_USER_ID, p_strUPT_PAYER_BUSINESS_NAME, p_strUPT_PAYER_EMAIL, p_strUPT_PAYER_FIRST_NAME, p_strUPT_PAYER_FOR_UID, p_strUPT_PAYER_ID, p_strUPT_PAYER_LAST_NAME, p_strUPT_PAYER_UID, p_strUPT_PAYMENT_STATUS, p_strUPT_RESIDENCE_COUNTRY, p_strUPT_TRANSACTION_ID, p_iUPT_USER_ID);
int iResult = p_db.ExecuteNonQuery(cmd, p_trn);
SqlCommandOutput(cmd, out p_iUPT_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.BB.Storage.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
}
}
