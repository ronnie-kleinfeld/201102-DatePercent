<?xml version="1.0" encoding="utf-8"?>
<ModalBox:ModalBoxBase xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="250" height="126"
					   xmlns:ModalBox="UI.Box.ModalBox.*" xmlns:Box="UI.Box.*" xmlns:Photo="UI.Photo.*" xmlns:Label="UI.Label.*" xmlns:Button="UI.Button.*" xmlns:UI="UI.*">
	<fx:Metadata>
		[Event(name=YES, type="flash.events.Event")]
		[Event(name=NO, type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import Data.Member.PhotoData;
			
			import Handler.LocHandler;
			
			import UI.Button.ButtonBase;
			import UI.Button.ButtonEvent;
			import UI.Photo.PhotoBase;
			
			import Utils.AS3.Embeded;
			import Handler.LocGeneratedCode;
			
			public static const YES:String = "Yes";
			public static const NO:String = "No";
			public static const YESNO:String = "YesNo";
			
			[Bindable] public var m_photoData:PhotoData;
			
			[Bindable] public var m_strMessage:String;
			private var m_funcPostModalBox:Function;
			[Bindable] public var m_strLabel:String;
			
			public override function Init(p_buttonOpener:ButtonBase, p_photoOpener:PhotoBase):void
			{
				super.Init(p_buttonOpener, p_photoOpener);
				DoShowBox(boxCanvas);
			}
			public override function Dispose():void
			{
				super.Dispose();
				
				m_photoData = null;
				m_funcPostModalBox = null;
				
				if (clickButtonNo != null)
				{
					clickButtonNo.Dispose();
					clickButtonNo = null;
				}
				if (clickButtonYes != null)
				{
					clickButtonYes.Dispose();
					clickButtonYes = null;
				}
				if (simplePhoto != null)
				{
					simplePhoto.Dispose();
					simplePhoto = null;
				}
				
				if (boxBC != null)
				{
					boxBC.Dispose();
				}
				if (boxCanvas != null)
				{
					boxCanvas.Dispose();
				}
			}
			
			public function GetData(p_strTitle:String, p_strMessage:String, p_photoData:PhotoData, p_strState:String = "Yes", p_funcPostModalBox:Function = null):void
			{
				boxBC.ShowTitle(p_strTitle);
				m_strMessage = p_strMessage;
				m_photoData = p_photoData;
				currentState = p_strState;
				m_funcPostModalBox = p_funcPostModalBox;
				DoPaint();
			}
			public function DoPaint():void
			{
				DoShowContent(boxContent);
			}
			
			// events
			protected function clickButtonYes_CLICKED(event:ButtonEvent):void
			{
				dispatchEvent(new MessageBoxEvent(YES, m_funcPostModalBox, checkBoxNormalDontAsk.selected));
			}
			protected function clickButtonNo_CLICKED(event:ButtonEvent):void
			{
				dispatchEvent(new MessageBoxEvent(NO, m_funcPostModalBox, checkBoxNormalDontAsk.selected));
			}
		]]>
	</fx:Script>
	<ModalBox:states>
		<s:State name="Yes"/>
		<s:State name="No"/>
		<s:State name="YesNo"/>
	</ModalBox:states>
	<Box:BoxCanvas id="boxCanvas" width="100%" height="100%">
		<Box:BoxGroup id="boxGroup" width="100%" height="100%">
			<Box:BoxBC id="boxBC" width="100%" height="100%" CLOSE="dispatchEvent(new Event(CLOSE))">
				<Box:BoxContent id="boxContent" width="100%" height="100%">
					<mx:Spacer height="15"/>
					<s:HGroup width="100%" height="100%" gap="0">
						<Photo:SimplePhoto id="simplePhoto" visible="{m_photoData!=null}" m_iSize="{m_photoData==null?0:49}" Photo="{m_photoData}"/>
						<mx:Spacer width="{simplePhoto.visible?7:0}"/>
						<Label:NormalLabel text="{m_strMessage}"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<UI:CheckBoxNormal id="checkBoxNormalDontAsk" m_strLabel="{m_strLabel}" visible="{m_strLabel.length > 0}" enabled="{m_strLabel.length > 0}"/>
						<mx:Spacer width="100%"/>
						<Button:ClickButton id="clickButtonYes" m_strTooltip="{LocHandler.GS(LocGeneratedCode.Yes)}" includeIn="Yes,YesNo" m_png="{Embeded.s_imgYes}" CLICKED="clickButtonYes_CLICKED(event)"/>
						<Button:ClickButton id="clickButtonNo" m_strTooltip="{LocHandler.GS(LocGeneratedCode.No)}" includeIn="No,YesNo" m_png="{Embeded.s_imgNo}" CLICKED="clickButtonNo_CLICKED(event)"/>
					</s:HGroup>
				</Box:BoxContent>
			</Box:BoxBC>
		</Box:BoxGroup>
	</Box:BoxCanvas>
</ModalBox:ModalBoxBase>