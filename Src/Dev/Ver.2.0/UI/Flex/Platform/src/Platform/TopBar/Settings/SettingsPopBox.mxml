<?xml version="1.0" encoding="utf-8"?>
<PopBox:PopBoxBase xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="210" height="251"
				   preinitialize="preinitializeHandler(event)" creationComplete="creationCompleteHandler(event)"
				   xmlns:PopBox="UI.Box.PopBox.*" xmlns:Box="UI.Box.*" xmlns:Button="UI.Button.*" xmlns:Sep="UI.Sep.*">
	<fx:Script>
		<![CDATA[
			import Handler.LocHandler;
			import Handler.SesHandler;
			
			import Platform.TopBar.Settings.MyBlackListed.MyBlackListedModalBox;
			import Platform.TopBar.Settings.MyCredits.MyCreditsModalBox;
			import Platform.TopBar.Settings.MyFavorites.MyFavoritesModalBox;
			import Platform.TopBar.Settings.MyLanguage.MyLanguageModalBox;
			import Platform.TopBar.Settings.MyPhotos.MyPhotosModalBox;
			import Platform.TopBar.Settings.MyProfile.MyProfileModalBox;
			
			import UI.Box.BoxMDI;
			import UI.Box.PopBox.NodgePositionEnum;
			import UI.Button.ButtonBase;
			import UI.Button.ButtonEvent;
			import UI.Photo.PhotoBase;
			
			import Utils.AS3.Embeded;
			import Handler.LocGeneratedCode;
			
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			
			protected function preinitializeHandler(event:FlexEvent):void
			{
				m_enumNodgePosition = NodgePositionEnum.TOP_RIGHT;
			}
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				boxGroup.InitPadding(m_enumNodgePosition);
				boxCanvas.InidNodge(m_enumNodgePosition);
				boxBC.ShowCloseButton();
				boxBC.ShowTitle(LocHandler.GS(LocGeneratedCode.Settings));
			}
			public override function Init(p_buttonOpener:ButtonBase, p_photoOpener:PhotoBase):void
			{
				super.Init(p_buttonOpener, p_photoOpener);
				DoShowBox(boxCanvas);
				clickButtonMyPhotos.enabled = SesHandler.Instance.Session.Me.Photos.Length > 0;
				SesHandler.Instance.Session.Me.Photos.addEventListener(CollectionEvent.COLLECTION_CHANGE, photos_COLLECTION_CHANGE);
			}
			public override function Dispose():void
			{
				super.Dispose();
				SesHandler.Instance.Session.Me.Photos.removeEventListener(CollectionEvent.COLLECTION_CHANGE, photos_COLLECTION_CHANGE);
				
				if (boxBC != null)
				{
					boxBC.Dispose();
				}
				if (boxCanvas != null)
				{
					boxCanvas.Dispose();
				}
				
				if (clickButtonMyProfile != null)
				{
					clickButtonMyProfile.Dispose();
					clickButtonMyProfile = null;
				}
				if (clickButtonMyPhotos != null)
				{
					clickButtonMyPhotos.Dispose();
					clickButtonMyPhotos = null;
				}
				if (clickButtonMyFavoritesMembers != null)
				{
					clickButtonMyFavoritesMembers.Dispose();
					clickButtonMyFavoritesMembers = null;
				}
				if (clickButtonMyBlockedMembers != null)
				{
					clickButtonMyBlockedMembers.Dispose();
					clickButtonMyBlockedMembers = null;
				}
				if (clickButtonMyCredits != null)
				{
					clickButtonMyCredits.Dispose();
					clickButtonMyCredits = null;
				}
			}
			
			public function GetData():void
			{
				DoPaint();
			}
			public function DoPaint():void
			{
				DoShowContent(boxContent);
			}
			
			protected override function SetLocation():void
			{
				this.right = 41 - 26;
				this.top = 35;
			}
			
			protected function photos_COLLECTION_CHANGE(event:CollectionEvent):void
			{
				clickButtonMyPhotos.enabled = SesHandler.Instance.Session.Me.Photos.Length > 0;				
			}
			
			protected function clickButtonMyProfile_CLICKED(event:ButtonEvent):void
			{
				var myProfileModalBox:MyProfileModalBox = new MyProfileModalBox();
				BoxMDI.GetBoxMDI.AddModalBox(myProfileModalBox);
				myProfileModalBox.Init(null, null);
				myProfileModalBox.GetData(SesHandler.Instance.Session.Me.NickName,
					SesHandler.Instance.Session.Me.DistanceUnitsCode);
				dispatchEvent(new Event(CLOSE));
			}
			protected function clickButtonMyLanguage_CLICKED(event:ButtonEvent):void
			{
				var myLanguageModalBox:MyLanguageModalBox = new MyLanguageModalBox();
				BoxMDI.GetBoxMDI.AddModalBox(myLanguageModalBox);
				myLanguageModalBox.Init(null, null);
				myLanguageModalBox.GetData(SesHandler.Instance.Session.Me.Locale);
				dispatchEvent(new Event(CLOSE));
			}
			protected function clickButtonMyPhotos_CLICKED(event:ButtonEvent):void
			{
				var myPhotosModalBox:MyPhotosModalBox = new MyPhotosModalBox();
				BoxMDI.GetBoxMDI.AddModalBox(myPhotosModalBox);
				myPhotosModalBox.Init(null, null);
				myPhotosModalBox.DoPaint();
				dispatchEvent(new Event(CLOSE));
			}
			protected function clickButtonMyFavoritesMembers_CLICKED(event:ButtonEvent):void
			{
				var myFavoritesModalBox:MyFavoritesModalBox = new MyFavoritesModalBox();
				BoxMDI.GetBoxMDI.AddModalBox(myFavoritesModalBox);
				myFavoritesModalBox.Init(null, null);
				myFavoritesModalBox.DoPaint();
				dispatchEvent(new Event(CLOSE));
			}
			protected function clickButtonMyBlockedMembers_CLICKED(event:ButtonEvent):void
			{
				var myBlackListedModalBox:MyBlackListedModalBox = new MyBlackListedModalBox();
				BoxMDI.GetBoxMDI.AddModalBox(myBlackListedModalBox);
				myBlackListedModalBox.Init(null, null);
				myBlackListedModalBox.DoPaint();
				dispatchEvent(new Event(CLOSE));
			}
			protected function clickButtonMyCredits_CLICKED(event:ButtonEvent):void
			{
				var myCreditsModalBox:MyCreditsModalBox = new MyCreditsModalBox();
				BoxMDI.GetBoxMDI.AddModalBox(myCreditsModalBox);
				myCreditsModalBox.Init(null, null);
				myCreditsModalBox.GetData();
				dispatchEvent(new Event(CLOSE));
			}
		]]>
	</fx:Script>
	<Box:BoxCanvas id="boxCanvas" width="100%" height="100%">
		<Box:BoxGroup id="boxGroup" width="100%" height="100%">
			<Box:BoxBC id="boxBC" width="100%" height="100%" CLOSE="dispatchEvent(new Event(CLOSE))">
				<Box:BoxContent id="boxContent" width="100%" height="100%">
					<mx:Spacer height="15"/>
					<Button:ClickButton id="clickButtonMyProfile"
										m_strText="{LocHandler.GS(LocGeneratedCode.My_Profile)}" m_iLabelPaddingLeft="29" m_iLabelPaddingRight="4" m_iFontSize="12" m_strLabelHorizontalAlign="left"
										m_png="{Embeded.s_imgMyProfile}" m_iPngPaddingLeft="-4"
										CLICKED="clickButtonMyProfile_CLICKED(event)"/>
					<Sep:HSep width="190"/>
					<Button:ClickButton id="clickButtonMyLanguage"
										m_strText="{LocHandler.GS(LocGeneratedCode.My_Language)} ({SesHandler.Instance.Session.Me.LocaleNative})" m_iLabelPaddingLeft="29" m_iLabelPaddingRight="4" m_iFontSize="12" m_strLabelHorizontalAlign="left"
										m_png="{Embeded.s_imgMyLanguage}" m_iPngPaddingLeft="-4"
										CLICKED="clickButtonMyLanguage_CLICKED(event)"/>
					<Sep:HSep width="190"/>
					<Button:ClickButton id="clickButtonMyPhotos"
										m_strText="{LocHandler.GS(LocGeneratedCode.My_Photos)} ({SesHandler.Instance.Session.Me.Photos.Length})" m_iLabelPaddingLeft="29" m_iLabelPaddingRight="4" m_iFontSize="12" m_strLabelHorizontalAlign="left"
										m_png="{Embeded.s_imgMyPhotos}" m_iPngPaddingLeft="-4"
										enabled="{SesHandler.Instance.Session.Me.Photos.Length > 0}"
										CLICKED="clickButtonMyPhotos_CLICKED(event)"/>
					<Sep:HSep width="190"/>
					<Button:ClickButton id="clickButtonMyFavoritesMembers"
										m_strText="{LocHandler.GS(LocGeneratedCode.My_Favorites_Members)} ({SesHandler.Instance.Session.Favorites.Length})" m_iLabelPaddingLeft="29" m_iLabelPaddingRight="4" m_iFontSize="12" m_strLabelHorizontalAlign="left"
										m_png="{Embeded.s_imgFavorite}" m_iPngPaddingLeft="-4"
										enabled="{SesHandler.Instance.Session.Favorites.Length > 0}"
										CLICKED="clickButtonMyFavoritesMembers_CLICKED(event)"/>
					<Sep:HSep width="190"/>
					<Button:ClickButton id="clickButtonMyBlockedMembers"
										m_strText="{LocHandler.GS(LocGeneratedCode.My_Blocked_Members)} ({SesHandler.Instance.Session.BlackListed.Length})" m_iLabelPaddingLeft="29" m_iLabelPaddingRight="4" m_iFontSize="12" m_strLabelHorizontalAlign="left"
										m_png="{Embeded.s_imgBlock}" m_iPngPaddingLeft="-4"
										enabled="{SesHandler.Instance.Session.BlackListed.Length > 0}"
										CLICKED="clickButtonMyBlockedMembers_CLICKED(event)"/>
					<Sep:HSep width="190"/>
					<Button:ClickButton id="clickButtonMyCredits"
										m_strText="{LocHandler.GS(LocGeneratedCode.My_Credits)} ({SesHandler.Instance.Session.Me.CreditsBalance})" m_iLabelPaddingLeft="29" m_iLabelPaddingRight="4" m_iFontSize="12" m_strLabelHorizontalAlign="left"
										m_png="{Embeded.s_imgCredits}" m_iPngPaddingLeft="-4"
										CLICKED="clickButtonMyCredits_CLICKED(event)"/>
				</Box:BoxContent>
			</Box:BoxBC>
		</Box:BoxGroup>
	</Box:BoxCanvas>
</PopBox:PopBoxBase>