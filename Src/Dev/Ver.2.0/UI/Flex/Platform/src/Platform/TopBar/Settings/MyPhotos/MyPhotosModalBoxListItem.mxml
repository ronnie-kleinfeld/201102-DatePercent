<?xml version="1.0" encoding="utf-8"?>
<List:ListItemBase xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="200" height="200"
				   xmlns:List="UI.List.*" xmlns:Photo="UI.Photo.*" xmlns:flexws="services.flexws.*">
	<fx:Script>
		<![CDATA[
			import Data.Member.PhotoData;
			
			import Handler.LocHandler;
			import Handler.SesHandler;
			
			import UI.Box.BoxMDI;
			import UI.Box.MessageBox.MessageBox;
			import UI.Box.MessageBox.MessageBoxEvent;
			import UI.Box.ModalBox.ShowPhotoModalBox;
			import UI.Photo.PhotoEvent;
			
			import Utils.AS3.Filters;
			import Handler.LocGeneratedCode;
			import Utils.Log.Logger;
			
			import mx.managers.CursorManager;
			
			protected override function get WidthTo():Number
			{
				return 200;
			}
			protected override function get HeightTo():Number
			{
				return 200;
			}
			
			public override function Dispose():void
			{
				super.Dispose();
				
				if (clickPhoto != null)
				{
					clickPhoto.Dispose();
					clickPhoto = null;
				}
			}
			
			protected override function rollOverHandler(event:MouseEvent):void
			{
				super.rollOverHandler(event);
				if (event.buttonDown)
				{
					clickPhoto.filters = [Utils.AS3.Filters.Glow, Utils.AS3.Filters.Sunken];
				}
				else
				{
					clickPhoto.filters = [Utils.AS3.Filters.Glow];
				}
			}
			protected override function rollOutHandler(event:MouseEvent):void
			{
				super.rollOutHandler(event);
				clickPhoto.filters = null;
			}
			protected override function mouseDownHandler(event:MouseEvent):void
			{
				super.mouseDownHandler(event);
				clickPhoto.filters = [Utils.AS3.Filters.Glow, Utils.AS3.Filters.Sunken];
			}
			protected override function mouseUpHandler(event:MouseEvent):void
			{
				super.mouseUpHandler(event);
				clickPhoto.filters = [Utils.AS3.Filters.Glow];
			}
			
			protected function clickPhoto_REMOVE_CLICKED(event:PhotoEvent):void
			{
				if (SesHandler.Instance.Session.Me.DontAskRemoveFromMyPhotos)
				{
					SesHandler.Instance.Session.Me.Photos.RemoveItemPhotoDataByID(PhotoData(m_objectBase).ID);
					callResponderDeletePhoto.token = wsFlex.DeletePhoto(SesHandler.Instance.Session.SID, PhotoData(m_objectBase).ID);
				}
				else
				{
					BoxMDI.GetBoxMDI.AddMessageBox(LocHandler.GS(LocGeneratedCode.Remove_PhotoQ), LocHandler.GS(LocGeneratedCode.Are_you_sure_you_want12to_remove_this_photo12from_your_profileQ), LocHandler.GS(LocGeneratedCode.Do_not_ask_me_again), PhotoData(m_objectBase), MessageBox.YESNO, clickPhotoRemovePostModalBox);
				}
			}
			public function clickPhotoRemovePostModalBox(event:MessageBoxEvent):void
			{
				if (event.type == MessageBox.YES)
				{
					if (event.DontAsk)
					{
						SesHandler.Instance.Session.Me.DontAskRemoveFromMyPhotos = true;
						wsFlex.DontAskRemoveFromMyPhotos(SesHandler.Instance.Session.SID);
					}
					SesHandler.Instance.Session.Me.Photos.RemoveItemPhotoDataByID(PhotoData(m_objectBase).ID);
					callResponderDeletePhoto.token = wsFlex.DeletePhoto(SesHandler.Instance.Session.SID, PhotoData(m_objectBase).ID);
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="callResponderDeletePhoto"
						 result="Logger.Instance.WriteEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor()"
						 fault="Logger.Instance.WriteFaultEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor()"/>
		<flexws:FlexWS id="wsFlex"
					   fault="Logger.Instance.WriteFaultEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor()"/>
	</fx:Declarations>
	<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingLeft="2" paddingRight="2">
		<Photo:ClickPhoto id="clickPhoto"
						  m_iSize="190" m_bRemoveFadeEffect="true"
						  Photo="{PhotoData(m_objectBase)}"
						  REMOVE_CLICKED="clickPhoto_REMOVE_CLICKED(event)"/>
	</s:HGroup>
</List:ListItemBase>