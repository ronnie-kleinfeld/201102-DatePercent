<?xml version="1.0" encoding="utf-8"?>
<ModalBox:ModalBoxBase xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="100%" height="100%"
					   xmlns:ModalBox="UI.Box.ModalBox.*" xmlns:flexws="services.flexws.*" xmlns:Box="UI.Box.*" xmlns:Label="UI.Label.*" xmlns:UI="UI.*" xmlns:Button="UI.Button.*">
	<ModalBox:layout>
		<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
	</ModalBox:layout>
	<fx:Metadata>
		[Event(name=CLOSE, type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import Handler.LocHandler;
			import Handler.SesHandler;
			
			import UI.Box.BoxMDI;
			import UI.Box.MessageBox.MessageBox;
			import UI.Button.ButtonBase;
			import UI.Button.ButtonEvent;
			import UI.Photo.PhotoBase;
			
			import Utils.AS3.Embeded;
			import Handler.LocGeneratedCode;
			import Utils.Log.Logger;
			
			import com.mapquest.LatLng;
			
			import mx.managers.CursorManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			public override function Init(p_buttonOpener:ButtonBase, p_photoOpener:PhotoBase):void
			{
				super.Init(p_buttonOpener, p_photoOpener);
				DoShowBox(boxCanvas);
			}
			public override function Dispose():void
			{
				super.Dispose();
				
				if (clickButtonCurrent != null)
				{
					clickButtonCurrent.Dispose();
					clickButtonCurrent = null;
				}
				if (clickButtonFind != null)
				{
					clickButtonFind.Dispose();
					clickButtonFind = null;
				}
				
				if (boxBC != null)
				{
					boxBC.Dispose();
				}
				if (boxCanvas != null)
				{
					boxCanvas.Dispose();
				}
			}
			
			public function GetData():void
			{
				DoPaint();
				if (textInputLocation != null)
				{
					textInputLocation.setFocus();
				}
			}
			public function DoPaint():void
			{
				DoShowContent(boxContent);
			}
			
			// find location
			protected function textInputLocation_keyDownHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == 13)
				{
					DoGecode();
				}
			}
			private function clickButtonFind_CLICKED(event:ButtonEvent):void
			{
				if (textInputLocation.text == "")
				{
					DoShowCurrentLocation();
				}
				else
				{
					DoGecode();
				}
			}
			private function DoGecode():void
			{
				try
				{
					if (textInputLocation.text == "")
					{
						
						DoShowCurrentLocation();
					}
					else
					{
						this.cursorManager.setBusyCursor();
						callResponderGetLocation.token = wsFlex.GetLocation(SesHandler.Instance.Session.SID, textInputLocation.text);
					}
				}
				catch (error:Error)
				{
					DoShowCurrentLocation();
				}
			}
			private function callResponderGetLocation_resultHandler(event:ResultEvent):void
			{
				try
				{
					switch (event.result)
					{
						case "FAILED":
							BoxMDI.GetBoxMDI.AddMessageBox(LocHandler.GS(LocGeneratedCode.Address_not_found), LocHandler.GS(LocGeneratedCode.We_could_not_find_this_address12Make_sure_your_spelling12is_correct), "", SesHandler.Instance.Session.Me.Photo, MessageBox.YES);
							break;
						default:
							var latLng:LatLng = new LatLng(Number(event.result.toString().split(",")[0]), Number(event.result.toString().split(",")[1]));
							SesHandler.Instance.Session.Me.GPS = latLng;
							callResponderSetLocation.token = wsFlex.SetLocation(
								SesHandler.Instance.Session.SID, SesHandler.Instance.Session.Me.GPS.getLatitude(), SesHandler.Instance.Session.Me.GPS.getLongitude());
							break;
					}
				}
				catch (error:Error)
				{
					DoShowCurrentLocation();
				}
			}
			private function callResponderGetLocation_faultHandler(event:FaultEvent):void
			{
				DoShowCurrentLocation();
			}
			
			private function callResponderSetLocation_resultHandler(event:ResultEvent):void
			{
				dispatchEvent(new LocationEvent(LocationEvent.FIND_LOCATION, textInputLocation.text));
				dispatchEvent(new Event(CLOSE));
			}
			private function callResponderSetLocation_faultHandler(event:FaultEvent):void
			{
				DoShowCurrentLocation();
			}
			
			// current location
			private function clickButtonCurrent_CLICKED(event:ButtonEvent):void
			{
				DoShowCurrentLocation();
			}
			
			private function DoShowCurrentLocation():void
			{
				dispatchEvent(new LocationEvent(LocationEvent.CURRENT_LOCATION, ""));
				dispatchEvent(new Event(CLOSE));
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="callResponderGetLocation"
						 result="Logger.Instance.WriteEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor();callResponderGetLocation_resultHandler(event)"
						 fault="Logger.Instance.WriteFaultEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor();callResponderGetLocation_faultHandler(event)"/>
		<s:CallResponder id="callResponderSetLocation"
						 result="Logger.Instance.WriteEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor();callResponderSetLocation_resultHandler(event)"
						 fault="Logger.Instance.WriteFaultEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor();callResponderSetLocation_faultHandler(event)"/>
		<flexws:FlexWS id="wsFlex"
					   fault="Logger.Instance.WriteFaultEvent(event, flash.utils.getQualifiedClassName(this));CursorManager.removeBusyCursor()"/>
	</fx:Declarations>
	<Box:BoxCanvas id="boxCanvas" width="700" height="540">
		<Box:BoxGroup id="boxGroup" width="100%" height="100%">
			<Box:BoxBC id="boxBC" width="100%" height="100%" backgroundColor="0xffffff" backgroundAlpha="0" CLOSE="dispatchEvent(new Event(CLOSE))">
				<Box:BoxContent id="boxContent" width="100%" height="100%">
					<Box:layout>
						<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"
										  paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0"/>
					</Box:layout>
					<mx:Spacer height="20"/>
					<s:BorderContainer id="borderContainer"
									   width="100%" height="100%" backgroundImage="{Embeded.s_imgLocationBG}"
									   cornerRadius="10"
									   borderVisible="false">
						<s:layout>
							<s:VerticalLayout horizontalAlign="center" verticalAlign="top"
											  paddingTop="65" paddingBottom="0"/>
						</s:layout>
						<mx:Image source="../Res/Location/Logo.png"/>
						<mx:Spacer height="10"/>
						<Label:HeaderLabel text="{LocHandler.GS(LocGeneratedCode.Highest_chance_to_find_love)}" fontSize="30" color="0x000000"/>
						<mx:Spacer height="5"/>
						<Label:HeaderLabel text="{LocHandler.GS(LocGeneratedCode.Specify_your_loaction12and_find_dates_in_your_area)}" fontSize="25" color="0x000000"/>
						<mx:Spacer height="10"/>
						<s:HGroup width="70%" verticalAlign="middle">
							<mx:Canvas width="100%" height="20">
								<UI:InnerShadow m_strGrayedText="{LocHandler.GS(LocGeneratedCode.e_g__Paris_or_France)}" m_strLiveText="{textInputLocation.text}"/>
								<UI:TextInputNormal id="textInputLocation" keyDown="textInputLocation_keyDownHandler(event)"/>
							</mx:Canvas>
							<Button:ClickButton id="clickButtonFind"
												m_strText="{LocHandler.GS(LocGeneratedCode.Find_this_location)}" m_iFontSize="14" m_iFontColor="0x000000" textDecoration="underline"
												CLICKED="clickButtonFind_CLICKED(event)"/>
						</s:HGroup>
						<Label:NormalLabel width="70%" text="{LocHandler.GS(LocGeneratedCode.Or)}" fontSize="14" color="0x000000" textAlign="right"/>
						<s:HGroup width="70%" horizontalAlign="right">
							<Button:ClickButton id="clickButtonCurrent"
												m_strText="{LocHandler.GS(LocGeneratedCode.Use_current_location)}" m_iFontSize="14" m_iFontColor="0x000000" textDecoration="underline"
												CLICKED="clickButtonCurrent_CLICKED(event)"/>
						</s:HGroup>
					</s:BorderContainer>
				</Box:BoxContent>
			</Box:BoxBC>
		</Box:BoxGroup>
	</Box:BoxCanvas>
</ModalBox:ModalBoxBase>