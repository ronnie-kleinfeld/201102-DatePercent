//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MADA.DatePercent.BL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ApplicationHandler")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ApplicationHandler : global::System.Data.DataSet {
        
        private T_BUTTON_SIZE_TYPE_ENUMDataTable tableT_BUTTON_SIZE_TYPE_ENUM;
        
        private T_CULTUREDataTable tableT_CULTURE;
        
        private T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable tableT_CULTURE_DATE_FORMAT_TYPE_ENUM;
        
        private T_DISTANCE_UNITS_TYPE_ENUMDataTable tableT_DISTANCE_UNITS_TYPE_ENUM;
        
        private T_FAQ_TYPEDataTable tableT_FAQ_TYPE;
        
        private T_LIST_TYPE_ENUMDataTable tableT_LIST_TYPE_ENUM;
        
        private T_PROP_AGE_RANGE_TYPEDataTable tableT_PROP_AGE_RANGE_TYPE;
        
        private T_PROP_CUSTODY_TYPEDataTable tableT_PROP_CUSTODY_TYPE;
        
        private T_PROP_DRINK_TYPEDataTable tableT_PROP_DRINK_TYPE;
        
        private T_PROP_EYE_TYPEDataTable tableT_PROP_EYE_TYPE;
        
        private T_PROP_HAIR_TYPEDataTable tableT_PROP_HAIR_TYPE;
        
        private T_PROP_HAVE_KIDS_TYPEDataTable tableT_PROP_HAVE_KIDS_TYPE;
        
        private T_PROP_HEIGHT_TYPEDataTable tableT_PROP_HEIGHT_TYPE;
        
        private T_PROP_LANGUAGE_TYPEDataTable tableT_PROP_LANGUAGE_TYPE;
        
        private T_PROP_MATCH_SEX_TYPEDataTable tableT_PROP_MATCH_SEX_TYPE;
        
        private T_PROP_RELATIONSHIP_TYPEDataTable tableT_PROP_RELATIONSHIP_TYPE;
        
        private T_PROP_SEX_TYPE_ENUMDataTable tableT_PROP_SEX_TYPE_ENUM;
        
        private T_PROP_SMOKE_TYPEDataTable tableT_PROP_SMOKE_TYPE;
        
        private T_PROP_STATUS_TYPEDataTable tableT_PROP_STATUS_TYPE;
        
        private T_PROP_WANT_KIDS_TYPEDataTable tableT_PROP_WANT_KIDS_TYPE;
        
        private T_PROP_WEIGHT_TYPEDataTable tableT_PROP_WEIGHT_TYPE;
        
        private T_PROP_ZODIAC_SIGN_TYPEDataTable tableT_PROP_ZODIAC_SIGN_TYPE;
        
        private T_RESULT_VIEW_TYPE_ENUMDataTable tableT_RESULT_VIEW_TYPE_ENUM;
        
        private T_RMN_TYPE_TYPE_ENUMDataTable tableT_RMN_TYPE_TYPE_ENUM;
        
        private T_TWINK_TYPEDataTable tableT_TWINK_TYPE;
        
        private T_USER_INVITEE_TYPE_ENUMDataTable tableT_USER_INVITEE_TYPE_ENUM;
        
        private T_TWINKDataTable tableT_TWINK;
        
        private T_FAQDataTable tableT_FAQ;
        
        private T_PROP_BODY_STYLE_TYPEDataTable tableT_PROP_BODY_STYLE_TYPE;
        
        private T_RMN_TYPE_ENUMDataTable tableT_RMN_TYPE_ENUM;
        
        private EmailDataTable tableEmail;
        
        private T_DOMAIN_TYPE_ENUMDataTable tableT_DOMAIN_TYPE_ENUM;
        
        private T_CONTACT_FETCHER_TYPE_ENUMDataTable tableT_CONTACT_FETCHER_TYPE_ENUM;
        
        private T_PROP_EDUCATION_TYPEDataTable tableT_PROP_EDUCATION_TYPE;
        
        private T_PROP_INTERESTS_TYPEDataTable tableT_PROP_INTERESTS_TYPE;
        
        private T_PROP_OCCUPATION_TYPEDataTable tableT_PROP_OCCUPATION_TYPE;
        
        private T_PROP_RACE_TYPEDataTable tableT_PROP_RACE_TYPE;
        
        private T_PROP_RELIGION_TYPEDataTable tableT_PROP_RELIGION_TYPE;
        
        private T_LINK_TYPE_ENUMDataTable tableT_LINK_TYPE_ENUM;
        
        private T_SERIALIZERDataTable tableT_SERIALIZER;
        
        private T_LINK_ACTION_TYPE_ENUMDataTable tableT_LINK_ACTION_TYPE_ENUM;
        
        private T_EMAIL_BOX_TYPE_ENUMDataTable tableT_EMAIL_BOX_TYPE_ENUM;
        
        private T_SETTINGDataTable tableT_SETTING;
        
        private T_ADS_TYPEDataTable tableT_ADS_TYPE;
        
        private T_PROP_LOCATION_VISIBILITY_TYPEDataTable tableT_PROP_LOCATION_VISIBILITY_TYPE;
        
        private T_USER_LOCATION_TYPE_ENUMDataTable tableT_USER_LOCATION_TYPE_ENUM;
        
        private DatePercent_T_USERDataTable tableDatePercent_T_USER;
        
        private global::System.Data.DataRelation relationFK_T_TWINK_T_TWINK_TYPE;
        
        private global::System.Data.DataRelation relationFK_T_FAQ_T_FAQ_TYPE;
        
        private global::System.Data.DataRelation relationFK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationHandler() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ApplicationHandler(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_BUTTON_SIZE_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_BUTTON_SIZE_TYPE_ENUMDataTable(ds.Tables["T_BUTTON_SIZE_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_CULTURE"] != null)) {
                    base.Tables.Add(new T_CULTUREDataTable(ds.Tables["T_CULTURE"]));
                }
                if ((ds.Tables["T_CULTURE_DATE_FORMAT_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable(ds.Tables["T_CULTURE_DATE_FORMAT_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_DISTANCE_UNITS_TYPE_ENUMDataTable(ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_FAQ_TYPE"] != null)) {
                    base.Tables.Add(new T_FAQ_TYPEDataTable(ds.Tables["T_FAQ_TYPE"]));
                }
                if ((ds.Tables["T_LIST_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_LIST_TYPE_ENUMDataTable(ds.Tables["T_LIST_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_PROP_AGE_RANGE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_AGE_RANGE_TYPEDataTable(ds.Tables["T_PROP_AGE_RANGE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_CUSTODY_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_CUSTODY_TYPEDataTable(ds.Tables["T_PROP_CUSTODY_TYPE"]));
                }
                if ((ds.Tables["T_PROP_DRINK_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_DRINK_TYPEDataTable(ds.Tables["T_PROP_DRINK_TYPE"]));
                }
                if ((ds.Tables["T_PROP_EYE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_EYE_TYPEDataTable(ds.Tables["T_PROP_EYE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_HAIR_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_HAIR_TYPEDataTable(ds.Tables["T_PROP_HAIR_TYPE"]));
                }
                if ((ds.Tables["T_PROP_HAVE_KIDS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_HAVE_KIDS_TYPEDataTable(ds.Tables["T_PROP_HAVE_KIDS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_HEIGHT_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_HEIGHT_TYPEDataTable(ds.Tables["T_PROP_HEIGHT_TYPE"]));
                }
                if ((ds.Tables["T_PROP_LANGUAGE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_LANGUAGE_TYPEDataTable(ds.Tables["T_PROP_LANGUAGE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_MATCH_SEX_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_MATCH_SEX_TYPEDataTable(ds.Tables["T_PROP_MATCH_SEX_TYPE"]));
                }
                if ((ds.Tables["T_PROP_RELATIONSHIP_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_RELATIONSHIP_TYPEDataTable(ds.Tables["T_PROP_RELATIONSHIP_TYPE"]));
                }
                if ((ds.Tables["T_PROP_SEX_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_PROP_SEX_TYPE_ENUMDataTable(ds.Tables["T_PROP_SEX_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_PROP_SMOKE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_SMOKE_TYPEDataTable(ds.Tables["T_PROP_SMOKE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_STATUS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_STATUS_TYPEDataTable(ds.Tables["T_PROP_STATUS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_WANT_KIDS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_WANT_KIDS_TYPEDataTable(ds.Tables["T_PROP_WANT_KIDS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_WEIGHT_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_WEIGHT_TYPEDataTable(ds.Tables["T_PROP_WEIGHT_TYPE"]));
                }
                if ((ds.Tables["T_PROP_ZODIAC_SIGN_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_ZODIAC_SIGN_TYPEDataTable(ds.Tables["T_PROP_ZODIAC_SIGN_TYPE"]));
                }
                if ((ds.Tables["T_RESULT_VIEW_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_RESULT_VIEW_TYPE_ENUMDataTable(ds.Tables["T_RESULT_VIEW_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_RMN_TYPE_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_RMN_TYPE_TYPE_ENUMDataTable(ds.Tables["T_RMN_TYPE_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_TWINK_TYPE"] != null)) {
                    base.Tables.Add(new T_TWINK_TYPEDataTable(ds.Tables["T_TWINK_TYPE"]));
                }
                if ((ds.Tables["T_USER_INVITEE_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_USER_INVITEE_TYPE_ENUMDataTable(ds.Tables["T_USER_INVITEE_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_TWINK"] != null)) {
                    base.Tables.Add(new T_TWINKDataTable(ds.Tables["T_TWINK"]));
                }
                if ((ds.Tables["T_FAQ"] != null)) {
                    base.Tables.Add(new T_FAQDataTable(ds.Tables["T_FAQ"]));
                }
                if ((ds.Tables["T_PROP_BODY_STYLE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_BODY_STYLE_TYPEDataTable(ds.Tables["T_PROP_BODY_STYLE_TYPE"]));
                }
                if ((ds.Tables["T_RMN_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_RMN_TYPE_ENUMDataTable(ds.Tables["T_RMN_TYPE_ENUM"]));
                }
                if ((ds.Tables["Email"] != null)) {
                    base.Tables.Add(new EmailDataTable(ds.Tables["Email"]));
                }
                if ((ds.Tables["T_DOMAIN_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_DOMAIN_TYPE_ENUMDataTable(ds.Tables["T_DOMAIN_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_CONTACT_FETCHER_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_CONTACT_FETCHER_TYPE_ENUMDataTable(ds.Tables["T_CONTACT_FETCHER_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_PROP_EDUCATION_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_EDUCATION_TYPEDataTable(ds.Tables["T_PROP_EDUCATION_TYPE"]));
                }
                if ((ds.Tables["T_PROP_INTERESTS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_INTERESTS_TYPEDataTable(ds.Tables["T_PROP_INTERESTS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_OCCUPATION_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_OCCUPATION_TYPEDataTable(ds.Tables["T_PROP_OCCUPATION_TYPE"]));
                }
                if ((ds.Tables["T_PROP_RACE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_RACE_TYPEDataTable(ds.Tables["T_PROP_RACE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_RELIGION_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_RELIGION_TYPEDataTable(ds.Tables["T_PROP_RELIGION_TYPE"]));
                }
                if ((ds.Tables["T_LINK_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_LINK_TYPE_ENUMDataTable(ds.Tables["T_LINK_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SERIALIZER"] != null)) {
                    base.Tables.Add(new T_SERIALIZERDataTable(ds.Tables["T_SERIALIZER"]));
                }
                if ((ds.Tables["T_LINK_ACTION_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_LINK_ACTION_TYPE_ENUMDataTable(ds.Tables["T_LINK_ACTION_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_EMAIL_BOX_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_EMAIL_BOX_TYPE_ENUMDataTable(ds.Tables["T_EMAIL_BOX_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SETTING"] != null)) {
                    base.Tables.Add(new T_SETTINGDataTable(ds.Tables["T_SETTING"]));
                }
                if ((ds.Tables["T_ADS_TYPE"] != null)) {
                    base.Tables.Add(new T_ADS_TYPEDataTable(ds.Tables["T_ADS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_LOCATION_VISIBILITY_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_LOCATION_VISIBILITY_TYPEDataTable(ds.Tables["T_PROP_LOCATION_VISIBILITY_TYPE"]));
                }
                if ((ds.Tables["T_USER_LOCATION_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_USER_LOCATION_TYPE_ENUMDataTable(ds.Tables["T_USER_LOCATION_TYPE_ENUM"]));
                }
                if ((ds.Tables["DatePercent_T_USER"] != null)) {
                    base.Tables.Add(new DatePercent_T_USERDataTable(ds.Tables["DatePercent_T_USER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_BUTTON_SIZE_TYPE_ENUMDataTable T_BUTTON_SIZE_TYPE_ENUM {
            get {
                return this.tableT_BUTTON_SIZE_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CULTUREDataTable T_CULTURE {
            get {
                return this.tableT_CULTURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable T_CULTURE_DATE_FORMAT_TYPE_ENUM {
            get {
                return this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DISTANCE_UNITS_TYPE_ENUMDataTable T_DISTANCE_UNITS_TYPE_ENUM {
            get {
                return this.tableT_DISTANCE_UNITS_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_FAQ_TYPEDataTable T_FAQ_TYPE {
            get {
                return this.tableT_FAQ_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_LIST_TYPE_ENUMDataTable T_LIST_TYPE_ENUM {
            get {
                return this.tableT_LIST_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_AGE_RANGE_TYPEDataTable T_PROP_AGE_RANGE_TYPE {
            get {
                return this.tableT_PROP_AGE_RANGE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_CUSTODY_TYPEDataTable T_PROP_CUSTODY_TYPE {
            get {
                return this.tableT_PROP_CUSTODY_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_DRINK_TYPEDataTable T_PROP_DRINK_TYPE {
            get {
                return this.tableT_PROP_DRINK_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_EYE_TYPEDataTable T_PROP_EYE_TYPE {
            get {
                return this.tableT_PROP_EYE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_HAIR_TYPEDataTable T_PROP_HAIR_TYPE {
            get {
                return this.tableT_PROP_HAIR_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_HAVE_KIDS_TYPEDataTable T_PROP_HAVE_KIDS_TYPE {
            get {
                return this.tableT_PROP_HAVE_KIDS_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_HEIGHT_TYPEDataTable T_PROP_HEIGHT_TYPE {
            get {
                return this.tableT_PROP_HEIGHT_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_LANGUAGE_TYPEDataTable T_PROP_LANGUAGE_TYPE {
            get {
                return this.tableT_PROP_LANGUAGE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_MATCH_SEX_TYPEDataTable T_PROP_MATCH_SEX_TYPE {
            get {
                return this.tableT_PROP_MATCH_SEX_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_RELATIONSHIP_TYPEDataTable T_PROP_RELATIONSHIP_TYPE {
            get {
                return this.tableT_PROP_RELATIONSHIP_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_SEX_TYPE_ENUMDataTable T_PROP_SEX_TYPE_ENUM {
            get {
                return this.tableT_PROP_SEX_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_SMOKE_TYPEDataTable T_PROP_SMOKE_TYPE {
            get {
                return this.tableT_PROP_SMOKE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_STATUS_TYPEDataTable T_PROP_STATUS_TYPE {
            get {
                return this.tableT_PROP_STATUS_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_WANT_KIDS_TYPEDataTable T_PROP_WANT_KIDS_TYPE {
            get {
                return this.tableT_PROP_WANT_KIDS_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_WEIGHT_TYPEDataTable T_PROP_WEIGHT_TYPE {
            get {
                return this.tableT_PROP_WEIGHT_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_ZODIAC_SIGN_TYPEDataTable T_PROP_ZODIAC_SIGN_TYPE {
            get {
                return this.tableT_PROP_ZODIAC_SIGN_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_RESULT_VIEW_TYPE_ENUMDataTable T_RESULT_VIEW_TYPE_ENUM {
            get {
                return this.tableT_RESULT_VIEW_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_RMN_TYPE_TYPE_ENUMDataTable T_RMN_TYPE_TYPE_ENUM {
            get {
                return this.tableT_RMN_TYPE_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_TWINK_TYPEDataTable T_TWINK_TYPE {
            get {
                return this.tableT_TWINK_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_USER_INVITEE_TYPE_ENUMDataTable T_USER_INVITEE_TYPE_ENUM {
            get {
                return this.tableT_USER_INVITEE_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_TWINKDataTable T_TWINK {
            get {
                return this.tableT_TWINK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_FAQDataTable T_FAQ {
            get {
                return this.tableT_FAQ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_BODY_STYLE_TYPEDataTable T_PROP_BODY_STYLE_TYPE {
            get {
                return this.tableT_PROP_BODY_STYLE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_RMN_TYPE_ENUMDataTable T_RMN_TYPE_ENUM {
            get {
                return this.tableT_RMN_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmailDataTable Email {
            get {
                return this.tableEmail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_DOMAIN_TYPE_ENUMDataTable T_DOMAIN_TYPE_ENUM {
            get {
                return this.tableT_DOMAIN_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_CONTACT_FETCHER_TYPE_ENUMDataTable T_CONTACT_FETCHER_TYPE_ENUM {
            get {
                return this.tableT_CONTACT_FETCHER_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_EDUCATION_TYPEDataTable T_PROP_EDUCATION_TYPE {
            get {
                return this.tableT_PROP_EDUCATION_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_INTERESTS_TYPEDataTable T_PROP_INTERESTS_TYPE {
            get {
                return this.tableT_PROP_INTERESTS_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_OCCUPATION_TYPEDataTable T_PROP_OCCUPATION_TYPE {
            get {
                return this.tableT_PROP_OCCUPATION_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_RACE_TYPEDataTable T_PROP_RACE_TYPE {
            get {
                return this.tableT_PROP_RACE_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_RELIGION_TYPEDataTable T_PROP_RELIGION_TYPE {
            get {
                return this.tableT_PROP_RELIGION_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_LINK_TYPE_ENUMDataTable T_LINK_TYPE_ENUM {
            get {
                return this.tableT_LINK_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_SERIALIZERDataTable T_SERIALIZER {
            get {
                return this.tableT_SERIALIZER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_LINK_ACTION_TYPE_ENUMDataTable T_LINK_ACTION_TYPE_ENUM {
            get {
                return this.tableT_LINK_ACTION_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_EMAIL_BOX_TYPE_ENUMDataTable T_EMAIL_BOX_TYPE_ENUM {
            get {
                return this.tableT_EMAIL_BOX_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_SETTINGDataTable T_SETTING {
            get {
                return this.tableT_SETTING;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_ADS_TYPEDataTable T_ADS_TYPE {
            get {
                return this.tableT_ADS_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_PROP_LOCATION_VISIBILITY_TYPEDataTable T_PROP_LOCATION_VISIBILITY_TYPE {
            get {
                return this.tableT_PROP_LOCATION_VISIBILITY_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_USER_LOCATION_TYPE_ENUMDataTable T_USER_LOCATION_TYPE_ENUM {
            get {
                return this.tableT_USER_LOCATION_TYPE_ENUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DatePercent_T_USERDataTable DatePercent_T_USER {
            get {
                return this.tableDatePercent_T_USER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ApplicationHandler cln = ((ApplicationHandler)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_BUTTON_SIZE_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_BUTTON_SIZE_TYPE_ENUMDataTable(ds.Tables["T_BUTTON_SIZE_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_CULTURE"] != null)) {
                    base.Tables.Add(new T_CULTUREDataTable(ds.Tables["T_CULTURE"]));
                }
                if ((ds.Tables["T_CULTURE_DATE_FORMAT_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable(ds.Tables["T_CULTURE_DATE_FORMAT_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_DISTANCE_UNITS_TYPE_ENUMDataTable(ds.Tables["T_DISTANCE_UNITS_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_FAQ_TYPE"] != null)) {
                    base.Tables.Add(new T_FAQ_TYPEDataTable(ds.Tables["T_FAQ_TYPE"]));
                }
                if ((ds.Tables["T_LIST_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_LIST_TYPE_ENUMDataTable(ds.Tables["T_LIST_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_PROP_AGE_RANGE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_AGE_RANGE_TYPEDataTable(ds.Tables["T_PROP_AGE_RANGE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_CUSTODY_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_CUSTODY_TYPEDataTable(ds.Tables["T_PROP_CUSTODY_TYPE"]));
                }
                if ((ds.Tables["T_PROP_DRINK_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_DRINK_TYPEDataTable(ds.Tables["T_PROP_DRINK_TYPE"]));
                }
                if ((ds.Tables["T_PROP_EYE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_EYE_TYPEDataTable(ds.Tables["T_PROP_EYE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_HAIR_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_HAIR_TYPEDataTable(ds.Tables["T_PROP_HAIR_TYPE"]));
                }
                if ((ds.Tables["T_PROP_HAVE_KIDS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_HAVE_KIDS_TYPEDataTable(ds.Tables["T_PROP_HAVE_KIDS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_HEIGHT_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_HEIGHT_TYPEDataTable(ds.Tables["T_PROP_HEIGHT_TYPE"]));
                }
                if ((ds.Tables["T_PROP_LANGUAGE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_LANGUAGE_TYPEDataTable(ds.Tables["T_PROP_LANGUAGE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_MATCH_SEX_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_MATCH_SEX_TYPEDataTable(ds.Tables["T_PROP_MATCH_SEX_TYPE"]));
                }
                if ((ds.Tables["T_PROP_RELATIONSHIP_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_RELATIONSHIP_TYPEDataTable(ds.Tables["T_PROP_RELATIONSHIP_TYPE"]));
                }
                if ((ds.Tables["T_PROP_SEX_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_PROP_SEX_TYPE_ENUMDataTable(ds.Tables["T_PROP_SEX_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_PROP_SMOKE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_SMOKE_TYPEDataTable(ds.Tables["T_PROP_SMOKE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_STATUS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_STATUS_TYPEDataTable(ds.Tables["T_PROP_STATUS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_WANT_KIDS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_WANT_KIDS_TYPEDataTable(ds.Tables["T_PROP_WANT_KIDS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_WEIGHT_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_WEIGHT_TYPEDataTable(ds.Tables["T_PROP_WEIGHT_TYPE"]));
                }
                if ((ds.Tables["T_PROP_ZODIAC_SIGN_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_ZODIAC_SIGN_TYPEDataTable(ds.Tables["T_PROP_ZODIAC_SIGN_TYPE"]));
                }
                if ((ds.Tables["T_RESULT_VIEW_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_RESULT_VIEW_TYPE_ENUMDataTable(ds.Tables["T_RESULT_VIEW_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_RMN_TYPE_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_RMN_TYPE_TYPE_ENUMDataTable(ds.Tables["T_RMN_TYPE_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_TWINK_TYPE"] != null)) {
                    base.Tables.Add(new T_TWINK_TYPEDataTable(ds.Tables["T_TWINK_TYPE"]));
                }
                if ((ds.Tables["T_USER_INVITEE_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_USER_INVITEE_TYPE_ENUMDataTable(ds.Tables["T_USER_INVITEE_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_TWINK"] != null)) {
                    base.Tables.Add(new T_TWINKDataTable(ds.Tables["T_TWINK"]));
                }
                if ((ds.Tables["T_FAQ"] != null)) {
                    base.Tables.Add(new T_FAQDataTable(ds.Tables["T_FAQ"]));
                }
                if ((ds.Tables["T_PROP_BODY_STYLE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_BODY_STYLE_TYPEDataTable(ds.Tables["T_PROP_BODY_STYLE_TYPE"]));
                }
                if ((ds.Tables["T_RMN_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_RMN_TYPE_ENUMDataTable(ds.Tables["T_RMN_TYPE_ENUM"]));
                }
                if ((ds.Tables["Email"] != null)) {
                    base.Tables.Add(new EmailDataTable(ds.Tables["Email"]));
                }
                if ((ds.Tables["T_DOMAIN_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_DOMAIN_TYPE_ENUMDataTable(ds.Tables["T_DOMAIN_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_CONTACT_FETCHER_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_CONTACT_FETCHER_TYPE_ENUMDataTable(ds.Tables["T_CONTACT_FETCHER_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_PROP_EDUCATION_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_EDUCATION_TYPEDataTable(ds.Tables["T_PROP_EDUCATION_TYPE"]));
                }
                if ((ds.Tables["T_PROP_INTERESTS_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_INTERESTS_TYPEDataTable(ds.Tables["T_PROP_INTERESTS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_OCCUPATION_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_OCCUPATION_TYPEDataTable(ds.Tables["T_PROP_OCCUPATION_TYPE"]));
                }
                if ((ds.Tables["T_PROP_RACE_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_RACE_TYPEDataTable(ds.Tables["T_PROP_RACE_TYPE"]));
                }
                if ((ds.Tables["T_PROP_RELIGION_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_RELIGION_TYPEDataTable(ds.Tables["T_PROP_RELIGION_TYPE"]));
                }
                if ((ds.Tables["T_LINK_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_LINK_TYPE_ENUMDataTable(ds.Tables["T_LINK_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SERIALIZER"] != null)) {
                    base.Tables.Add(new T_SERIALIZERDataTable(ds.Tables["T_SERIALIZER"]));
                }
                if ((ds.Tables["T_LINK_ACTION_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_LINK_ACTION_TYPE_ENUMDataTable(ds.Tables["T_LINK_ACTION_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_EMAIL_BOX_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_EMAIL_BOX_TYPE_ENUMDataTable(ds.Tables["T_EMAIL_BOX_TYPE_ENUM"]));
                }
                if ((ds.Tables["T_SETTING"] != null)) {
                    base.Tables.Add(new T_SETTINGDataTable(ds.Tables["T_SETTING"]));
                }
                if ((ds.Tables["T_ADS_TYPE"] != null)) {
                    base.Tables.Add(new T_ADS_TYPEDataTable(ds.Tables["T_ADS_TYPE"]));
                }
                if ((ds.Tables["T_PROP_LOCATION_VISIBILITY_TYPE"] != null)) {
                    base.Tables.Add(new T_PROP_LOCATION_VISIBILITY_TYPEDataTable(ds.Tables["T_PROP_LOCATION_VISIBILITY_TYPE"]));
                }
                if ((ds.Tables["T_USER_LOCATION_TYPE_ENUM"] != null)) {
                    base.Tables.Add(new T_USER_LOCATION_TYPE_ENUMDataTable(ds.Tables["T_USER_LOCATION_TYPE_ENUM"]));
                }
                if ((ds.Tables["DatePercent_T_USER"] != null)) {
                    base.Tables.Add(new DatePercent_T_USERDataTable(ds.Tables["DatePercent_T_USER"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_BUTTON_SIZE_TYPE_ENUM = ((T_BUTTON_SIZE_TYPE_ENUMDataTable)(base.Tables["T_BUTTON_SIZE_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_BUTTON_SIZE_TYPE_ENUM != null)) {
                    this.tableT_BUTTON_SIZE_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_CULTURE = ((T_CULTUREDataTable)(base.Tables["T_CULTURE"]));
            if ((initTable == true)) {
                if ((this.tableT_CULTURE != null)) {
                    this.tableT_CULTURE.InitVars();
                }
            }
            this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM = ((T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable)(base.Tables["T_CULTURE_DATE_FORMAT_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM != null)) {
                    this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_DISTANCE_UNITS_TYPE_ENUM = ((T_DISTANCE_UNITS_TYPE_ENUMDataTable)(base.Tables["T_DISTANCE_UNITS_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_DISTANCE_UNITS_TYPE_ENUM != null)) {
                    this.tableT_DISTANCE_UNITS_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_FAQ_TYPE = ((T_FAQ_TYPEDataTable)(base.Tables["T_FAQ_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_FAQ_TYPE != null)) {
                    this.tableT_FAQ_TYPE.InitVars();
                }
            }
            this.tableT_LIST_TYPE_ENUM = ((T_LIST_TYPE_ENUMDataTable)(base.Tables["T_LIST_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_LIST_TYPE_ENUM != null)) {
                    this.tableT_LIST_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_PROP_AGE_RANGE_TYPE = ((T_PROP_AGE_RANGE_TYPEDataTable)(base.Tables["T_PROP_AGE_RANGE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_AGE_RANGE_TYPE != null)) {
                    this.tableT_PROP_AGE_RANGE_TYPE.InitVars();
                }
            }
            this.tableT_PROP_CUSTODY_TYPE = ((T_PROP_CUSTODY_TYPEDataTable)(base.Tables["T_PROP_CUSTODY_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_CUSTODY_TYPE != null)) {
                    this.tableT_PROP_CUSTODY_TYPE.InitVars();
                }
            }
            this.tableT_PROP_DRINK_TYPE = ((T_PROP_DRINK_TYPEDataTable)(base.Tables["T_PROP_DRINK_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_DRINK_TYPE != null)) {
                    this.tableT_PROP_DRINK_TYPE.InitVars();
                }
            }
            this.tableT_PROP_EYE_TYPE = ((T_PROP_EYE_TYPEDataTable)(base.Tables["T_PROP_EYE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_EYE_TYPE != null)) {
                    this.tableT_PROP_EYE_TYPE.InitVars();
                }
            }
            this.tableT_PROP_HAIR_TYPE = ((T_PROP_HAIR_TYPEDataTable)(base.Tables["T_PROP_HAIR_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_HAIR_TYPE != null)) {
                    this.tableT_PROP_HAIR_TYPE.InitVars();
                }
            }
            this.tableT_PROP_HAVE_KIDS_TYPE = ((T_PROP_HAVE_KIDS_TYPEDataTable)(base.Tables["T_PROP_HAVE_KIDS_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_HAVE_KIDS_TYPE != null)) {
                    this.tableT_PROP_HAVE_KIDS_TYPE.InitVars();
                }
            }
            this.tableT_PROP_HEIGHT_TYPE = ((T_PROP_HEIGHT_TYPEDataTable)(base.Tables["T_PROP_HEIGHT_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_HEIGHT_TYPE != null)) {
                    this.tableT_PROP_HEIGHT_TYPE.InitVars();
                }
            }
            this.tableT_PROP_LANGUAGE_TYPE = ((T_PROP_LANGUAGE_TYPEDataTable)(base.Tables["T_PROP_LANGUAGE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_LANGUAGE_TYPE != null)) {
                    this.tableT_PROP_LANGUAGE_TYPE.InitVars();
                }
            }
            this.tableT_PROP_MATCH_SEX_TYPE = ((T_PROP_MATCH_SEX_TYPEDataTable)(base.Tables["T_PROP_MATCH_SEX_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_MATCH_SEX_TYPE != null)) {
                    this.tableT_PROP_MATCH_SEX_TYPE.InitVars();
                }
            }
            this.tableT_PROP_RELATIONSHIP_TYPE = ((T_PROP_RELATIONSHIP_TYPEDataTable)(base.Tables["T_PROP_RELATIONSHIP_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_RELATIONSHIP_TYPE != null)) {
                    this.tableT_PROP_RELATIONSHIP_TYPE.InitVars();
                }
            }
            this.tableT_PROP_SEX_TYPE_ENUM = ((T_PROP_SEX_TYPE_ENUMDataTable)(base.Tables["T_PROP_SEX_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_SEX_TYPE_ENUM != null)) {
                    this.tableT_PROP_SEX_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_PROP_SMOKE_TYPE = ((T_PROP_SMOKE_TYPEDataTable)(base.Tables["T_PROP_SMOKE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_SMOKE_TYPE != null)) {
                    this.tableT_PROP_SMOKE_TYPE.InitVars();
                }
            }
            this.tableT_PROP_STATUS_TYPE = ((T_PROP_STATUS_TYPEDataTable)(base.Tables["T_PROP_STATUS_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_STATUS_TYPE != null)) {
                    this.tableT_PROP_STATUS_TYPE.InitVars();
                }
            }
            this.tableT_PROP_WANT_KIDS_TYPE = ((T_PROP_WANT_KIDS_TYPEDataTable)(base.Tables["T_PROP_WANT_KIDS_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_WANT_KIDS_TYPE != null)) {
                    this.tableT_PROP_WANT_KIDS_TYPE.InitVars();
                }
            }
            this.tableT_PROP_WEIGHT_TYPE = ((T_PROP_WEIGHT_TYPEDataTable)(base.Tables["T_PROP_WEIGHT_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_WEIGHT_TYPE != null)) {
                    this.tableT_PROP_WEIGHT_TYPE.InitVars();
                }
            }
            this.tableT_PROP_ZODIAC_SIGN_TYPE = ((T_PROP_ZODIAC_SIGN_TYPEDataTable)(base.Tables["T_PROP_ZODIAC_SIGN_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_ZODIAC_SIGN_TYPE != null)) {
                    this.tableT_PROP_ZODIAC_SIGN_TYPE.InitVars();
                }
            }
            this.tableT_RESULT_VIEW_TYPE_ENUM = ((T_RESULT_VIEW_TYPE_ENUMDataTable)(base.Tables["T_RESULT_VIEW_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_RESULT_VIEW_TYPE_ENUM != null)) {
                    this.tableT_RESULT_VIEW_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_RMN_TYPE_TYPE_ENUM = ((T_RMN_TYPE_TYPE_ENUMDataTable)(base.Tables["T_RMN_TYPE_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_RMN_TYPE_TYPE_ENUM != null)) {
                    this.tableT_RMN_TYPE_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_TWINK_TYPE = ((T_TWINK_TYPEDataTable)(base.Tables["T_TWINK_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_TWINK_TYPE != null)) {
                    this.tableT_TWINK_TYPE.InitVars();
                }
            }
            this.tableT_USER_INVITEE_TYPE_ENUM = ((T_USER_INVITEE_TYPE_ENUMDataTable)(base.Tables["T_USER_INVITEE_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_USER_INVITEE_TYPE_ENUM != null)) {
                    this.tableT_USER_INVITEE_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_TWINK = ((T_TWINKDataTable)(base.Tables["T_TWINK"]));
            if ((initTable == true)) {
                if ((this.tableT_TWINK != null)) {
                    this.tableT_TWINK.InitVars();
                }
            }
            this.tableT_FAQ = ((T_FAQDataTable)(base.Tables["T_FAQ"]));
            if ((initTable == true)) {
                if ((this.tableT_FAQ != null)) {
                    this.tableT_FAQ.InitVars();
                }
            }
            this.tableT_PROP_BODY_STYLE_TYPE = ((T_PROP_BODY_STYLE_TYPEDataTable)(base.Tables["T_PROP_BODY_STYLE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_BODY_STYLE_TYPE != null)) {
                    this.tableT_PROP_BODY_STYLE_TYPE.InitVars();
                }
            }
            this.tableT_RMN_TYPE_ENUM = ((T_RMN_TYPE_ENUMDataTable)(base.Tables["T_RMN_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_RMN_TYPE_ENUM != null)) {
                    this.tableT_RMN_TYPE_ENUM.InitVars();
                }
            }
            this.tableEmail = ((EmailDataTable)(base.Tables["Email"]));
            if ((initTable == true)) {
                if ((this.tableEmail != null)) {
                    this.tableEmail.InitVars();
                }
            }
            this.tableT_DOMAIN_TYPE_ENUM = ((T_DOMAIN_TYPE_ENUMDataTable)(base.Tables["T_DOMAIN_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_DOMAIN_TYPE_ENUM != null)) {
                    this.tableT_DOMAIN_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_CONTACT_FETCHER_TYPE_ENUM = ((T_CONTACT_FETCHER_TYPE_ENUMDataTable)(base.Tables["T_CONTACT_FETCHER_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_CONTACT_FETCHER_TYPE_ENUM != null)) {
                    this.tableT_CONTACT_FETCHER_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_PROP_EDUCATION_TYPE = ((T_PROP_EDUCATION_TYPEDataTable)(base.Tables["T_PROP_EDUCATION_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_EDUCATION_TYPE != null)) {
                    this.tableT_PROP_EDUCATION_TYPE.InitVars();
                }
            }
            this.tableT_PROP_INTERESTS_TYPE = ((T_PROP_INTERESTS_TYPEDataTable)(base.Tables["T_PROP_INTERESTS_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_INTERESTS_TYPE != null)) {
                    this.tableT_PROP_INTERESTS_TYPE.InitVars();
                }
            }
            this.tableT_PROP_OCCUPATION_TYPE = ((T_PROP_OCCUPATION_TYPEDataTable)(base.Tables["T_PROP_OCCUPATION_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_OCCUPATION_TYPE != null)) {
                    this.tableT_PROP_OCCUPATION_TYPE.InitVars();
                }
            }
            this.tableT_PROP_RACE_TYPE = ((T_PROP_RACE_TYPEDataTable)(base.Tables["T_PROP_RACE_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_RACE_TYPE != null)) {
                    this.tableT_PROP_RACE_TYPE.InitVars();
                }
            }
            this.tableT_PROP_RELIGION_TYPE = ((T_PROP_RELIGION_TYPEDataTable)(base.Tables["T_PROP_RELIGION_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_RELIGION_TYPE != null)) {
                    this.tableT_PROP_RELIGION_TYPE.InitVars();
                }
            }
            this.tableT_LINK_TYPE_ENUM = ((T_LINK_TYPE_ENUMDataTable)(base.Tables["T_LINK_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_LINK_TYPE_ENUM != null)) {
                    this.tableT_LINK_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_SERIALIZER = ((T_SERIALIZERDataTable)(base.Tables["T_SERIALIZER"]));
            if ((initTable == true)) {
                if ((this.tableT_SERIALIZER != null)) {
                    this.tableT_SERIALIZER.InitVars();
                }
            }
            this.tableT_LINK_ACTION_TYPE_ENUM = ((T_LINK_ACTION_TYPE_ENUMDataTable)(base.Tables["T_LINK_ACTION_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_LINK_ACTION_TYPE_ENUM != null)) {
                    this.tableT_LINK_ACTION_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_EMAIL_BOX_TYPE_ENUM = ((T_EMAIL_BOX_TYPE_ENUMDataTable)(base.Tables["T_EMAIL_BOX_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_EMAIL_BOX_TYPE_ENUM != null)) {
                    this.tableT_EMAIL_BOX_TYPE_ENUM.InitVars();
                }
            }
            this.tableT_SETTING = ((T_SETTINGDataTable)(base.Tables["T_SETTING"]));
            if ((initTable == true)) {
                if ((this.tableT_SETTING != null)) {
                    this.tableT_SETTING.InitVars();
                }
            }
            this.tableT_ADS_TYPE = ((T_ADS_TYPEDataTable)(base.Tables["T_ADS_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_ADS_TYPE != null)) {
                    this.tableT_ADS_TYPE.InitVars();
                }
            }
            this.tableT_PROP_LOCATION_VISIBILITY_TYPE = ((T_PROP_LOCATION_VISIBILITY_TYPEDataTable)(base.Tables["T_PROP_LOCATION_VISIBILITY_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableT_PROP_LOCATION_VISIBILITY_TYPE != null)) {
                    this.tableT_PROP_LOCATION_VISIBILITY_TYPE.InitVars();
                }
            }
            this.tableT_USER_LOCATION_TYPE_ENUM = ((T_USER_LOCATION_TYPE_ENUMDataTable)(base.Tables["T_USER_LOCATION_TYPE_ENUM"]));
            if ((initTable == true)) {
                if ((this.tableT_USER_LOCATION_TYPE_ENUM != null)) {
                    this.tableT_USER_LOCATION_TYPE_ENUM.InitVars();
                }
            }
            this.tableDatePercent_T_USER = ((DatePercent_T_USERDataTable)(base.Tables["DatePercent_T_USER"]));
            if ((initTable == true)) {
                if ((this.tableDatePercent_T_USER != null)) {
                    this.tableDatePercent_T_USER.InitVars();
                }
            }
            this.relationFK_T_TWINK_T_TWINK_TYPE = this.Relations["FK_T_TWINK_T_TWINK_TYPE"];
            this.relationFK_T_FAQ_T_FAQ_TYPE = this.Relations["FK_T_FAQ_T_FAQ_TYPE"];
            this.relationFK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM = this.Relations["FK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ApplicationHandler";
            this.Prefix = "";
            this.Namespace = "http://www.datepercent.com/ApplicationHandler.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_BUTTON_SIZE_TYPE_ENUM = new T_BUTTON_SIZE_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_BUTTON_SIZE_TYPE_ENUM);
            this.tableT_CULTURE = new T_CULTUREDataTable();
            base.Tables.Add(this.tableT_CULTURE);
            this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM = new T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM);
            this.tableT_DISTANCE_UNITS_TYPE_ENUM = new T_DISTANCE_UNITS_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_DISTANCE_UNITS_TYPE_ENUM);
            this.tableT_FAQ_TYPE = new T_FAQ_TYPEDataTable();
            base.Tables.Add(this.tableT_FAQ_TYPE);
            this.tableT_LIST_TYPE_ENUM = new T_LIST_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_LIST_TYPE_ENUM);
            this.tableT_PROP_AGE_RANGE_TYPE = new T_PROP_AGE_RANGE_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_AGE_RANGE_TYPE);
            this.tableT_PROP_CUSTODY_TYPE = new T_PROP_CUSTODY_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_CUSTODY_TYPE);
            this.tableT_PROP_DRINK_TYPE = new T_PROP_DRINK_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_DRINK_TYPE);
            this.tableT_PROP_EYE_TYPE = new T_PROP_EYE_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_EYE_TYPE);
            this.tableT_PROP_HAIR_TYPE = new T_PROP_HAIR_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_HAIR_TYPE);
            this.tableT_PROP_HAVE_KIDS_TYPE = new T_PROP_HAVE_KIDS_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_HAVE_KIDS_TYPE);
            this.tableT_PROP_HEIGHT_TYPE = new T_PROP_HEIGHT_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_HEIGHT_TYPE);
            this.tableT_PROP_LANGUAGE_TYPE = new T_PROP_LANGUAGE_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_LANGUAGE_TYPE);
            this.tableT_PROP_MATCH_SEX_TYPE = new T_PROP_MATCH_SEX_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_MATCH_SEX_TYPE);
            this.tableT_PROP_RELATIONSHIP_TYPE = new T_PROP_RELATIONSHIP_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_RELATIONSHIP_TYPE);
            this.tableT_PROP_SEX_TYPE_ENUM = new T_PROP_SEX_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_PROP_SEX_TYPE_ENUM);
            this.tableT_PROP_SMOKE_TYPE = new T_PROP_SMOKE_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_SMOKE_TYPE);
            this.tableT_PROP_STATUS_TYPE = new T_PROP_STATUS_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_STATUS_TYPE);
            this.tableT_PROP_WANT_KIDS_TYPE = new T_PROP_WANT_KIDS_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_WANT_KIDS_TYPE);
            this.tableT_PROP_WEIGHT_TYPE = new T_PROP_WEIGHT_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_WEIGHT_TYPE);
            this.tableT_PROP_ZODIAC_SIGN_TYPE = new T_PROP_ZODIAC_SIGN_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_ZODIAC_SIGN_TYPE);
            this.tableT_RESULT_VIEW_TYPE_ENUM = new T_RESULT_VIEW_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_RESULT_VIEW_TYPE_ENUM);
            this.tableT_RMN_TYPE_TYPE_ENUM = new T_RMN_TYPE_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_RMN_TYPE_TYPE_ENUM);
            this.tableT_TWINK_TYPE = new T_TWINK_TYPEDataTable();
            base.Tables.Add(this.tableT_TWINK_TYPE);
            this.tableT_USER_INVITEE_TYPE_ENUM = new T_USER_INVITEE_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_USER_INVITEE_TYPE_ENUM);
            this.tableT_TWINK = new T_TWINKDataTable();
            base.Tables.Add(this.tableT_TWINK);
            this.tableT_FAQ = new T_FAQDataTable();
            base.Tables.Add(this.tableT_FAQ);
            this.tableT_PROP_BODY_STYLE_TYPE = new T_PROP_BODY_STYLE_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_BODY_STYLE_TYPE);
            this.tableT_RMN_TYPE_ENUM = new T_RMN_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_RMN_TYPE_ENUM);
            this.tableEmail = new EmailDataTable();
            base.Tables.Add(this.tableEmail);
            this.tableT_DOMAIN_TYPE_ENUM = new T_DOMAIN_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_DOMAIN_TYPE_ENUM);
            this.tableT_CONTACT_FETCHER_TYPE_ENUM = new T_CONTACT_FETCHER_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_CONTACT_FETCHER_TYPE_ENUM);
            this.tableT_PROP_EDUCATION_TYPE = new T_PROP_EDUCATION_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_EDUCATION_TYPE);
            this.tableT_PROP_INTERESTS_TYPE = new T_PROP_INTERESTS_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_INTERESTS_TYPE);
            this.tableT_PROP_OCCUPATION_TYPE = new T_PROP_OCCUPATION_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_OCCUPATION_TYPE);
            this.tableT_PROP_RACE_TYPE = new T_PROP_RACE_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_RACE_TYPE);
            this.tableT_PROP_RELIGION_TYPE = new T_PROP_RELIGION_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_RELIGION_TYPE);
            this.tableT_LINK_TYPE_ENUM = new T_LINK_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_LINK_TYPE_ENUM);
            this.tableT_SERIALIZER = new T_SERIALIZERDataTable();
            base.Tables.Add(this.tableT_SERIALIZER);
            this.tableT_LINK_ACTION_TYPE_ENUM = new T_LINK_ACTION_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_LINK_ACTION_TYPE_ENUM);
            this.tableT_EMAIL_BOX_TYPE_ENUM = new T_EMAIL_BOX_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_EMAIL_BOX_TYPE_ENUM);
            this.tableT_SETTING = new T_SETTINGDataTable();
            base.Tables.Add(this.tableT_SETTING);
            this.tableT_ADS_TYPE = new T_ADS_TYPEDataTable();
            base.Tables.Add(this.tableT_ADS_TYPE);
            this.tableT_PROP_LOCATION_VISIBILITY_TYPE = new T_PROP_LOCATION_VISIBILITY_TYPEDataTable();
            base.Tables.Add(this.tableT_PROP_LOCATION_VISIBILITY_TYPE);
            this.tableT_USER_LOCATION_TYPE_ENUM = new T_USER_LOCATION_TYPE_ENUMDataTable();
            base.Tables.Add(this.tableT_USER_LOCATION_TYPE_ENUM);
            this.tableDatePercent_T_USER = new DatePercent_T_USERDataTable();
            base.Tables.Add(this.tableDatePercent_T_USER);
            this.relationFK_T_TWINK_T_TWINK_TYPE = new global::System.Data.DataRelation("FK_T_TWINK_T_TWINK_TYPE", new global::System.Data.DataColumn[] {
                        this.tableT_TWINK_TYPE.TWT_CODEColumn}, new global::System.Data.DataColumn[] {
                        this.tableT_TWINK.TWK_TWINK_TYPEColumn}, false);
            this.Relations.Add(this.relationFK_T_TWINK_T_TWINK_TYPE);
            this.relationFK_T_FAQ_T_FAQ_TYPE = new global::System.Data.DataRelation("FK_T_FAQ_T_FAQ_TYPE", new global::System.Data.DataColumn[] {
                        this.tableT_FAQ_TYPE.FQT_CODEColumn}, new global::System.Data.DataColumn[] {
                        this.tableT_FAQ.FAQ_FAQ_TYPEColumn}, false);
            this.Relations.Add(this.relationFK_T_FAQ_T_FAQ_TYPE);
            this.relationFK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM = new global::System.Data.DataRelation("FK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM", new global::System.Data.DataColumn[] {
                        this.tableT_RMN_TYPE_TYPE_ENUM.RTT_CODEColumn}, new global::System.Data.DataColumn[] {
                        this.tableT_RMN_TYPE_ENUM.RMT_RTT_TYPE_TYPEColumn}, false);
            this.Relations.Add(this.relationFK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_BUTTON_SIZE_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_CULTURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_CULTURE_DATE_FORMAT_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_DISTANCE_UNITS_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_FAQ_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_LIST_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_AGE_RANGE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_CUSTODY_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_DRINK_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_EYE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_HAIR_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_HAVE_KIDS_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_HEIGHT_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_LANGUAGE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_MATCH_SEX_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_RELATIONSHIP_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_SEX_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_SMOKE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_STATUS_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_WANT_KIDS_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_WEIGHT_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_ZODIAC_SIGN_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_RESULT_VIEW_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_RMN_TYPE_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_TWINK_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_USER_INVITEE_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_TWINK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_FAQ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_BODY_STYLE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_RMN_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEmail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_DOMAIN_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_CONTACT_FETCHER_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_EDUCATION_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_INTERESTS_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_OCCUPATION_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_RACE_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_RELIGION_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_LINK_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_SERIALIZER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_LINK_ACTION_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_EMAIL_BOX_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_SETTING() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_ADS_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_PROP_LOCATION_VISIBILITY_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_USER_LOCATION_TYPE_ENUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDatePercent_T_USER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ApplicationHandler ds = new ApplicationHandler();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_BUTTON_SIZE_TYPE_ENUMRowChangeEventHandler(object sender, T_BUTTON_SIZE_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_CULTURERowChangeEventHandler(object sender, T_CULTURERowChangeEvent e);
        
        public delegate void T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEventHandler(object sender, T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler(object sender, T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_FAQ_TYPERowChangeEventHandler(object sender, T_FAQ_TYPERowChangeEvent e);
        
        public delegate void T_LIST_TYPE_ENUMRowChangeEventHandler(object sender, T_LIST_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_PROP_AGE_RANGE_TYPERowChangeEventHandler(object sender, T_PROP_AGE_RANGE_TYPERowChangeEvent e);
        
        public delegate void T_PROP_CUSTODY_TYPERowChangeEventHandler(object sender, T_PROP_CUSTODY_TYPERowChangeEvent e);
        
        public delegate void T_PROP_DRINK_TYPERowChangeEventHandler(object sender, T_PROP_DRINK_TYPERowChangeEvent e);
        
        public delegate void T_PROP_EYE_TYPERowChangeEventHandler(object sender, T_PROP_EYE_TYPERowChangeEvent e);
        
        public delegate void T_PROP_HAIR_TYPERowChangeEventHandler(object sender, T_PROP_HAIR_TYPERowChangeEvent e);
        
        public delegate void T_PROP_HAVE_KIDS_TYPERowChangeEventHandler(object sender, T_PROP_HAVE_KIDS_TYPERowChangeEvent e);
        
        public delegate void T_PROP_HEIGHT_TYPERowChangeEventHandler(object sender, T_PROP_HEIGHT_TYPERowChangeEvent e);
        
        public delegate void T_PROP_LANGUAGE_TYPERowChangeEventHandler(object sender, T_PROP_LANGUAGE_TYPERowChangeEvent e);
        
        public delegate void T_PROP_MATCH_SEX_TYPERowChangeEventHandler(object sender, T_PROP_MATCH_SEX_TYPERowChangeEvent e);
        
        public delegate void T_PROP_RELATIONSHIP_TYPERowChangeEventHandler(object sender, T_PROP_RELATIONSHIP_TYPERowChangeEvent e);
        
        public delegate void T_PROP_SEX_TYPE_ENUMRowChangeEventHandler(object sender, T_PROP_SEX_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_PROP_SMOKE_TYPERowChangeEventHandler(object sender, T_PROP_SMOKE_TYPERowChangeEvent e);
        
        public delegate void T_PROP_STATUS_TYPERowChangeEventHandler(object sender, T_PROP_STATUS_TYPERowChangeEvent e);
        
        public delegate void T_PROP_WANT_KIDS_TYPERowChangeEventHandler(object sender, T_PROP_WANT_KIDS_TYPERowChangeEvent e);
        
        public delegate void T_PROP_WEIGHT_TYPERowChangeEventHandler(object sender, T_PROP_WEIGHT_TYPERowChangeEvent e);
        
        public delegate void T_PROP_ZODIAC_SIGN_TYPERowChangeEventHandler(object sender, T_PROP_ZODIAC_SIGN_TYPERowChangeEvent e);
        
        public delegate void T_RESULT_VIEW_TYPE_ENUMRowChangeEventHandler(object sender, T_RESULT_VIEW_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_RMN_TYPE_TYPE_ENUMRowChangeEventHandler(object sender, T_RMN_TYPE_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_TWINK_TYPERowChangeEventHandler(object sender, T_TWINK_TYPERowChangeEvent e);
        
        public delegate void T_USER_INVITEE_TYPE_ENUMRowChangeEventHandler(object sender, T_USER_INVITEE_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_TWINKRowChangeEventHandler(object sender, T_TWINKRowChangeEvent e);
        
        public delegate void T_FAQRowChangeEventHandler(object sender, T_FAQRowChangeEvent e);
        
        public delegate void T_PROP_BODY_STYLE_TYPERowChangeEventHandler(object sender, T_PROP_BODY_STYLE_TYPERowChangeEvent e);
        
        public delegate void T_RMN_TYPE_ENUMRowChangeEventHandler(object sender, T_RMN_TYPE_ENUMRowChangeEvent e);
        
        public delegate void EmailRowChangeEventHandler(object sender, EmailRowChangeEvent e);
        
        public delegate void T_DOMAIN_TYPE_ENUMRowChangeEventHandler(object sender, T_DOMAIN_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_CONTACT_FETCHER_TYPE_ENUMRowChangeEventHandler(object sender, T_CONTACT_FETCHER_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_PROP_EDUCATION_TYPERowChangeEventHandler(object sender, T_PROP_EDUCATION_TYPERowChangeEvent e);
        
        public delegate void T_PROP_INTERESTS_TYPERowChangeEventHandler(object sender, T_PROP_INTERESTS_TYPERowChangeEvent e);
        
        public delegate void T_PROP_OCCUPATION_TYPERowChangeEventHandler(object sender, T_PROP_OCCUPATION_TYPERowChangeEvent e);
        
        public delegate void T_PROP_RACE_TYPERowChangeEventHandler(object sender, T_PROP_RACE_TYPERowChangeEvent e);
        
        public delegate void T_PROP_RELIGION_TYPERowChangeEventHandler(object sender, T_PROP_RELIGION_TYPERowChangeEvent e);
        
        public delegate void T_LINK_TYPE_ENUMRowChangeEventHandler(object sender, T_LINK_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_SERIALIZERRowChangeEventHandler(object sender, T_SERIALIZERRowChangeEvent e);
        
        public delegate void T_LINK_ACTION_TYPE_ENUMRowChangeEventHandler(object sender, T_LINK_ACTION_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_EMAIL_BOX_TYPE_ENUMRowChangeEventHandler(object sender, T_EMAIL_BOX_TYPE_ENUMRowChangeEvent e);
        
        public delegate void T_SETTINGRowChangeEventHandler(object sender, T_SETTINGRowChangeEvent e);
        
        public delegate void T_ADS_TYPERowChangeEventHandler(object sender, T_ADS_TYPERowChangeEvent e);
        
        public delegate void T_PROP_LOCATION_VISIBILITY_TYPERowChangeEventHandler(object sender, T_PROP_LOCATION_VISIBILITY_TYPERowChangeEvent e);
        
        public delegate void T_USER_LOCATION_TYPE_ENUMRowChangeEventHandler(object sender, T_USER_LOCATION_TYPE_ENUMRowChangeEvent e);
        
        public delegate void DatePercent_T_USERRowChangeEventHandler(object sender, DatePercent_T_USERRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_BUTTON_SIZE_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBNS_CODE;
            
            private global::System.Data.DataColumn columnBNS_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BUTTON_SIZE_TYPE_ENUMDataTable() {
                this.TableName = "T_BUTTON_SIZE_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_BUTTON_SIZE_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_BUTTON_SIZE_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BNS_CODEColumn {
                get {
                    return this.columnBNS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BNS_DESCRIPTIONColumn {
                get {
                    return this.columnBNS_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BUTTON_SIZE_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_BUTTON_SIZE_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_BUTTON_SIZE_TYPE_ENUMRowChangeEventHandler T_BUTTON_SIZE_TYPE_ENUMRowChanging;
            
            public event T_BUTTON_SIZE_TYPE_ENUMRowChangeEventHandler T_BUTTON_SIZE_TYPE_ENUMRowChanged;
            
            public event T_BUTTON_SIZE_TYPE_ENUMRowChangeEventHandler T_BUTTON_SIZE_TYPE_ENUMRowDeleting;
            
            public event T_BUTTON_SIZE_TYPE_ENUMRowChangeEventHandler T_BUTTON_SIZE_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_BUTTON_SIZE_TYPE_ENUMRow(T_BUTTON_SIZE_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BUTTON_SIZE_TYPE_ENUMRow AddT_BUTTON_SIZE_TYPE_ENUMRow(int BNS_CODE, string BNS_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_BUTTON_SIZE_TYPE_ENUMRow rowT_BUTTON_SIZE_TYPE_ENUMRow = ((T_BUTTON_SIZE_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BNS_CODE,
                        BNS_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_BUTTON_SIZE_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_BUTTON_SIZE_TYPE_ENUMRow);
                return rowT_BUTTON_SIZE_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BUTTON_SIZE_TYPE_ENUMRow FindByBNS_CODE(int BNS_CODE) {
                return ((T_BUTTON_SIZE_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            BNS_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_BUTTON_SIZE_TYPE_ENUMDataTable cln = ((T_BUTTON_SIZE_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_BUTTON_SIZE_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBNS_CODE = base.Columns["BNS_CODE"];
                this.columnBNS_DESCRIPTION = base.Columns["BNS_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBNS_CODE = new global::System.Data.DataColumn("BNS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBNS_CODE);
                this.columnBNS_DESCRIPTION = new global::System.Data.DataColumn("BNS_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBNS_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBNS_CODE}, true));
                this.columnBNS_CODE.AllowDBNull = false;
                this.columnBNS_CODE.Unique = true;
                this.columnBNS_DESCRIPTION.AllowDBNull = false;
                this.columnBNS_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BUTTON_SIZE_TYPE_ENUMRow NewT_BUTTON_SIZE_TYPE_ENUMRow() {
                return ((T_BUTTON_SIZE_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_BUTTON_SIZE_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_BUTTON_SIZE_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_BUTTON_SIZE_TYPE_ENUMRowChanged != null)) {
                    this.T_BUTTON_SIZE_TYPE_ENUMRowChanged(this, new T_BUTTON_SIZE_TYPE_ENUMRowChangeEvent(((T_BUTTON_SIZE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_BUTTON_SIZE_TYPE_ENUMRowChanging != null)) {
                    this.T_BUTTON_SIZE_TYPE_ENUMRowChanging(this, new T_BUTTON_SIZE_TYPE_ENUMRowChangeEvent(((T_BUTTON_SIZE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_BUTTON_SIZE_TYPE_ENUMRowDeleted != null)) {
                    this.T_BUTTON_SIZE_TYPE_ENUMRowDeleted(this, new T_BUTTON_SIZE_TYPE_ENUMRowChangeEvent(((T_BUTTON_SIZE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_BUTTON_SIZE_TYPE_ENUMRowDeleting != null)) {
                    this.T_BUTTON_SIZE_TYPE_ENUMRowDeleting(this, new T_BUTTON_SIZE_TYPE_ENUMRowChangeEvent(((T_BUTTON_SIZE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_BUTTON_SIZE_TYPE_ENUMRow(T_BUTTON_SIZE_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_BUTTON_SIZE_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_CULTUREDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCLT_ID;
            
            private global::System.Data.DataColumn columnCLT_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTUREDataTable() {
                this.TableName = "T_CULTURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CULTUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_CULTUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLT_IDColumn {
                get {
                    return this.columnCLT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLT_NAMEColumn {
                get {
                    return this.columnCLT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURERow this[int index] {
                get {
                    return ((T_CULTURERow)(this.Rows[index]));
                }
            }
            
            public event T_CULTURERowChangeEventHandler T_CULTURERowChanging;
            
            public event T_CULTURERowChangeEventHandler T_CULTURERowChanged;
            
            public event T_CULTURERowChangeEventHandler T_CULTURERowDeleting;
            
            public event T_CULTURERowChangeEventHandler T_CULTURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_CULTURERow(T_CULTURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURERow AddT_CULTURERow(string CLT_NAME) {
                T_CULTURERow rowT_CULTURERow = ((T_CULTURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CLT_NAME};
                rowT_CULTURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_CULTURERow);
                return rowT_CULTURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURERow FindByCLT_ID(int CLT_ID) {
                return ((T_CULTURERow)(this.Rows.Find(new object[] {
                            CLT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_CULTUREDataTable cln = ((T_CULTUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_CULTUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCLT_ID = base.Columns["CLT_ID"];
                this.columnCLT_NAME = base.Columns["CLT_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCLT_ID = new global::System.Data.DataColumn("CLT_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLT_ID);
                this.columnCLT_NAME = new global::System.Data.DataColumn("CLT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLT_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCLT_ID}, true));
                this.columnCLT_ID.AutoIncrement = true;
                this.columnCLT_ID.AllowDBNull = false;
                this.columnCLT_ID.ReadOnly = true;
                this.columnCLT_ID.Unique = true;
                this.columnCLT_NAME.AllowDBNull = false;
                this.columnCLT_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURERow NewT_CULTURERow() {
                return ((T_CULTURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_CULTURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_CULTURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CULTURERowChanged != null)) {
                    this.T_CULTURERowChanged(this, new T_CULTURERowChangeEvent(((T_CULTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CULTURERowChanging != null)) {
                    this.T_CULTURERowChanging(this, new T_CULTURERowChangeEvent(((T_CULTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CULTURERowDeleted != null)) {
                    this.T_CULTURERowDeleted(this, new T_CULTURERowChangeEvent(((T_CULTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CULTURERowDeleting != null)) {
                    this.T_CULTURERowDeleting(this, new T_CULTURERowChangeEvent(((T_CULTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_CULTURERow(T_CULTURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_CULTUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCDF_CODE;
            
            private global::System.Data.DataColumn columnCDF_DESCRIPTION;
            
            private global::System.Data.DataColumn columnCDF_FORMAT;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable() {
                this.TableName = "T_CULTURE_DATE_FORMAT_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDF_CODEColumn {
                get {
                    return this.columnCDF_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDF_DESCRIPTIONColumn {
                get {
                    return this.columnCDF_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CDF_FORMATColumn {
                get {
                    return this.columnCDF_FORMAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURE_DATE_FORMAT_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEventHandler T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChanging;
            
            public event T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEventHandler T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChanged;
            
            public event T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEventHandler T_CULTURE_DATE_FORMAT_TYPE_ENUMRowDeleting;
            
            public event T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEventHandler T_CULTURE_DATE_FORMAT_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_CULTURE_DATE_FORMAT_TYPE_ENUMRow(T_CULTURE_DATE_FORMAT_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURE_DATE_FORMAT_TYPE_ENUMRow AddT_CULTURE_DATE_FORMAT_TYPE_ENUMRow(int CDF_CODE, string CDF_DESCRIPTION, string CDF_FORMAT, int ValueCode, string ValueNameEnum, string ValueName) {
                T_CULTURE_DATE_FORMAT_TYPE_ENUMRow rowT_CULTURE_DATE_FORMAT_TYPE_ENUMRow = ((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CDF_CODE,
                        CDF_DESCRIPTION,
                        CDF_FORMAT,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_CULTURE_DATE_FORMAT_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_CULTURE_DATE_FORMAT_TYPE_ENUMRow);
                return rowT_CULTURE_DATE_FORMAT_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURE_DATE_FORMAT_TYPE_ENUMRow FindByCDF_CODE(int CDF_CODE) {
                return ((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            CDF_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable cln = ((T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCDF_CODE = base.Columns["CDF_CODE"];
                this.columnCDF_DESCRIPTION = base.Columns["CDF_DESCRIPTION"];
                this.columnCDF_FORMAT = base.Columns["CDF_FORMAT"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCDF_CODE = new global::System.Data.DataColumn("CDF_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDF_CODE);
                this.columnCDF_DESCRIPTION = new global::System.Data.DataColumn("CDF_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDF_DESCRIPTION);
                this.columnCDF_FORMAT = new global::System.Data.DataColumn("CDF_FORMAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCDF_FORMAT);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCDF_CODE}, true));
                this.columnCDF_CODE.AllowDBNull = false;
                this.columnCDF_CODE.Unique = true;
                this.columnCDF_DESCRIPTION.AllowDBNull = false;
                this.columnCDF_DESCRIPTION.MaxLength = 50;
                this.columnCDF_FORMAT.AllowDBNull = false;
                this.columnCDF_FORMAT.MaxLength = 255;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURE_DATE_FORMAT_TYPE_ENUMRow NewT_CULTURE_DATE_FORMAT_TYPE_ENUMRow() {
                return ((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_CULTURE_DATE_FORMAT_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_CULTURE_DATE_FORMAT_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChanged != null)) {
                    this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChanged(this, new T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEvent(((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChanging != null)) {
                    this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChanging(this, new T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEvent(((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowDeleted != null)) {
                    this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowDeleted(this, new T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEvent(((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowDeleting != null)) {
                    this.T_CULTURE_DATE_FORMAT_TYPE_ENUMRowDeleting(this, new T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEvent(((T_CULTURE_DATE_FORMAT_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_CULTURE_DATE_FORMAT_TYPE_ENUMRow(T_CULTURE_DATE_FORMAT_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_DISTANCE_UNITS_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDUT_CODE;
            
            private global::System.Data.DataColumn columnDUT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMDataTable() {
                this.TableName = "T_DISTANCE_UNITS_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DISTANCE_UNITS_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_DISTANCE_UNITS_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUT_CODEColumn {
                get {
                    return this.columnDUT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUT_DESCRIPTIONColumn {
                get {
                    return this.columnDUT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowChanging;
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowChanged;
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowDeleting;
            
            public event T_DISTANCE_UNITS_TYPE_ENUMRowChangeEventHandler T_DISTANCE_UNITS_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_DISTANCE_UNITS_TYPE_ENUMRow(T_DISTANCE_UNITS_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow AddT_DISTANCE_UNITS_TYPE_ENUMRow(int DUT_CODE, string DUT_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_DISTANCE_UNITS_TYPE_ENUMRow rowT_DISTANCE_UNITS_TYPE_ENUMRow = ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DUT_CODE,
                        DUT_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_DISTANCE_UNITS_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_DISTANCE_UNITS_TYPE_ENUMRow);
                return rowT_DISTANCE_UNITS_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow FindByDUT_CODE(int DUT_CODE) {
                return ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            DUT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_DISTANCE_UNITS_TYPE_ENUMDataTable cln = ((T_DISTANCE_UNITS_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_DISTANCE_UNITS_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDUT_CODE = base.Columns["DUT_CODE"];
                this.columnDUT_DESCRIPTION = base.Columns["DUT_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDUT_CODE = new global::System.Data.DataColumn("DUT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUT_CODE);
                this.columnDUT_DESCRIPTION = new global::System.Data.DataColumn("DUT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUT_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDUT_CODE}, true));
                this.columnDUT_CODE.AllowDBNull = false;
                this.columnDUT_CODE.Unique = true;
                this.columnDUT_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow NewT_DISTANCE_UNITS_TYPE_ENUMRow() {
                return ((T_DISTANCE_UNITS_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_DISTANCE_UNITS_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_DISTANCE_UNITS_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowChanged != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowChanged(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowChanging != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowChanging(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleted != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleted(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleting != null)) {
                    this.T_DISTANCE_UNITS_TYPE_ENUMRowDeleting(this, new T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(((T_DISTANCE_UNITS_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_DISTANCE_UNITS_TYPE_ENUMRow(T_DISTANCE_UNITS_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_DISTANCE_UNITS_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_FAQ_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFQT_CODE;
            
            private global::System.Data.DataColumn columnFQT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnFQT_ORDER_BY;
            
            private global::System.Data.DataColumn columnFQT_SELECTED;
            
            private global::System.Data.DataColumn columnFQT_DISABLED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPEDataTable() {
                this.TableName = "T_FAQ_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_FAQ_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_FAQ_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FQT_CODEColumn {
                get {
                    return this.columnFQT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FQT_DESCRIPTIONColumn {
                get {
                    return this.columnFQT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FQT_ORDER_BYColumn {
                get {
                    return this.columnFQT_ORDER_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FQT_SELECTEDColumn {
                get {
                    return this.columnFQT_SELECTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FQT_DISABLEDColumn {
                get {
                    return this.columnFQT_DISABLED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPERow this[int index] {
                get {
                    return ((T_FAQ_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_FAQ_TYPERowChangeEventHandler T_FAQ_TYPERowChanging;
            
            public event T_FAQ_TYPERowChangeEventHandler T_FAQ_TYPERowChanged;
            
            public event T_FAQ_TYPERowChangeEventHandler T_FAQ_TYPERowDeleting;
            
            public event T_FAQ_TYPERowChangeEventHandler T_FAQ_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_FAQ_TYPERow(T_FAQ_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPERow AddT_FAQ_TYPERow(int FQT_CODE, string FQT_DESCRIPTION, int FQT_ORDER_BY, bool FQT_SELECTED, bool FQT_DISABLED) {
                T_FAQ_TYPERow rowT_FAQ_TYPERow = ((T_FAQ_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FQT_CODE,
                        FQT_DESCRIPTION,
                        FQT_ORDER_BY,
                        FQT_SELECTED,
                        FQT_DISABLED};
                rowT_FAQ_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_FAQ_TYPERow);
                return rowT_FAQ_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPERow FindByFQT_CODE(int FQT_CODE) {
                return ((T_FAQ_TYPERow)(this.Rows.Find(new object[] {
                            FQT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_FAQ_TYPEDataTable cln = ((T_FAQ_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_FAQ_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFQT_CODE = base.Columns["FQT_CODE"];
                this.columnFQT_DESCRIPTION = base.Columns["FQT_DESCRIPTION"];
                this.columnFQT_ORDER_BY = base.Columns["FQT_ORDER_BY"];
                this.columnFQT_SELECTED = base.Columns["FQT_SELECTED"];
                this.columnFQT_DISABLED = base.Columns["FQT_DISABLED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFQT_CODE = new global::System.Data.DataColumn("FQT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFQT_CODE);
                this.columnFQT_DESCRIPTION = new global::System.Data.DataColumn("FQT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFQT_DESCRIPTION);
                this.columnFQT_ORDER_BY = new global::System.Data.DataColumn("FQT_ORDER_BY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFQT_ORDER_BY);
                this.columnFQT_SELECTED = new global::System.Data.DataColumn("FQT_SELECTED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFQT_SELECTED);
                this.columnFQT_DISABLED = new global::System.Data.DataColumn("FQT_DISABLED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFQT_DISABLED);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFQT_CODE}, true));
                this.columnFQT_CODE.AllowDBNull = false;
                this.columnFQT_CODE.Unique = true;
                this.columnFQT_DESCRIPTION.MaxLength = 50;
                this.columnFQT_ORDER_BY.AllowDBNull = false;
                this.columnFQT_SELECTED.AllowDBNull = false;
                this.columnFQT_DISABLED.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPERow NewT_FAQ_TYPERow() {
                return ((T_FAQ_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_FAQ_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_FAQ_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_FAQ_TYPERowChanged != null)) {
                    this.T_FAQ_TYPERowChanged(this, new T_FAQ_TYPERowChangeEvent(((T_FAQ_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_FAQ_TYPERowChanging != null)) {
                    this.T_FAQ_TYPERowChanging(this, new T_FAQ_TYPERowChangeEvent(((T_FAQ_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_FAQ_TYPERowDeleted != null)) {
                    this.T_FAQ_TYPERowDeleted(this, new T_FAQ_TYPERowChangeEvent(((T_FAQ_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_FAQ_TYPERowDeleting != null)) {
                    this.T_FAQ_TYPERowDeleting(this, new T_FAQ_TYPERowChangeEvent(((T_FAQ_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_FAQ_TYPERow(T_FAQ_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_FAQ_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_LIST_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLTT_CODE;
            
            private global::System.Data.DataColumn columnLTT_IS_SYSTEM;
            
            private global::System.Data.DataColumn columnLTT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnLTT_COMMENT;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LIST_TYPE_ENUMDataTable() {
                this.TableName = "T_LIST_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LIST_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_LIST_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTT_CODEColumn {
                get {
                    return this.columnLTT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTT_IS_SYSTEMColumn {
                get {
                    return this.columnLTT_IS_SYSTEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTT_DESCRIPTIONColumn {
                get {
                    return this.columnLTT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LTT_COMMENTColumn {
                get {
                    return this.columnLTT_COMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LIST_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_LIST_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_LIST_TYPE_ENUMRowChangeEventHandler T_LIST_TYPE_ENUMRowChanging;
            
            public event T_LIST_TYPE_ENUMRowChangeEventHandler T_LIST_TYPE_ENUMRowChanged;
            
            public event T_LIST_TYPE_ENUMRowChangeEventHandler T_LIST_TYPE_ENUMRowDeleting;
            
            public event T_LIST_TYPE_ENUMRowChangeEventHandler T_LIST_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_LIST_TYPE_ENUMRow(T_LIST_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LIST_TYPE_ENUMRow AddT_LIST_TYPE_ENUMRow(int LTT_CODE, bool LTT_IS_SYSTEM, string LTT_DESCRIPTION, string LTT_COMMENT, int ValueCode, string ValueNameEnum, string ValueName) {
                T_LIST_TYPE_ENUMRow rowT_LIST_TYPE_ENUMRow = ((T_LIST_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LTT_CODE,
                        LTT_IS_SYSTEM,
                        LTT_DESCRIPTION,
                        LTT_COMMENT,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_LIST_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_LIST_TYPE_ENUMRow);
                return rowT_LIST_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LIST_TYPE_ENUMRow FindByLTT_CODE(int LTT_CODE) {
                return ((T_LIST_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            LTT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_LIST_TYPE_ENUMDataTable cln = ((T_LIST_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_LIST_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLTT_CODE = base.Columns["LTT_CODE"];
                this.columnLTT_IS_SYSTEM = base.Columns["LTT_IS_SYSTEM"];
                this.columnLTT_DESCRIPTION = base.Columns["LTT_DESCRIPTION"];
                this.columnLTT_COMMENT = base.Columns["LTT_COMMENT"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLTT_CODE = new global::System.Data.DataColumn("LTT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTT_CODE);
                this.columnLTT_IS_SYSTEM = new global::System.Data.DataColumn("LTT_IS_SYSTEM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTT_IS_SYSTEM);
                this.columnLTT_DESCRIPTION = new global::System.Data.DataColumn("LTT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTT_DESCRIPTION);
                this.columnLTT_COMMENT = new global::System.Data.DataColumn("LTT_COMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLTT_COMMENT);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLTT_CODE}, true));
                this.columnLTT_CODE.AllowDBNull = false;
                this.columnLTT_CODE.Unique = true;
                this.columnLTT_IS_SYSTEM.AllowDBNull = false;
                this.columnLTT_DESCRIPTION.AllowDBNull = false;
                this.columnLTT_DESCRIPTION.MaxLength = 50;
                this.columnLTT_COMMENT.AllowDBNull = false;
                this.columnLTT_COMMENT.MaxLength = 255;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LIST_TYPE_ENUMRow NewT_LIST_TYPE_ENUMRow() {
                return ((T_LIST_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_LIST_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_LIST_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_LIST_TYPE_ENUMRowChanged != null)) {
                    this.T_LIST_TYPE_ENUMRowChanged(this, new T_LIST_TYPE_ENUMRowChangeEvent(((T_LIST_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_LIST_TYPE_ENUMRowChanging != null)) {
                    this.T_LIST_TYPE_ENUMRowChanging(this, new T_LIST_TYPE_ENUMRowChangeEvent(((T_LIST_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_LIST_TYPE_ENUMRowDeleted != null)) {
                    this.T_LIST_TYPE_ENUMRowDeleted(this, new T_LIST_TYPE_ENUMRowChangeEvent(((T_LIST_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_LIST_TYPE_ENUMRowDeleting != null)) {
                    this.T_LIST_TYPE_ENUMRowDeleting(this, new T_LIST_TYPE_ENUMRowChangeEvent(((T_LIST_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_LIST_TYPE_ENUMRow(T_LIST_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_LIST_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_AGE_RANGE_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAGR_CODE;
            
            private global::System.Data.DataColumn columnAGR_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_AGE_RANGE_TYPEDataTable() {
                this.TableName = "T_PROP_AGE_RANGE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_AGE_RANGE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_AGE_RANGE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGR_CODEColumn {
                get {
                    return this.columnAGR_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AGR_DESCRIPTIONColumn {
                get {
                    return this.columnAGR_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_AGE_RANGE_TYPERow this[int index] {
                get {
                    return ((T_PROP_AGE_RANGE_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_AGE_RANGE_TYPERowChangeEventHandler T_PROP_AGE_RANGE_TYPERowChanging;
            
            public event T_PROP_AGE_RANGE_TYPERowChangeEventHandler T_PROP_AGE_RANGE_TYPERowChanged;
            
            public event T_PROP_AGE_RANGE_TYPERowChangeEventHandler T_PROP_AGE_RANGE_TYPERowDeleting;
            
            public event T_PROP_AGE_RANGE_TYPERowChangeEventHandler T_PROP_AGE_RANGE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_AGE_RANGE_TYPERow(T_PROP_AGE_RANGE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_AGE_RANGE_TYPERow AddT_PROP_AGE_RANGE_TYPERow(int AGR_CODE, string AGR_DESCRIPTION) {
                T_PROP_AGE_RANGE_TYPERow rowT_PROP_AGE_RANGE_TYPERow = ((T_PROP_AGE_RANGE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AGR_CODE,
                        AGR_DESCRIPTION};
                rowT_PROP_AGE_RANGE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_AGE_RANGE_TYPERow);
                return rowT_PROP_AGE_RANGE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_AGE_RANGE_TYPERow FindByAGR_CODE(int AGR_CODE) {
                return ((T_PROP_AGE_RANGE_TYPERow)(this.Rows.Find(new object[] {
                            AGR_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_AGE_RANGE_TYPEDataTable cln = ((T_PROP_AGE_RANGE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_AGE_RANGE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAGR_CODE = base.Columns["AGR_CODE"];
                this.columnAGR_DESCRIPTION = base.Columns["AGR_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAGR_CODE = new global::System.Data.DataColumn("AGR_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGR_CODE);
                this.columnAGR_DESCRIPTION = new global::System.Data.DataColumn("AGR_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAGR_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAGR_CODE}, true));
                this.columnAGR_CODE.AllowDBNull = false;
                this.columnAGR_CODE.Unique = true;
                this.columnAGR_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_AGE_RANGE_TYPERow NewT_PROP_AGE_RANGE_TYPERow() {
                return ((T_PROP_AGE_RANGE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_AGE_RANGE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_AGE_RANGE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_AGE_RANGE_TYPERowChanged != null)) {
                    this.T_PROP_AGE_RANGE_TYPERowChanged(this, new T_PROP_AGE_RANGE_TYPERowChangeEvent(((T_PROP_AGE_RANGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_AGE_RANGE_TYPERowChanging != null)) {
                    this.T_PROP_AGE_RANGE_TYPERowChanging(this, new T_PROP_AGE_RANGE_TYPERowChangeEvent(((T_PROP_AGE_RANGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_AGE_RANGE_TYPERowDeleted != null)) {
                    this.T_PROP_AGE_RANGE_TYPERowDeleted(this, new T_PROP_AGE_RANGE_TYPERowChangeEvent(((T_PROP_AGE_RANGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_AGE_RANGE_TYPERowDeleting != null)) {
                    this.T_PROP_AGE_RANGE_TYPERowDeleting(this, new T_PROP_AGE_RANGE_TYPERowChangeEvent(((T_PROP_AGE_RANGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_AGE_RANGE_TYPERow(T_PROP_AGE_RANGE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_AGE_RANGE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_CUSTODY_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCTD_CODE;
            
            private global::System.Data.DataColumn columnCTD_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_CUSTODY_TYPEDataTable() {
                this.TableName = "T_PROP_CUSTODY_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_CUSTODY_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_CUSTODY_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTD_CODEColumn {
                get {
                    return this.columnCTD_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTD_DESCRIPTIONColumn {
                get {
                    return this.columnCTD_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_CUSTODY_TYPERow this[int index] {
                get {
                    return ((T_PROP_CUSTODY_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_CUSTODY_TYPERowChangeEventHandler T_PROP_CUSTODY_TYPERowChanging;
            
            public event T_PROP_CUSTODY_TYPERowChangeEventHandler T_PROP_CUSTODY_TYPERowChanged;
            
            public event T_PROP_CUSTODY_TYPERowChangeEventHandler T_PROP_CUSTODY_TYPERowDeleting;
            
            public event T_PROP_CUSTODY_TYPERowChangeEventHandler T_PROP_CUSTODY_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_CUSTODY_TYPERow(T_PROP_CUSTODY_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_CUSTODY_TYPERow AddT_PROP_CUSTODY_TYPERow(int CTD_CODE, string CTD_DESCRIPTION) {
                T_PROP_CUSTODY_TYPERow rowT_PROP_CUSTODY_TYPERow = ((T_PROP_CUSTODY_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CTD_CODE,
                        CTD_DESCRIPTION};
                rowT_PROP_CUSTODY_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_CUSTODY_TYPERow);
                return rowT_PROP_CUSTODY_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_CUSTODY_TYPERow FindByCTD_CODE(int CTD_CODE) {
                return ((T_PROP_CUSTODY_TYPERow)(this.Rows.Find(new object[] {
                            CTD_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_CUSTODY_TYPEDataTable cln = ((T_PROP_CUSTODY_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_CUSTODY_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCTD_CODE = base.Columns["CTD_CODE"];
                this.columnCTD_DESCRIPTION = base.Columns["CTD_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCTD_CODE = new global::System.Data.DataColumn("CTD_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTD_CODE);
                this.columnCTD_DESCRIPTION = new global::System.Data.DataColumn("CTD_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTD_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCTD_CODE}, true));
                this.columnCTD_CODE.AllowDBNull = false;
                this.columnCTD_CODE.Unique = true;
                this.columnCTD_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_CUSTODY_TYPERow NewT_PROP_CUSTODY_TYPERow() {
                return ((T_PROP_CUSTODY_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_CUSTODY_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_CUSTODY_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_CUSTODY_TYPERowChanged != null)) {
                    this.T_PROP_CUSTODY_TYPERowChanged(this, new T_PROP_CUSTODY_TYPERowChangeEvent(((T_PROP_CUSTODY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_CUSTODY_TYPERowChanging != null)) {
                    this.T_PROP_CUSTODY_TYPERowChanging(this, new T_PROP_CUSTODY_TYPERowChangeEvent(((T_PROP_CUSTODY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_CUSTODY_TYPERowDeleted != null)) {
                    this.T_PROP_CUSTODY_TYPERowDeleted(this, new T_PROP_CUSTODY_TYPERowChangeEvent(((T_PROP_CUSTODY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_CUSTODY_TYPERowDeleting != null)) {
                    this.T_PROP_CUSTODY_TYPERowDeleting(this, new T_PROP_CUSTODY_TYPERowChangeEvent(((T_PROP_CUSTODY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_CUSTODY_TYPERow(T_PROP_CUSTODY_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_CUSTODY_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_DRINK_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDRK_CODE;
            
            private global::System.Data.DataColumn columnDRK_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_DRINK_TYPEDataTable() {
                this.TableName = "T_PROP_DRINK_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_DRINK_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_DRINK_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRK_CODEColumn {
                get {
                    return this.columnDRK_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRK_DESCRIPTIONColumn {
                get {
                    return this.columnDRK_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_DRINK_TYPERow this[int index] {
                get {
                    return ((T_PROP_DRINK_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_DRINK_TYPERowChangeEventHandler T_PROP_DRINK_TYPERowChanging;
            
            public event T_PROP_DRINK_TYPERowChangeEventHandler T_PROP_DRINK_TYPERowChanged;
            
            public event T_PROP_DRINK_TYPERowChangeEventHandler T_PROP_DRINK_TYPERowDeleting;
            
            public event T_PROP_DRINK_TYPERowChangeEventHandler T_PROP_DRINK_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_DRINK_TYPERow(T_PROP_DRINK_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_DRINK_TYPERow AddT_PROP_DRINK_TYPERow(int DRK_CODE, string DRK_DESCRIPTION) {
                T_PROP_DRINK_TYPERow rowT_PROP_DRINK_TYPERow = ((T_PROP_DRINK_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DRK_CODE,
                        DRK_DESCRIPTION};
                rowT_PROP_DRINK_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_DRINK_TYPERow);
                return rowT_PROP_DRINK_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_DRINK_TYPERow FindByDRK_CODE(int DRK_CODE) {
                return ((T_PROP_DRINK_TYPERow)(this.Rows.Find(new object[] {
                            DRK_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_DRINK_TYPEDataTable cln = ((T_PROP_DRINK_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_DRINK_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDRK_CODE = base.Columns["DRK_CODE"];
                this.columnDRK_DESCRIPTION = base.Columns["DRK_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDRK_CODE = new global::System.Data.DataColumn("DRK_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRK_CODE);
                this.columnDRK_DESCRIPTION = new global::System.Data.DataColumn("DRK_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRK_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDRK_CODE}, true));
                this.columnDRK_CODE.AllowDBNull = false;
                this.columnDRK_CODE.Unique = true;
                this.columnDRK_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_DRINK_TYPERow NewT_PROP_DRINK_TYPERow() {
                return ((T_PROP_DRINK_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_DRINK_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_DRINK_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_DRINK_TYPERowChanged != null)) {
                    this.T_PROP_DRINK_TYPERowChanged(this, new T_PROP_DRINK_TYPERowChangeEvent(((T_PROP_DRINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_DRINK_TYPERowChanging != null)) {
                    this.T_PROP_DRINK_TYPERowChanging(this, new T_PROP_DRINK_TYPERowChangeEvent(((T_PROP_DRINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_DRINK_TYPERowDeleted != null)) {
                    this.T_PROP_DRINK_TYPERowDeleted(this, new T_PROP_DRINK_TYPERowChangeEvent(((T_PROP_DRINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_DRINK_TYPERowDeleting != null)) {
                    this.T_PROP_DRINK_TYPERowDeleting(this, new T_PROP_DRINK_TYPERowChangeEvent(((T_PROP_DRINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_DRINK_TYPERow(T_PROP_DRINK_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_DRINK_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_EYE_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEYE_CODE;
            
            private global::System.Data.DataColumn columnEYE_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EYE_TYPEDataTable() {
                this.TableName = "T_PROP_EYE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_EYE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_EYE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EYE_CODEColumn {
                get {
                    return this.columnEYE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EYE_DESCRIPTIONColumn {
                get {
                    return this.columnEYE_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EYE_TYPERow this[int index] {
                get {
                    return ((T_PROP_EYE_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_EYE_TYPERowChangeEventHandler T_PROP_EYE_TYPERowChanging;
            
            public event T_PROP_EYE_TYPERowChangeEventHandler T_PROP_EYE_TYPERowChanged;
            
            public event T_PROP_EYE_TYPERowChangeEventHandler T_PROP_EYE_TYPERowDeleting;
            
            public event T_PROP_EYE_TYPERowChangeEventHandler T_PROP_EYE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_EYE_TYPERow(T_PROP_EYE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EYE_TYPERow AddT_PROP_EYE_TYPERow(int EYE_CODE, string EYE_DESCRIPTION) {
                T_PROP_EYE_TYPERow rowT_PROP_EYE_TYPERow = ((T_PROP_EYE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EYE_CODE,
                        EYE_DESCRIPTION};
                rowT_PROP_EYE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_EYE_TYPERow);
                return rowT_PROP_EYE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EYE_TYPERow FindByEYE_CODE(int EYE_CODE) {
                return ((T_PROP_EYE_TYPERow)(this.Rows.Find(new object[] {
                            EYE_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_EYE_TYPEDataTable cln = ((T_PROP_EYE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_EYE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEYE_CODE = base.Columns["EYE_CODE"];
                this.columnEYE_DESCRIPTION = base.Columns["EYE_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEYE_CODE = new global::System.Data.DataColumn("EYE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEYE_CODE);
                this.columnEYE_DESCRIPTION = new global::System.Data.DataColumn("EYE_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEYE_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEYE_CODE}, true));
                this.columnEYE_CODE.AllowDBNull = false;
                this.columnEYE_CODE.Unique = true;
                this.columnEYE_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EYE_TYPERow NewT_PROP_EYE_TYPERow() {
                return ((T_PROP_EYE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_EYE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_EYE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_EYE_TYPERowChanged != null)) {
                    this.T_PROP_EYE_TYPERowChanged(this, new T_PROP_EYE_TYPERowChangeEvent(((T_PROP_EYE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_EYE_TYPERowChanging != null)) {
                    this.T_PROP_EYE_TYPERowChanging(this, new T_PROP_EYE_TYPERowChangeEvent(((T_PROP_EYE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_EYE_TYPERowDeleted != null)) {
                    this.T_PROP_EYE_TYPERowDeleted(this, new T_PROP_EYE_TYPERowChangeEvent(((T_PROP_EYE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_EYE_TYPERowDeleting != null)) {
                    this.T_PROP_EYE_TYPERowDeleting(this, new T_PROP_EYE_TYPERowChangeEvent(((T_PROP_EYE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_EYE_TYPERow(T_PROP_EYE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_EYE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_HAIR_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHAR_CODE;
            
            private global::System.Data.DataColumn columnHAR_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAIR_TYPEDataTable() {
                this.TableName = "T_PROP_HAIR_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_HAIR_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_HAIR_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAR_CODEColumn {
                get {
                    return this.columnHAR_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAR_DESCRIPTIONColumn {
                get {
                    return this.columnHAR_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAIR_TYPERow this[int index] {
                get {
                    return ((T_PROP_HAIR_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_HAIR_TYPERowChangeEventHandler T_PROP_HAIR_TYPERowChanging;
            
            public event T_PROP_HAIR_TYPERowChangeEventHandler T_PROP_HAIR_TYPERowChanged;
            
            public event T_PROP_HAIR_TYPERowChangeEventHandler T_PROP_HAIR_TYPERowDeleting;
            
            public event T_PROP_HAIR_TYPERowChangeEventHandler T_PROP_HAIR_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_HAIR_TYPERow(T_PROP_HAIR_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAIR_TYPERow AddT_PROP_HAIR_TYPERow(int HAR_CODE, string HAR_DESCRIPTION) {
                T_PROP_HAIR_TYPERow rowT_PROP_HAIR_TYPERow = ((T_PROP_HAIR_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HAR_CODE,
                        HAR_DESCRIPTION};
                rowT_PROP_HAIR_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_HAIR_TYPERow);
                return rowT_PROP_HAIR_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAIR_TYPERow FindByHAR_CODE(int HAR_CODE) {
                return ((T_PROP_HAIR_TYPERow)(this.Rows.Find(new object[] {
                            HAR_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_HAIR_TYPEDataTable cln = ((T_PROP_HAIR_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_HAIR_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHAR_CODE = base.Columns["HAR_CODE"];
                this.columnHAR_DESCRIPTION = base.Columns["HAR_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHAR_CODE = new global::System.Data.DataColumn("HAR_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAR_CODE);
                this.columnHAR_DESCRIPTION = new global::System.Data.DataColumn("HAR_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAR_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHAR_CODE}, true));
                this.columnHAR_CODE.AllowDBNull = false;
                this.columnHAR_CODE.Unique = true;
                this.columnHAR_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAIR_TYPERow NewT_PROP_HAIR_TYPERow() {
                return ((T_PROP_HAIR_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_HAIR_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_HAIR_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_HAIR_TYPERowChanged != null)) {
                    this.T_PROP_HAIR_TYPERowChanged(this, new T_PROP_HAIR_TYPERowChangeEvent(((T_PROP_HAIR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_HAIR_TYPERowChanging != null)) {
                    this.T_PROP_HAIR_TYPERowChanging(this, new T_PROP_HAIR_TYPERowChangeEvent(((T_PROP_HAIR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_HAIR_TYPERowDeleted != null)) {
                    this.T_PROP_HAIR_TYPERowDeleted(this, new T_PROP_HAIR_TYPERowChangeEvent(((T_PROP_HAIR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_HAIR_TYPERowDeleting != null)) {
                    this.T_PROP_HAIR_TYPERowDeleting(this, new T_PROP_HAIR_TYPERowChangeEvent(((T_PROP_HAIR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_HAIR_TYPERow(T_PROP_HAIR_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_HAIR_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_HAVE_KIDS_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHKD_CODE;
            
            private global::System.Data.DataColumn columnHKD_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAVE_KIDS_TYPEDataTable() {
                this.TableName = "T_PROP_HAVE_KIDS_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_HAVE_KIDS_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_HAVE_KIDS_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKD_CODEColumn {
                get {
                    return this.columnHKD_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HKD_DESCRIPTIONColumn {
                get {
                    return this.columnHKD_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAVE_KIDS_TYPERow this[int index] {
                get {
                    return ((T_PROP_HAVE_KIDS_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_HAVE_KIDS_TYPERowChangeEventHandler T_PROP_HAVE_KIDS_TYPERowChanging;
            
            public event T_PROP_HAVE_KIDS_TYPERowChangeEventHandler T_PROP_HAVE_KIDS_TYPERowChanged;
            
            public event T_PROP_HAVE_KIDS_TYPERowChangeEventHandler T_PROP_HAVE_KIDS_TYPERowDeleting;
            
            public event T_PROP_HAVE_KIDS_TYPERowChangeEventHandler T_PROP_HAVE_KIDS_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_HAVE_KIDS_TYPERow(T_PROP_HAVE_KIDS_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAVE_KIDS_TYPERow AddT_PROP_HAVE_KIDS_TYPERow(int HKD_CODE, string HKD_DESCRIPTION) {
                T_PROP_HAVE_KIDS_TYPERow rowT_PROP_HAVE_KIDS_TYPERow = ((T_PROP_HAVE_KIDS_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HKD_CODE,
                        HKD_DESCRIPTION};
                rowT_PROP_HAVE_KIDS_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_HAVE_KIDS_TYPERow);
                return rowT_PROP_HAVE_KIDS_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAVE_KIDS_TYPERow FindByHKD_CODE(int HKD_CODE) {
                return ((T_PROP_HAVE_KIDS_TYPERow)(this.Rows.Find(new object[] {
                            HKD_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_HAVE_KIDS_TYPEDataTable cln = ((T_PROP_HAVE_KIDS_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_HAVE_KIDS_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHKD_CODE = base.Columns["HKD_CODE"];
                this.columnHKD_DESCRIPTION = base.Columns["HKD_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHKD_CODE = new global::System.Data.DataColumn("HKD_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKD_CODE);
                this.columnHKD_DESCRIPTION = new global::System.Data.DataColumn("HKD_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHKD_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHKD_CODE}, true));
                this.columnHKD_CODE.AllowDBNull = false;
                this.columnHKD_CODE.Unique = true;
                this.columnHKD_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAVE_KIDS_TYPERow NewT_PROP_HAVE_KIDS_TYPERow() {
                return ((T_PROP_HAVE_KIDS_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_HAVE_KIDS_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_HAVE_KIDS_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_HAVE_KIDS_TYPERowChanged != null)) {
                    this.T_PROP_HAVE_KIDS_TYPERowChanged(this, new T_PROP_HAVE_KIDS_TYPERowChangeEvent(((T_PROP_HAVE_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_HAVE_KIDS_TYPERowChanging != null)) {
                    this.T_PROP_HAVE_KIDS_TYPERowChanging(this, new T_PROP_HAVE_KIDS_TYPERowChangeEvent(((T_PROP_HAVE_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_HAVE_KIDS_TYPERowDeleted != null)) {
                    this.T_PROP_HAVE_KIDS_TYPERowDeleted(this, new T_PROP_HAVE_KIDS_TYPERowChangeEvent(((T_PROP_HAVE_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_HAVE_KIDS_TYPERowDeleting != null)) {
                    this.T_PROP_HAVE_KIDS_TYPERowDeleting(this, new T_PROP_HAVE_KIDS_TYPERowChangeEvent(((T_PROP_HAVE_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_HAVE_KIDS_TYPERow(T_PROP_HAVE_KIDS_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_HAVE_KIDS_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_HEIGHT_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnHGT_CODE;
            
            private global::System.Data.DataColumn columnHGT_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HEIGHT_TYPEDataTable() {
                this.TableName = "T_PROP_HEIGHT_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_HEIGHT_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_HEIGHT_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HGT_CODEColumn {
                get {
                    return this.columnHGT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HGT_DESCRIPTIONColumn {
                get {
                    return this.columnHGT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HEIGHT_TYPERow this[int index] {
                get {
                    return ((T_PROP_HEIGHT_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_HEIGHT_TYPERowChangeEventHandler T_PROP_HEIGHT_TYPERowChanging;
            
            public event T_PROP_HEIGHT_TYPERowChangeEventHandler T_PROP_HEIGHT_TYPERowChanged;
            
            public event T_PROP_HEIGHT_TYPERowChangeEventHandler T_PROP_HEIGHT_TYPERowDeleting;
            
            public event T_PROP_HEIGHT_TYPERowChangeEventHandler T_PROP_HEIGHT_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_HEIGHT_TYPERow(T_PROP_HEIGHT_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HEIGHT_TYPERow AddT_PROP_HEIGHT_TYPERow(int HGT_CODE, string HGT_DESCRIPTION) {
                T_PROP_HEIGHT_TYPERow rowT_PROP_HEIGHT_TYPERow = ((T_PROP_HEIGHT_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HGT_CODE,
                        HGT_DESCRIPTION};
                rowT_PROP_HEIGHT_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_HEIGHT_TYPERow);
                return rowT_PROP_HEIGHT_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HEIGHT_TYPERow FindByHGT_CODE(int HGT_CODE) {
                return ((T_PROP_HEIGHT_TYPERow)(this.Rows.Find(new object[] {
                            HGT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_HEIGHT_TYPEDataTable cln = ((T_PROP_HEIGHT_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_HEIGHT_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHGT_CODE = base.Columns["HGT_CODE"];
                this.columnHGT_DESCRIPTION = base.Columns["HGT_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHGT_CODE = new global::System.Data.DataColumn("HGT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHGT_CODE);
                this.columnHGT_DESCRIPTION = new global::System.Data.DataColumn("HGT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHGT_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHGT_CODE}, true));
                this.columnHGT_CODE.AllowDBNull = false;
                this.columnHGT_CODE.Unique = true;
                this.columnHGT_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HEIGHT_TYPERow NewT_PROP_HEIGHT_TYPERow() {
                return ((T_PROP_HEIGHT_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_HEIGHT_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_HEIGHT_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_HEIGHT_TYPERowChanged != null)) {
                    this.T_PROP_HEIGHT_TYPERowChanged(this, new T_PROP_HEIGHT_TYPERowChangeEvent(((T_PROP_HEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_HEIGHT_TYPERowChanging != null)) {
                    this.T_PROP_HEIGHT_TYPERowChanging(this, new T_PROP_HEIGHT_TYPERowChangeEvent(((T_PROP_HEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_HEIGHT_TYPERowDeleted != null)) {
                    this.T_PROP_HEIGHT_TYPERowDeleted(this, new T_PROP_HEIGHT_TYPERowChangeEvent(((T_PROP_HEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_HEIGHT_TYPERowDeleting != null)) {
                    this.T_PROP_HEIGHT_TYPERowDeleting(this, new T_PROP_HEIGHT_TYPERowChangeEvent(((T_PROP_HEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_HEIGHT_TYPERow(T_PROP_HEIGHT_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_HEIGHT_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_LANGUAGE_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLNG_CODE;
            
            private global::System.Data.DataColumn columnLNG_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LANGUAGE_TYPEDataTable() {
                this.TableName = "T_PROP_LANGUAGE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_LANGUAGE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_LANGUAGE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LNG_CODEColumn {
                get {
                    return this.columnLNG_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LNG_DESCRIPTIONColumn {
                get {
                    return this.columnLNG_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LANGUAGE_TYPERow this[int index] {
                get {
                    return ((T_PROP_LANGUAGE_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_LANGUAGE_TYPERowChangeEventHandler T_PROP_LANGUAGE_TYPERowChanging;
            
            public event T_PROP_LANGUAGE_TYPERowChangeEventHandler T_PROP_LANGUAGE_TYPERowChanged;
            
            public event T_PROP_LANGUAGE_TYPERowChangeEventHandler T_PROP_LANGUAGE_TYPERowDeleting;
            
            public event T_PROP_LANGUAGE_TYPERowChangeEventHandler T_PROP_LANGUAGE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_LANGUAGE_TYPERow(T_PROP_LANGUAGE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LANGUAGE_TYPERow AddT_PROP_LANGUAGE_TYPERow(int LNG_CODE, string LNG_DESCRIPTION) {
                T_PROP_LANGUAGE_TYPERow rowT_PROP_LANGUAGE_TYPERow = ((T_PROP_LANGUAGE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LNG_CODE,
                        LNG_DESCRIPTION};
                rowT_PROP_LANGUAGE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_LANGUAGE_TYPERow);
                return rowT_PROP_LANGUAGE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LANGUAGE_TYPERow FindByLNG_CODE(int LNG_CODE) {
                return ((T_PROP_LANGUAGE_TYPERow)(this.Rows.Find(new object[] {
                            LNG_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_LANGUAGE_TYPEDataTable cln = ((T_PROP_LANGUAGE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_LANGUAGE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLNG_CODE = base.Columns["LNG_CODE"];
                this.columnLNG_DESCRIPTION = base.Columns["LNG_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLNG_CODE = new global::System.Data.DataColumn("LNG_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLNG_CODE);
                this.columnLNG_DESCRIPTION = new global::System.Data.DataColumn("LNG_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLNG_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLNG_CODE}, true));
                this.columnLNG_CODE.AllowDBNull = false;
                this.columnLNG_CODE.Unique = true;
                this.columnLNG_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LANGUAGE_TYPERow NewT_PROP_LANGUAGE_TYPERow() {
                return ((T_PROP_LANGUAGE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_LANGUAGE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_LANGUAGE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_LANGUAGE_TYPERowChanged != null)) {
                    this.T_PROP_LANGUAGE_TYPERowChanged(this, new T_PROP_LANGUAGE_TYPERowChangeEvent(((T_PROP_LANGUAGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_LANGUAGE_TYPERowChanging != null)) {
                    this.T_PROP_LANGUAGE_TYPERowChanging(this, new T_PROP_LANGUAGE_TYPERowChangeEvent(((T_PROP_LANGUAGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_LANGUAGE_TYPERowDeleted != null)) {
                    this.T_PROP_LANGUAGE_TYPERowDeleted(this, new T_PROP_LANGUAGE_TYPERowChangeEvent(((T_PROP_LANGUAGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_LANGUAGE_TYPERowDeleting != null)) {
                    this.T_PROP_LANGUAGE_TYPERowDeleting(this, new T_PROP_LANGUAGE_TYPERowChangeEvent(((T_PROP_LANGUAGE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_LANGUAGE_TYPERow(T_PROP_LANGUAGE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_LANGUAGE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_MATCH_SEX_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSXI_CODE;
            
            private global::System.Data.DataColumn columnSXI_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_MATCH_SEX_TYPEDataTable() {
                this.TableName = "T_PROP_MATCH_SEX_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_MATCH_SEX_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_MATCH_SEX_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SXI_CODEColumn {
                get {
                    return this.columnSXI_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SXI_DESCRIPTIONColumn {
                get {
                    return this.columnSXI_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_MATCH_SEX_TYPERow this[int index] {
                get {
                    return ((T_PROP_MATCH_SEX_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_MATCH_SEX_TYPERowChangeEventHandler T_PROP_MATCH_SEX_TYPERowChanging;
            
            public event T_PROP_MATCH_SEX_TYPERowChangeEventHandler T_PROP_MATCH_SEX_TYPERowChanged;
            
            public event T_PROP_MATCH_SEX_TYPERowChangeEventHandler T_PROP_MATCH_SEX_TYPERowDeleting;
            
            public event T_PROP_MATCH_SEX_TYPERowChangeEventHandler T_PROP_MATCH_SEX_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_MATCH_SEX_TYPERow(T_PROP_MATCH_SEX_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_MATCH_SEX_TYPERow AddT_PROP_MATCH_SEX_TYPERow(int SXI_CODE, string SXI_DESCRIPTION) {
                T_PROP_MATCH_SEX_TYPERow rowT_PROP_MATCH_SEX_TYPERow = ((T_PROP_MATCH_SEX_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SXI_CODE,
                        SXI_DESCRIPTION};
                rowT_PROP_MATCH_SEX_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_MATCH_SEX_TYPERow);
                return rowT_PROP_MATCH_SEX_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_MATCH_SEX_TYPERow FindBySXI_CODE(int SXI_CODE) {
                return ((T_PROP_MATCH_SEX_TYPERow)(this.Rows.Find(new object[] {
                            SXI_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_MATCH_SEX_TYPEDataTable cln = ((T_PROP_MATCH_SEX_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_MATCH_SEX_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSXI_CODE = base.Columns["SXI_CODE"];
                this.columnSXI_DESCRIPTION = base.Columns["SXI_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSXI_CODE = new global::System.Data.DataColumn("SXI_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSXI_CODE);
                this.columnSXI_DESCRIPTION = new global::System.Data.DataColumn("SXI_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSXI_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSXI_CODE}, true));
                this.columnSXI_CODE.AllowDBNull = false;
                this.columnSXI_CODE.Unique = true;
                this.columnSXI_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_MATCH_SEX_TYPERow NewT_PROP_MATCH_SEX_TYPERow() {
                return ((T_PROP_MATCH_SEX_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_MATCH_SEX_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_MATCH_SEX_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_MATCH_SEX_TYPERowChanged != null)) {
                    this.T_PROP_MATCH_SEX_TYPERowChanged(this, new T_PROP_MATCH_SEX_TYPERowChangeEvent(((T_PROP_MATCH_SEX_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_MATCH_SEX_TYPERowChanging != null)) {
                    this.T_PROP_MATCH_SEX_TYPERowChanging(this, new T_PROP_MATCH_SEX_TYPERowChangeEvent(((T_PROP_MATCH_SEX_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_MATCH_SEX_TYPERowDeleted != null)) {
                    this.T_PROP_MATCH_SEX_TYPERowDeleted(this, new T_PROP_MATCH_SEX_TYPERowChangeEvent(((T_PROP_MATCH_SEX_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_MATCH_SEX_TYPERowDeleting != null)) {
                    this.T_PROP_MATCH_SEX_TYPERowDeleting(this, new T_PROP_MATCH_SEX_TYPERowChangeEvent(((T_PROP_MATCH_SEX_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_MATCH_SEX_TYPERow(T_PROP_MATCH_SEX_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_MATCH_SEX_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_RELATIONSHIP_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnREL_CODE;
            
            private global::System.Data.DataColumn columnREL_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELATIONSHIP_TYPEDataTable() {
                this.TableName = "T_PROP_RELATIONSHIP_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_RELATIONSHIP_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_RELATIONSHIP_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REL_CODEColumn {
                get {
                    return this.columnREL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REL_DESCRIPTIONColumn {
                get {
                    return this.columnREL_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELATIONSHIP_TYPERow this[int index] {
                get {
                    return ((T_PROP_RELATIONSHIP_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_RELATIONSHIP_TYPERowChangeEventHandler T_PROP_RELATIONSHIP_TYPERowChanging;
            
            public event T_PROP_RELATIONSHIP_TYPERowChangeEventHandler T_PROP_RELATIONSHIP_TYPERowChanged;
            
            public event T_PROP_RELATIONSHIP_TYPERowChangeEventHandler T_PROP_RELATIONSHIP_TYPERowDeleting;
            
            public event T_PROP_RELATIONSHIP_TYPERowChangeEventHandler T_PROP_RELATIONSHIP_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_RELATIONSHIP_TYPERow(T_PROP_RELATIONSHIP_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELATIONSHIP_TYPERow AddT_PROP_RELATIONSHIP_TYPERow(int REL_CODE, string REL_DESCRIPTION) {
                T_PROP_RELATIONSHIP_TYPERow rowT_PROP_RELATIONSHIP_TYPERow = ((T_PROP_RELATIONSHIP_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REL_CODE,
                        REL_DESCRIPTION};
                rowT_PROP_RELATIONSHIP_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_RELATIONSHIP_TYPERow);
                return rowT_PROP_RELATIONSHIP_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELATIONSHIP_TYPERow FindByREL_CODE(int REL_CODE) {
                return ((T_PROP_RELATIONSHIP_TYPERow)(this.Rows.Find(new object[] {
                            REL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_RELATIONSHIP_TYPEDataTable cln = ((T_PROP_RELATIONSHIP_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_RELATIONSHIP_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnREL_CODE = base.Columns["REL_CODE"];
                this.columnREL_DESCRIPTION = base.Columns["REL_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnREL_CODE = new global::System.Data.DataColumn("REL_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_CODE);
                this.columnREL_DESCRIPTION = new global::System.Data.DataColumn("REL_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnREL_CODE}, true));
                this.columnREL_CODE.AllowDBNull = false;
                this.columnREL_CODE.Unique = true;
                this.columnREL_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELATIONSHIP_TYPERow NewT_PROP_RELATIONSHIP_TYPERow() {
                return ((T_PROP_RELATIONSHIP_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_RELATIONSHIP_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_RELATIONSHIP_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_RELATIONSHIP_TYPERowChanged != null)) {
                    this.T_PROP_RELATIONSHIP_TYPERowChanged(this, new T_PROP_RELATIONSHIP_TYPERowChangeEvent(((T_PROP_RELATIONSHIP_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_RELATIONSHIP_TYPERowChanging != null)) {
                    this.T_PROP_RELATIONSHIP_TYPERowChanging(this, new T_PROP_RELATIONSHIP_TYPERowChangeEvent(((T_PROP_RELATIONSHIP_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_RELATIONSHIP_TYPERowDeleted != null)) {
                    this.T_PROP_RELATIONSHIP_TYPERowDeleted(this, new T_PROP_RELATIONSHIP_TYPERowChangeEvent(((T_PROP_RELATIONSHIP_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_RELATIONSHIP_TYPERowDeleting != null)) {
                    this.T_PROP_RELATIONSHIP_TYPERowDeleting(this, new T_PROP_RELATIONSHIP_TYPERowChangeEvent(((T_PROP_RELATIONSHIP_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_RELATIONSHIP_TYPERow(T_PROP_RELATIONSHIP_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_RELATIONSHIP_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_SEX_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSEX_CODE;
            
            private global::System.Data.DataColumn columnSEX_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SEX_TYPE_ENUMDataTable() {
                this.TableName = "T_PROP_SEX_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_SEX_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_SEX_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEX_CODEColumn {
                get {
                    return this.columnSEX_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEX_DESCRIPTIONColumn {
                get {
                    return this.columnSEX_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SEX_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_PROP_SEX_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_SEX_TYPE_ENUMRowChangeEventHandler T_PROP_SEX_TYPE_ENUMRowChanging;
            
            public event T_PROP_SEX_TYPE_ENUMRowChangeEventHandler T_PROP_SEX_TYPE_ENUMRowChanged;
            
            public event T_PROP_SEX_TYPE_ENUMRowChangeEventHandler T_PROP_SEX_TYPE_ENUMRowDeleting;
            
            public event T_PROP_SEX_TYPE_ENUMRowChangeEventHandler T_PROP_SEX_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_SEX_TYPE_ENUMRow(T_PROP_SEX_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SEX_TYPE_ENUMRow AddT_PROP_SEX_TYPE_ENUMRow(int SEX_CODE, string SEX_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_PROP_SEX_TYPE_ENUMRow rowT_PROP_SEX_TYPE_ENUMRow = ((T_PROP_SEX_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SEX_CODE,
                        SEX_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_PROP_SEX_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_SEX_TYPE_ENUMRow);
                return rowT_PROP_SEX_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SEX_TYPE_ENUMRow FindBySEX_CODE(int SEX_CODE) {
                return ((T_PROP_SEX_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            SEX_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_SEX_TYPE_ENUMDataTable cln = ((T_PROP_SEX_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_SEX_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSEX_CODE = base.Columns["SEX_CODE"];
                this.columnSEX_DESCRIPTION = base.Columns["SEX_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSEX_CODE = new global::System.Data.DataColumn("SEX_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX_CODE);
                this.columnSEX_DESCRIPTION = new global::System.Data.DataColumn("SEX_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEX_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSEX_CODE}, true));
                this.columnSEX_CODE.AllowDBNull = false;
                this.columnSEX_CODE.Unique = true;
                this.columnSEX_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SEX_TYPE_ENUMRow NewT_PROP_SEX_TYPE_ENUMRow() {
                return ((T_PROP_SEX_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_SEX_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_SEX_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_SEX_TYPE_ENUMRowChanged != null)) {
                    this.T_PROP_SEX_TYPE_ENUMRowChanged(this, new T_PROP_SEX_TYPE_ENUMRowChangeEvent(((T_PROP_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_SEX_TYPE_ENUMRowChanging != null)) {
                    this.T_PROP_SEX_TYPE_ENUMRowChanging(this, new T_PROP_SEX_TYPE_ENUMRowChangeEvent(((T_PROP_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_SEX_TYPE_ENUMRowDeleted != null)) {
                    this.T_PROP_SEX_TYPE_ENUMRowDeleted(this, new T_PROP_SEX_TYPE_ENUMRowChangeEvent(((T_PROP_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_SEX_TYPE_ENUMRowDeleting != null)) {
                    this.T_PROP_SEX_TYPE_ENUMRowDeleting(this, new T_PROP_SEX_TYPE_ENUMRowChangeEvent(((T_PROP_SEX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_SEX_TYPE_ENUMRow(T_PROP_SEX_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_SEX_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_SMOKE_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSMK_CODE;
            
            private global::System.Data.DataColumn columnSMK_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SMOKE_TYPEDataTable() {
                this.TableName = "T_PROP_SMOKE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_SMOKE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_SMOKE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMK_CODEColumn {
                get {
                    return this.columnSMK_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMK_DESCRIPTIONColumn {
                get {
                    return this.columnSMK_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SMOKE_TYPERow this[int index] {
                get {
                    return ((T_PROP_SMOKE_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_SMOKE_TYPERowChangeEventHandler T_PROP_SMOKE_TYPERowChanging;
            
            public event T_PROP_SMOKE_TYPERowChangeEventHandler T_PROP_SMOKE_TYPERowChanged;
            
            public event T_PROP_SMOKE_TYPERowChangeEventHandler T_PROP_SMOKE_TYPERowDeleting;
            
            public event T_PROP_SMOKE_TYPERowChangeEventHandler T_PROP_SMOKE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_SMOKE_TYPERow(T_PROP_SMOKE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SMOKE_TYPERow AddT_PROP_SMOKE_TYPERow(int SMK_CODE, string SMK_DESCRIPTION) {
                T_PROP_SMOKE_TYPERow rowT_PROP_SMOKE_TYPERow = ((T_PROP_SMOKE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SMK_CODE,
                        SMK_DESCRIPTION};
                rowT_PROP_SMOKE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_SMOKE_TYPERow);
                return rowT_PROP_SMOKE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SMOKE_TYPERow FindBySMK_CODE(int SMK_CODE) {
                return ((T_PROP_SMOKE_TYPERow)(this.Rows.Find(new object[] {
                            SMK_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_SMOKE_TYPEDataTable cln = ((T_PROP_SMOKE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_SMOKE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSMK_CODE = base.Columns["SMK_CODE"];
                this.columnSMK_DESCRIPTION = base.Columns["SMK_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSMK_CODE = new global::System.Data.DataColumn("SMK_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMK_CODE);
                this.columnSMK_DESCRIPTION = new global::System.Data.DataColumn("SMK_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMK_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSMK_CODE}, true));
                this.columnSMK_CODE.AllowDBNull = false;
                this.columnSMK_CODE.Unique = true;
                this.columnSMK_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SMOKE_TYPERow NewT_PROP_SMOKE_TYPERow() {
                return ((T_PROP_SMOKE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_SMOKE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_SMOKE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_SMOKE_TYPERowChanged != null)) {
                    this.T_PROP_SMOKE_TYPERowChanged(this, new T_PROP_SMOKE_TYPERowChangeEvent(((T_PROP_SMOKE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_SMOKE_TYPERowChanging != null)) {
                    this.T_PROP_SMOKE_TYPERowChanging(this, new T_PROP_SMOKE_TYPERowChangeEvent(((T_PROP_SMOKE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_SMOKE_TYPERowDeleted != null)) {
                    this.T_PROP_SMOKE_TYPERowDeleted(this, new T_PROP_SMOKE_TYPERowChangeEvent(((T_PROP_SMOKE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_SMOKE_TYPERowDeleting != null)) {
                    this.T_PROP_SMOKE_TYPERowDeleting(this, new T_PROP_SMOKE_TYPERowChangeEvent(((T_PROP_SMOKE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_SMOKE_TYPERow(T_PROP_SMOKE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_SMOKE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_STATUS_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRCS_CODE;
            
            private global::System.Data.DataColumn columnRCS_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_STATUS_TYPEDataTable() {
                this.TableName = "T_PROP_STATUS_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_STATUS_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_STATUS_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCS_CODEColumn {
                get {
                    return this.columnRCS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCS_DESCRIPTIONColumn {
                get {
                    return this.columnRCS_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_STATUS_TYPERow this[int index] {
                get {
                    return ((T_PROP_STATUS_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_STATUS_TYPERowChangeEventHandler T_PROP_STATUS_TYPERowChanging;
            
            public event T_PROP_STATUS_TYPERowChangeEventHandler T_PROP_STATUS_TYPERowChanged;
            
            public event T_PROP_STATUS_TYPERowChangeEventHandler T_PROP_STATUS_TYPERowDeleting;
            
            public event T_PROP_STATUS_TYPERowChangeEventHandler T_PROP_STATUS_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_STATUS_TYPERow(T_PROP_STATUS_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_STATUS_TYPERow AddT_PROP_STATUS_TYPERow(int RCS_CODE, string RCS_DESCRIPTION) {
                T_PROP_STATUS_TYPERow rowT_PROP_STATUS_TYPERow = ((T_PROP_STATUS_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RCS_CODE,
                        RCS_DESCRIPTION};
                rowT_PROP_STATUS_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_STATUS_TYPERow);
                return rowT_PROP_STATUS_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_STATUS_TYPERow FindByRCS_CODE(int RCS_CODE) {
                return ((T_PROP_STATUS_TYPERow)(this.Rows.Find(new object[] {
                            RCS_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_STATUS_TYPEDataTable cln = ((T_PROP_STATUS_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_STATUS_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRCS_CODE = base.Columns["RCS_CODE"];
                this.columnRCS_DESCRIPTION = base.Columns["RCS_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRCS_CODE = new global::System.Data.DataColumn("RCS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCS_CODE);
                this.columnRCS_DESCRIPTION = new global::System.Data.DataColumn("RCS_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCS_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRCS_CODE}, true));
                this.columnRCS_CODE.AllowDBNull = false;
                this.columnRCS_CODE.Unique = true;
                this.columnRCS_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_STATUS_TYPERow NewT_PROP_STATUS_TYPERow() {
                return ((T_PROP_STATUS_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_STATUS_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_STATUS_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_STATUS_TYPERowChanged != null)) {
                    this.T_PROP_STATUS_TYPERowChanged(this, new T_PROP_STATUS_TYPERowChangeEvent(((T_PROP_STATUS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_STATUS_TYPERowChanging != null)) {
                    this.T_PROP_STATUS_TYPERowChanging(this, new T_PROP_STATUS_TYPERowChangeEvent(((T_PROP_STATUS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_STATUS_TYPERowDeleted != null)) {
                    this.T_PROP_STATUS_TYPERowDeleted(this, new T_PROP_STATUS_TYPERowChangeEvent(((T_PROP_STATUS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_STATUS_TYPERowDeleting != null)) {
                    this.T_PROP_STATUS_TYPERowDeleting(this, new T_PROP_STATUS_TYPERowChangeEvent(((T_PROP_STATUS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_STATUS_TYPERow(T_PROP_STATUS_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_STATUS_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_WANT_KIDS_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWKD_CODE;
            
            private global::System.Data.DataColumn columnWKD_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WANT_KIDS_TYPEDataTable() {
                this.TableName = "T_PROP_WANT_KIDS_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_WANT_KIDS_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_WANT_KIDS_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WKD_CODEColumn {
                get {
                    return this.columnWKD_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WKD_DESCRIPTIONColumn {
                get {
                    return this.columnWKD_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WANT_KIDS_TYPERow this[int index] {
                get {
                    return ((T_PROP_WANT_KIDS_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_WANT_KIDS_TYPERowChangeEventHandler T_PROP_WANT_KIDS_TYPERowChanging;
            
            public event T_PROP_WANT_KIDS_TYPERowChangeEventHandler T_PROP_WANT_KIDS_TYPERowChanged;
            
            public event T_PROP_WANT_KIDS_TYPERowChangeEventHandler T_PROP_WANT_KIDS_TYPERowDeleting;
            
            public event T_PROP_WANT_KIDS_TYPERowChangeEventHandler T_PROP_WANT_KIDS_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_WANT_KIDS_TYPERow(T_PROP_WANT_KIDS_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WANT_KIDS_TYPERow AddT_PROP_WANT_KIDS_TYPERow(int WKD_CODE, string WKD_DESCRIPTION) {
                T_PROP_WANT_KIDS_TYPERow rowT_PROP_WANT_KIDS_TYPERow = ((T_PROP_WANT_KIDS_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WKD_CODE,
                        WKD_DESCRIPTION};
                rowT_PROP_WANT_KIDS_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_WANT_KIDS_TYPERow);
                return rowT_PROP_WANT_KIDS_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WANT_KIDS_TYPERow FindByWKD_CODE(int WKD_CODE) {
                return ((T_PROP_WANT_KIDS_TYPERow)(this.Rows.Find(new object[] {
                            WKD_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_WANT_KIDS_TYPEDataTable cln = ((T_PROP_WANT_KIDS_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_WANT_KIDS_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWKD_CODE = base.Columns["WKD_CODE"];
                this.columnWKD_DESCRIPTION = base.Columns["WKD_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWKD_CODE = new global::System.Data.DataColumn("WKD_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWKD_CODE);
                this.columnWKD_DESCRIPTION = new global::System.Data.DataColumn("WKD_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWKD_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWKD_CODE}, true));
                this.columnWKD_CODE.AllowDBNull = false;
                this.columnWKD_CODE.Unique = true;
                this.columnWKD_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WANT_KIDS_TYPERow NewT_PROP_WANT_KIDS_TYPERow() {
                return ((T_PROP_WANT_KIDS_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_WANT_KIDS_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_WANT_KIDS_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_WANT_KIDS_TYPERowChanged != null)) {
                    this.T_PROP_WANT_KIDS_TYPERowChanged(this, new T_PROP_WANT_KIDS_TYPERowChangeEvent(((T_PROP_WANT_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_WANT_KIDS_TYPERowChanging != null)) {
                    this.T_PROP_WANT_KIDS_TYPERowChanging(this, new T_PROP_WANT_KIDS_TYPERowChangeEvent(((T_PROP_WANT_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_WANT_KIDS_TYPERowDeleted != null)) {
                    this.T_PROP_WANT_KIDS_TYPERowDeleted(this, new T_PROP_WANT_KIDS_TYPERowChangeEvent(((T_PROP_WANT_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_WANT_KIDS_TYPERowDeleting != null)) {
                    this.T_PROP_WANT_KIDS_TYPERowDeleting(this, new T_PROP_WANT_KIDS_TYPERowChangeEvent(((T_PROP_WANT_KIDS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_WANT_KIDS_TYPERow(T_PROP_WANT_KIDS_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_WANT_KIDS_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_WEIGHT_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWGT_CODE;
            
            private global::System.Data.DataColumn columnWGT_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WEIGHT_TYPEDataTable() {
                this.TableName = "T_PROP_WEIGHT_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_WEIGHT_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_WEIGHT_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WGT_CODEColumn {
                get {
                    return this.columnWGT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WGT_DESCRIPTIONColumn {
                get {
                    return this.columnWGT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WEIGHT_TYPERow this[int index] {
                get {
                    return ((T_PROP_WEIGHT_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_WEIGHT_TYPERowChangeEventHandler T_PROP_WEIGHT_TYPERowChanging;
            
            public event T_PROP_WEIGHT_TYPERowChangeEventHandler T_PROP_WEIGHT_TYPERowChanged;
            
            public event T_PROP_WEIGHT_TYPERowChangeEventHandler T_PROP_WEIGHT_TYPERowDeleting;
            
            public event T_PROP_WEIGHT_TYPERowChangeEventHandler T_PROP_WEIGHT_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_WEIGHT_TYPERow(T_PROP_WEIGHT_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WEIGHT_TYPERow AddT_PROP_WEIGHT_TYPERow(int WGT_CODE, string WGT_DESCRIPTION) {
                T_PROP_WEIGHT_TYPERow rowT_PROP_WEIGHT_TYPERow = ((T_PROP_WEIGHT_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WGT_CODE,
                        WGT_DESCRIPTION};
                rowT_PROP_WEIGHT_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_WEIGHT_TYPERow);
                return rowT_PROP_WEIGHT_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WEIGHT_TYPERow FindByWGT_CODE(int WGT_CODE) {
                return ((T_PROP_WEIGHT_TYPERow)(this.Rows.Find(new object[] {
                            WGT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_WEIGHT_TYPEDataTable cln = ((T_PROP_WEIGHT_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_WEIGHT_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWGT_CODE = base.Columns["WGT_CODE"];
                this.columnWGT_DESCRIPTION = base.Columns["WGT_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWGT_CODE = new global::System.Data.DataColumn("WGT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWGT_CODE);
                this.columnWGT_DESCRIPTION = new global::System.Data.DataColumn("WGT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWGT_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWGT_CODE}, true));
                this.columnWGT_CODE.AllowDBNull = false;
                this.columnWGT_CODE.Unique = true;
                this.columnWGT_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WEIGHT_TYPERow NewT_PROP_WEIGHT_TYPERow() {
                return ((T_PROP_WEIGHT_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_WEIGHT_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_WEIGHT_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_WEIGHT_TYPERowChanged != null)) {
                    this.T_PROP_WEIGHT_TYPERowChanged(this, new T_PROP_WEIGHT_TYPERowChangeEvent(((T_PROP_WEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_WEIGHT_TYPERowChanging != null)) {
                    this.T_PROP_WEIGHT_TYPERowChanging(this, new T_PROP_WEIGHT_TYPERowChangeEvent(((T_PROP_WEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_WEIGHT_TYPERowDeleted != null)) {
                    this.T_PROP_WEIGHT_TYPERowDeleted(this, new T_PROP_WEIGHT_TYPERowChangeEvent(((T_PROP_WEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_WEIGHT_TYPERowDeleting != null)) {
                    this.T_PROP_WEIGHT_TYPERowDeleting(this, new T_PROP_WEIGHT_TYPERowChangeEvent(((T_PROP_WEIGHT_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_WEIGHT_TYPERow(T_PROP_WEIGHT_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_WEIGHT_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_ZODIAC_SIGN_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnZDC_CODE;
            
            private global::System.Data.DataColumn columnZDC_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_ZODIAC_SIGN_TYPEDataTable() {
                this.TableName = "T_PROP_ZODIAC_SIGN_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_ZODIAC_SIGN_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_ZODIAC_SIGN_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDC_CODEColumn {
                get {
                    return this.columnZDC_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDC_DESCRIPTIONColumn {
                get {
                    return this.columnZDC_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_ZODIAC_SIGN_TYPERow this[int index] {
                get {
                    return ((T_PROP_ZODIAC_SIGN_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_ZODIAC_SIGN_TYPERowChangeEventHandler T_PROP_ZODIAC_SIGN_TYPERowChanging;
            
            public event T_PROP_ZODIAC_SIGN_TYPERowChangeEventHandler T_PROP_ZODIAC_SIGN_TYPERowChanged;
            
            public event T_PROP_ZODIAC_SIGN_TYPERowChangeEventHandler T_PROP_ZODIAC_SIGN_TYPERowDeleting;
            
            public event T_PROP_ZODIAC_SIGN_TYPERowChangeEventHandler T_PROP_ZODIAC_SIGN_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_ZODIAC_SIGN_TYPERow(T_PROP_ZODIAC_SIGN_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_ZODIAC_SIGN_TYPERow AddT_PROP_ZODIAC_SIGN_TYPERow(int ZDC_CODE, string ZDC_DESCRIPTION) {
                T_PROP_ZODIAC_SIGN_TYPERow rowT_PROP_ZODIAC_SIGN_TYPERow = ((T_PROP_ZODIAC_SIGN_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ZDC_CODE,
                        ZDC_DESCRIPTION};
                rowT_PROP_ZODIAC_SIGN_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_ZODIAC_SIGN_TYPERow);
                return rowT_PROP_ZODIAC_SIGN_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_ZODIAC_SIGN_TYPERow FindByZDC_CODE(int ZDC_CODE) {
                return ((T_PROP_ZODIAC_SIGN_TYPERow)(this.Rows.Find(new object[] {
                            ZDC_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_ZODIAC_SIGN_TYPEDataTable cln = ((T_PROP_ZODIAC_SIGN_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_ZODIAC_SIGN_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnZDC_CODE = base.Columns["ZDC_CODE"];
                this.columnZDC_DESCRIPTION = base.Columns["ZDC_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnZDC_CODE = new global::System.Data.DataColumn("ZDC_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDC_CODE);
                this.columnZDC_DESCRIPTION = new global::System.Data.DataColumn("ZDC_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDC_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnZDC_CODE}, true));
                this.columnZDC_CODE.AllowDBNull = false;
                this.columnZDC_CODE.Unique = true;
                this.columnZDC_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_ZODIAC_SIGN_TYPERow NewT_PROP_ZODIAC_SIGN_TYPERow() {
                return ((T_PROP_ZODIAC_SIGN_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_ZODIAC_SIGN_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_ZODIAC_SIGN_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_ZODIAC_SIGN_TYPERowChanged != null)) {
                    this.T_PROP_ZODIAC_SIGN_TYPERowChanged(this, new T_PROP_ZODIAC_SIGN_TYPERowChangeEvent(((T_PROP_ZODIAC_SIGN_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_ZODIAC_SIGN_TYPERowChanging != null)) {
                    this.T_PROP_ZODIAC_SIGN_TYPERowChanging(this, new T_PROP_ZODIAC_SIGN_TYPERowChangeEvent(((T_PROP_ZODIAC_SIGN_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_ZODIAC_SIGN_TYPERowDeleted != null)) {
                    this.T_PROP_ZODIAC_SIGN_TYPERowDeleted(this, new T_PROP_ZODIAC_SIGN_TYPERowChangeEvent(((T_PROP_ZODIAC_SIGN_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_ZODIAC_SIGN_TYPERowDeleting != null)) {
                    this.T_PROP_ZODIAC_SIGN_TYPERowDeleting(this, new T_PROP_ZODIAC_SIGN_TYPERowChangeEvent(((T_PROP_ZODIAC_SIGN_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_ZODIAC_SIGN_TYPERow(T_PROP_ZODIAC_SIGN_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_ZODIAC_SIGN_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_RESULT_VIEW_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRST_CODE;
            
            private global::System.Data.DataColumn columnRST_DESCRIPTION;
            
            private global::System.Data.DataColumn columnRST_SELECTED;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RESULT_VIEW_TYPE_ENUMDataTable() {
                this.TableName = "T_RESULT_VIEW_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_RESULT_VIEW_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_RESULT_VIEW_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RST_CODEColumn {
                get {
                    return this.columnRST_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RST_DESCRIPTIONColumn {
                get {
                    return this.columnRST_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RST_SELECTEDColumn {
                get {
                    return this.columnRST_SELECTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RESULT_VIEW_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_RESULT_VIEW_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_RESULT_VIEW_TYPE_ENUMRowChangeEventHandler T_RESULT_VIEW_TYPE_ENUMRowChanging;
            
            public event T_RESULT_VIEW_TYPE_ENUMRowChangeEventHandler T_RESULT_VIEW_TYPE_ENUMRowChanged;
            
            public event T_RESULT_VIEW_TYPE_ENUMRowChangeEventHandler T_RESULT_VIEW_TYPE_ENUMRowDeleting;
            
            public event T_RESULT_VIEW_TYPE_ENUMRowChangeEventHandler T_RESULT_VIEW_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_RESULT_VIEW_TYPE_ENUMRow(T_RESULT_VIEW_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RESULT_VIEW_TYPE_ENUMRow AddT_RESULT_VIEW_TYPE_ENUMRow(int RST_CODE, string RST_DESCRIPTION, bool RST_SELECTED, int ValueCode, string ValueNameEnum, string ValueName) {
                T_RESULT_VIEW_TYPE_ENUMRow rowT_RESULT_VIEW_TYPE_ENUMRow = ((T_RESULT_VIEW_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RST_CODE,
                        RST_DESCRIPTION,
                        RST_SELECTED,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_RESULT_VIEW_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_RESULT_VIEW_TYPE_ENUMRow);
                return rowT_RESULT_VIEW_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RESULT_VIEW_TYPE_ENUMRow FindByRST_CODE(int RST_CODE) {
                return ((T_RESULT_VIEW_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            RST_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_RESULT_VIEW_TYPE_ENUMDataTable cln = ((T_RESULT_VIEW_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_RESULT_VIEW_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRST_CODE = base.Columns["RST_CODE"];
                this.columnRST_DESCRIPTION = base.Columns["RST_DESCRIPTION"];
                this.columnRST_SELECTED = base.Columns["RST_SELECTED"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRST_CODE = new global::System.Data.DataColumn("RST_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRST_CODE);
                this.columnRST_DESCRIPTION = new global::System.Data.DataColumn("RST_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRST_DESCRIPTION);
                this.columnRST_SELECTED = new global::System.Data.DataColumn("RST_SELECTED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRST_SELECTED);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRST_CODE}, true));
                this.columnRST_CODE.AllowDBNull = false;
                this.columnRST_CODE.Unique = true;
                this.columnRST_DESCRIPTION.MaxLength = 50;
                this.columnRST_SELECTED.AllowDBNull = false;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RESULT_VIEW_TYPE_ENUMRow NewT_RESULT_VIEW_TYPE_ENUMRow() {
                return ((T_RESULT_VIEW_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_RESULT_VIEW_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_RESULT_VIEW_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_RESULT_VIEW_TYPE_ENUMRowChanged != null)) {
                    this.T_RESULT_VIEW_TYPE_ENUMRowChanged(this, new T_RESULT_VIEW_TYPE_ENUMRowChangeEvent(((T_RESULT_VIEW_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_RESULT_VIEW_TYPE_ENUMRowChanging != null)) {
                    this.T_RESULT_VIEW_TYPE_ENUMRowChanging(this, new T_RESULT_VIEW_TYPE_ENUMRowChangeEvent(((T_RESULT_VIEW_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_RESULT_VIEW_TYPE_ENUMRowDeleted != null)) {
                    this.T_RESULT_VIEW_TYPE_ENUMRowDeleted(this, new T_RESULT_VIEW_TYPE_ENUMRowChangeEvent(((T_RESULT_VIEW_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_RESULT_VIEW_TYPE_ENUMRowDeleting != null)) {
                    this.T_RESULT_VIEW_TYPE_ENUMRowDeleting(this, new T_RESULT_VIEW_TYPE_ENUMRowChangeEvent(((T_RESULT_VIEW_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_RESULT_VIEW_TYPE_ENUMRow(T_RESULT_VIEW_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_RESULT_VIEW_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_RMN_TYPE_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRTT_CODE;
            
            private global::System.Data.DataColumn columnRTT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMDataTable() {
                this.TableName = "T_RMN_TYPE_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_RMN_TYPE_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_RMN_TYPE_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RTT_CODEColumn {
                get {
                    return this.columnRTT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RTT_DESCRIPTIONColumn {
                get {
                    return this.columnRTT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_RMN_TYPE_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_RMN_TYPE_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_TYPE_ENUMRowChanging;
            
            public event T_RMN_TYPE_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_TYPE_ENUMRowChanged;
            
            public event T_RMN_TYPE_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_TYPE_ENUMRowDeleting;
            
            public event T_RMN_TYPE_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_RMN_TYPE_TYPE_ENUMRow(T_RMN_TYPE_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMRow AddT_RMN_TYPE_TYPE_ENUMRow(int RTT_CODE, string RTT_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_RMN_TYPE_TYPE_ENUMRow rowT_RMN_TYPE_TYPE_ENUMRow = ((T_RMN_TYPE_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RTT_CODE,
                        RTT_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_RMN_TYPE_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_RMN_TYPE_TYPE_ENUMRow);
                return rowT_RMN_TYPE_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMRow FindByRTT_CODE(int RTT_CODE) {
                return ((T_RMN_TYPE_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            RTT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_RMN_TYPE_TYPE_ENUMDataTable cln = ((T_RMN_TYPE_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_RMN_TYPE_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRTT_CODE = base.Columns["RTT_CODE"];
                this.columnRTT_DESCRIPTION = base.Columns["RTT_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRTT_CODE = new global::System.Data.DataColumn("RTT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRTT_CODE);
                this.columnRTT_DESCRIPTION = new global::System.Data.DataColumn("RTT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRTT_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRTT_CODE}, true));
                this.columnRTT_CODE.AllowDBNull = false;
                this.columnRTT_CODE.Unique = true;
                this.columnRTT_DESCRIPTION.AllowDBNull = false;
                this.columnRTT_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMRow NewT_RMN_TYPE_TYPE_ENUMRow() {
                return ((T_RMN_TYPE_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_RMN_TYPE_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_RMN_TYPE_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_RMN_TYPE_TYPE_ENUMRowChanged != null)) {
                    this.T_RMN_TYPE_TYPE_ENUMRowChanged(this, new T_RMN_TYPE_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_RMN_TYPE_TYPE_ENUMRowChanging != null)) {
                    this.T_RMN_TYPE_TYPE_ENUMRowChanging(this, new T_RMN_TYPE_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_RMN_TYPE_TYPE_ENUMRowDeleted != null)) {
                    this.T_RMN_TYPE_TYPE_ENUMRowDeleted(this, new T_RMN_TYPE_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_RMN_TYPE_TYPE_ENUMRowDeleting != null)) {
                    this.T_RMN_TYPE_TYPE_ENUMRowDeleting(this, new T_RMN_TYPE_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_RMN_TYPE_TYPE_ENUMRow(T_RMN_TYPE_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_RMN_TYPE_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_TWINK_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTWT_CODE;
            
            private global::System.Data.DataColumn columnTWT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnTWT_ORDER_BY;
            
            private global::System.Data.DataColumn columnTWT_SELECTED;
            
            private global::System.Data.DataColumn columnTWT_DISABLED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPEDataTable() {
                this.TableName = "T_TWINK_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TWINK_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_TWINK_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWT_CODEColumn {
                get {
                    return this.columnTWT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWT_DESCRIPTIONColumn {
                get {
                    return this.columnTWT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWT_ORDER_BYColumn {
                get {
                    return this.columnTWT_ORDER_BY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWT_SELECTEDColumn {
                get {
                    return this.columnTWT_SELECTED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWT_DISABLEDColumn {
                get {
                    return this.columnTWT_DISABLED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPERow this[int index] {
                get {
                    return ((T_TWINK_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_TWINK_TYPERowChangeEventHandler T_TWINK_TYPERowChanging;
            
            public event T_TWINK_TYPERowChangeEventHandler T_TWINK_TYPERowChanged;
            
            public event T_TWINK_TYPERowChangeEventHandler T_TWINK_TYPERowDeleting;
            
            public event T_TWINK_TYPERowChangeEventHandler T_TWINK_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_TWINK_TYPERow(T_TWINK_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPERow AddT_TWINK_TYPERow(int TWT_CODE, string TWT_DESCRIPTION, int TWT_ORDER_BY, bool TWT_SELECTED, bool TWT_DISABLED) {
                T_TWINK_TYPERow rowT_TWINK_TYPERow = ((T_TWINK_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TWT_CODE,
                        TWT_DESCRIPTION,
                        TWT_ORDER_BY,
                        TWT_SELECTED,
                        TWT_DISABLED};
                rowT_TWINK_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_TWINK_TYPERow);
                return rowT_TWINK_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPERow FindByTWT_CODE(int TWT_CODE) {
                return ((T_TWINK_TYPERow)(this.Rows.Find(new object[] {
                            TWT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_TWINK_TYPEDataTable cln = ((T_TWINK_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_TWINK_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTWT_CODE = base.Columns["TWT_CODE"];
                this.columnTWT_DESCRIPTION = base.Columns["TWT_DESCRIPTION"];
                this.columnTWT_ORDER_BY = base.Columns["TWT_ORDER_BY"];
                this.columnTWT_SELECTED = base.Columns["TWT_SELECTED"];
                this.columnTWT_DISABLED = base.Columns["TWT_DISABLED"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTWT_CODE = new global::System.Data.DataColumn("TWT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWT_CODE);
                this.columnTWT_DESCRIPTION = new global::System.Data.DataColumn("TWT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWT_DESCRIPTION);
                this.columnTWT_ORDER_BY = new global::System.Data.DataColumn("TWT_ORDER_BY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWT_ORDER_BY);
                this.columnTWT_SELECTED = new global::System.Data.DataColumn("TWT_SELECTED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWT_SELECTED);
                this.columnTWT_DISABLED = new global::System.Data.DataColumn("TWT_DISABLED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWT_DISABLED);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTWT_CODE}, true));
                this.columnTWT_CODE.AllowDBNull = false;
                this.columnTWT_CODE.Unique = true;
                this.columnTWT_DESCRIPTION.AllowDBNull = false;
                this.columnTWT_DESCRIPTION.MaxLength = 50;
                this.columnTWT_ORDER_BY.AllowDBNull = false;
                this.columnTWT_SELECTED.AllowDBNull = false;
                this.columnTWT_DISABLED.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPERow NewT_TWINK_TYPERow() {
                return ((T_TWINK_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_TWINK_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_TWINK_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_TWINK_TYPERowChanged != null)) {
                    this.T_TWINK_TYPERowChanged(this, new T_TWINK_TYPERowChangeEvent(((T_TWINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_TWINK_TYPERowChanging != null)) {
                    this.T_TWINK_TYPERowChanging(this, new T_TWINK_TYPERowChangeEvent(((T_TWINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_TWINK_TYPERowDeleted != null)) {
                    this.T_TWINK_TYPERowDeleted(this, new T_TWINK_TYPERowChangeEvent(((T_TWINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_TWINK_TYPERowDeleting != null)) {
                    this.T_TWINK_TYPERowDeleting(this, new T_TWINK_TYPERowChangeEvent(((T_TWINK_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_TWINK_TYPERow(T_TWINK_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_TWINK_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_USER_INVITEE_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUIT_CODE;
            
            private global::System.Data.DataColumn columnUIT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_INVITEE_TYPE_ENUMDataTable() {
                this.TableName = "T_USER_INVITEE_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_USER_INVITEE_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_USER_INVITEE_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UIT_CODEColumn {
                get {
                    return this.columnUIT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UIT_DESCRIPTIONColumn {
                get {
                    return this.columnUIT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_INVITEE_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_USER_INVITEE_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_USER_INVITEE_TYPE_ENUMRowChangeEventHandler T_USER_INVITEE_TYPE_ENUMRowChanging;
            
            public event T_USER_INVITEE_TYPE_ENUMRowChangeEventHandler T_USER_INVITEE_TYPE_ENUMRowChanged;
            
            public event T_USER_INVITEE_TYPE_ENUMRowChangeEventHandler T_USER_INVITEE_TYPE_ENUMRowDeleting;
            
            public event T_USER_INVITEE_TYPE_ENUMRowChangeEventHandler T_USER_INVITEE_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_USER_INVITEE_TYPE_ENUMRow(T_USER_INVITEE_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_INVITEE_TYPE_ENUMRow AddT_USER_INVITEE_TYPE_ENUMRow(int UIT_CODE, string UIT_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_USER_INVITEE_TYPE_ENUMRow rowT_USER_INVITEE_TYPE_ENUMRow = ((T_USER_INVITEE_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UIT_CODE,
                        UIT_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_USER_INVITEE_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_USER_INVITEE_TYPE_ENUMRow);
                return rowT_USER_INVITEE_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_INVITEE_TYPE_ENUMRow FindByUIT_CODE(int UIT_CODE) {
                return ((T_USER_INVITEE_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            UIT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_USER_INVITEE_TYPE_ENUMDataTable cln = ((T_USER_INVITEE_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_USER_INVITEE_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUIT_CODE = base.Columns["UIT_CODE"];
                this.columnUIT_DESCRIPTION = base.Columns["UIT_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUIT_CODE = new global::System.Data.DataColumn("UIT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUIT_CODE);
                this.columnUIT_DESCRIPTION = new global::System.Data.DataColumn("UIT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUIT_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUIT_CODE}, true));
                this.columnUIT_CODE.AllowDBNull = false;
                this.columnUIT_CODE.Unique = true;
                this.columnUIT_DESCRIPTION.AllowDBNull = false;
                this.columnUIT_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_INVITEE_TYPE_ENUMRow NewT_USER_INVITEE_TYPE_ENUMRow() {
                return ((T_USER_INVITEE_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_USER_INVITEE_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_USER_INVITEE_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_USER_INVITEE_TYPE_ENUMRowChanged != null)) {
                    this.T_USER_INVITEE_TYPE_ENUMRowChanged(this, new T_USER_INVITEE_TYPE_ENUMRowChangeEvent(((T_USER_INVITEE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_USER_INVITEE_TYPE_ENUMRowChanging != null)) {
                    this.T_USER_INVITEE_TYPE_ENUMRowChanging(this, new T_USER_INVITEE_TYPE_ENUMRowChangeEvent(((T_USER_INVITEE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_USER_INVITEE_TYPE_ENUMRowDeleted != null)) {
                    this.T_USER_INVITEE_TYPE_ENUMRowDeleted(this, new T_USER_INVITEE_TYPE_ENUMRowChangeEvent(((T_USER_INVITEE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_USER_INVITEE_TYPE_ENUMRowDeleting != null)) {
                    this.T_USER_INVITEE_TYPE_ENUMRowDeleting(this, new T_USER_INVITEE_TYPE_ENUMRowChangeEvent(((T_USER_INVITEE_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_USER_INVITEE_TYPE_ENUMRow(T_USER_INVITEE_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_USER_INVITEE_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_TWINKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnTWK_ID;
            
            private global::System.Data.DataColumn columnTWK_TWINK_TYPE;
            
            private global::System.Data.DataColumn columnTWK_TWINK;
            
            private global::System.Data.DataColumn columnTWK_ICON;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKDataTable() {
                this.TableName = "T_TWINK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TWINKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_TWINKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWK_IDColumn {
                get {
                    return this.columnTWK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWK_TWINK_TYPEColumn {
                get {
                    return this.columnTWK_TWINK_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWK_TWINKColumn {
                get {
                    return this.columnTWK_TWINK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWK_ICONColumn {
                get {
                    return this.columnTWK_ICON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKRow this[int index] {
                get {
                    return ((T_TWINKRow)(this.Rows[index]));
                }
            }
            
            public event T_TWINKRowChangeEventHandler T_TWINKRowChanging;
            
            public event T_TWINKRowChangeEventHandler T_TWINKRowChanged;
            
            public event T_TWINKRowChangeEventHandler T_TWINKRowDeleting;
            
            public event T_TWINKRowChangeEventHandler T_TWINKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_TWINKRow(T_TWINKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKRow AddT_TWINKRow(T_TWINK_TYPERow parentT_TWINK_TYPERowByFK_T_TWINK_T_TWINK_TYPE, string TWK_TWINK, byte[] TWK_ICON) {
                T_TWINKRow rowT_TWINKRow = ((T_TWINKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        TWK_TWINK,
                        TWK_ICON};
                if ((parentT_TWINK_TYPERowByFK_T_TWINK_T_TWINK_TYPE != null)) {
                    columnValuesArray[1] = parentT_TWINK_TYPERowByFK_T_TWINK_T_TWINK_TYPE[0];
                }
                rowT_TWINKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_TWINKRow);
                return rowT_TWINKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKRow FindByTWK_ID(int TWK_ID) {
                return ((T_TWINKRow)(this.Rows.Find(new object[] {
                            TWK_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_TWINKDataTable cln = ((T_TWINKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_TWINKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTWK_ID = base.Columns["TWK_ID"];
                this.columnTWK_TWINK_TYPE = base.Columns["TWK_TWINK_TYPE"];
                this.columnTWK_TWINK = base.Columns["TWK_TWINK"];
                this.columnTWK_ICON = base.Columns["TWK_ICON"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTWK_ID = new global::System.Data.DataColumn("TWK_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWK_ID);
                this.columnTWK_TWINK_TYPE = new global::System.Data.DataColumn("TWK_TWINK_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWK_TWINK_TYPE);
                this.columnTWK_TWINK = new global::System.Data.DataColumn("TWK_TWINK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWK_TWINK);
                this.columnTWK_ICON = new global::System.Data.DataColumn("TWK_ICON", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWK_ICON);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTWK_ID}, true));
                this.columnTWK_ID.AutoIncrement = true;
                this.columnTWK_ID.AllowDBNull = false;
                this.columnTWK_ID.ReadOnly = true;
                this.columnTWK_ID.Unique = true;
                this.columnTWK_TWINK_TYPE.AllowDBNull = false;
                this.columnTWK_TWINK.AllowDBNull = false;
                this.columnTWK_TWINK.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKRow NewT_TWINKRow() {
                return ((T_TWINKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_TWINKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_TWINKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_TWINKRowChanged != null)) {
                    this.T_TWINKRowChanged(this, new T_TWINKRowChangeEvent(((T_TWINKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_TWINKRowChanging != null)) {
                    this.T_TWINKRowChanging(this, new T_TWINKRowChangeEvent(((T_TWINKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_TWINKRowDeleted != null)) {
                    this.T_TWINKRowDeleted(this, new T_TWINKRowChangeEvent(((T_TWINKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_TWINKRowDeleting != null)) {
                    this.T_TWINKRowDeleting(this, new T_TWINKRowChangeEvent(((T_TWINKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_TWINKRow(T_TWINKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_TWINKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_FAQDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFAQ_ID;
            
            private global::System.Data.DataColumn columnFAQ_FAQ_TYPE;
            
            private global::System.Data.DataColumn columnFAQ_QUESTION;
            
            private global::System.Data.DataColumn columnFAQ_ANSWER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQDataTable() {
                this.TableName = "T_FAQ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_FAQDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_FAQDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAQ_IDColumn {
                get {
                    return this.columnFAQ_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAQ_FAQ_TYPEColumn {
                get {
                    return this.columnFAQ_FAQ_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAQ_QUESTIONColumn {
                get {
                    return this.columnFAQ_QUESTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAQ_ANSWERColumn {
                get {
                    return this.columnFAQ_ANSWER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQRow this[int index] {
                get {
                    return ((T_FAQRow)(this.Rows[index]));
                }
            }
            
            public event T_FAQRowChangeEventHandler T_FAQRowChanging;
            
            public event T_FAQRowChangeEventHandler T_FAQRowChanged;
            
            public event T_FAQRowChangeEventHandler T_FAQRowDeleting;
            
            public event T_FAQRowChangeEventHandler T_FAQRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_FAQRow(T_FAQRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQRow AddT_FAQRow(T_FAQ_TYPERow parentT_FAQ_TYPERowByFK_T_FAQ_T_FAQ_TYPE, string FAQ_QUESTION, string FAQ_ANSWER) {
                T_FAQRow rowT_FAQRow = ((T_FAQRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        FAQ_QUESTION,
                        FAQ_ANSWER};
                if ((parentT_FAQ_TYPERowByFK_T_FAQ_T_FAQ_TYPE != null)) {
                    columnValuesArray[1] = parentT_FAQ_TYPERowByFK_T_FAQ_T_FAQ_TYPE[0];
                }
                rowT_FAQRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_FAQRow);
                return rowT_FAQRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQRow FindByFAQ_ID(int FAQ_ID) {
                return ((T_FAQRow)(this.Rows.Find(new object[] {
                            FAQ_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_FAQDataTable cln = ((T_FAQDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_FAQDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFAQ_ID = base.Columns["FAQ_ID"];
                this.columnFAQ_FAQ_TYPE = base.Columns["FAQ_FAQ_TYPE"];
                this.columnFAQ_QUESTION = base.Columns["FAQ_QUESTION"];
                this.columnFAQ_ANSWER = base.Columns["FAQ_ANSWER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFAQ_ID = new global::System.Data.DataColumn("FAQ_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAQ_ID);
                this.columnFAQ_FAQ_TYPE = new global::System.Data.DataColumn("FAQ_FAQ_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAQ_FAQ_TYPE);
                this.columnFAQ_QUESTION = new global::System.Data.DataColumn("FAQ_QUESTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAQ_QUESTION);
                this.columnFAQ_ANSWER = new global::System.Data.DataColumn("FAQ_ANSWER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAQ_ANSWER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFAQ_ID}, true));
                this.columnFAQ_ID.AutoIncrement = true;
                this.columnFAQ_ID.AllowDBNull = false;
                this.columnFAQ_ID.ReadOnly = true;
                this.columnFAQ_ID.Unique = true;
                this.columnFAQ_FAQ_TYPE.AllowDBNull = false;
                this.columnFAQ_QUESTION.AllowDBNull = false;
                this.columnFAQ_QUESTION.MaxLength = 255;
                this.columnFAQ_ANSWER.AllowDBNull = false;
                this.columnFAQ_ANSWER.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQRow NewT_FAQRow() {
                return ((T_FAQRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_FAQRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_FAQRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_FAQRowChanged != null)) {
                    this.T_FAQRowChanged(this, new T_FAQRowChangeEvent(((T_FAQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_FAQRowChanging != null)) {
                    this.T_FAQRowChanging(this, new T_FAQRowChangeEvent(((T_FAQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_FAQRowDeleted != null)) {
                    this.T_FAQRowDeleted(this, new T_FAQRowChangeEvent(((T_FAQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_FAQRowDeleting != null)) {
                    this.T_FAQRowDeleting(this, new T_FAQRowChangeEvent(((T_FAQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_FAQRow(T_FAQRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_FAQDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_BODY_STYLE_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBDY_CODE;
            
            private global::System.Data.DataColumn columnBDY_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_BODY_STYLE_TYPEDataTable() {
                this.TableName = "T_PROP_BODY_STYLE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_BODY_STYLE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_BODY_STYLE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BDY_CODEColumn {
                get {
                    return this.columnBDY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BDY_DESCRIPTIONColumn {
                get {
                    return this.columnBDY_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_BODY_STYLE_TYPERow this[int index] {
                get {
                    return ((T_PROP_BODY_STYLE_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_BODY_STYLE_TYPERowChangeEventHandler T_PROP_BODY_STYLE_TYPERowChanging;
            
            public event T_PROP_BODY_STYLE_TYPERowChangeEventHandler T_PROP_BODY_STYLE_TYPERowChanged;
            
            public event T_PROP_BODY_STYLE_TYPERowChangeEventHandler T_PROP_BODY_STYLE_TYPERowDeleting;
            
            public event T_PROP_BODY_STYLE_TYPERowChangeEventHandler T_PROP_BODY_STYLE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_BODY_STYLE_TYPERow(T_PROP_BODY_STYLE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_BODY_STYLE_TYPERow AddT_PROP_BODY_STYLE_TYPERow(int BDY_CODE, string BDY_DESCRIPTION) {
                T_PROP_BODY_STYLE_TYPERow rowT_PROP_BODY_STYLE_TYPERow = ((T_PROP_BODY_STYLE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BDY_CODE,
                        BDY_DESCRIPTION};
                rowT_PROP_BODY_STYLE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_BODY_STYLE_TYPERow);
                return rowT_PROP_BODY_STYLE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_BODY_STYLE_TYPERow FindByBDY_CODE(int BDY_CODE) {
                return ((T_PROP_BODY_STYLE_TYPERow)(this.Rows.Find(new object[] {
                            BDY_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_BODY_STYLE_TYPEDataTable cln = ((T_PROP_BODY_STYLE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_BODY_STYLE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBDY_CODE = base.Columns["BDY_CODE"];
                this.columnBDY_DESCRIPTION = base.Columns["BDY_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBDY_CODE = new global::System.Data.DataColumn("BDY_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBDY_CODE);
                this.columnBDY_DESCRIPTION = new global::System.Data.DataColumn("BDY_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBDY_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBDY_CODE}, true));
                this.columnBDY_CODE.AllowDBNull = false;
                this.columnBDY_CODE.Unique = true;
                this.columnBDY_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_BODY_STYLE_TYPERow NewT_PROP_BODY_STYLE_TYPERow() {
                return ((T_PROP_BODY_STYLE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_BODY_STYLE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_BODY_STYLE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_BODY_STYLE_TYPERowChanged != null)) {
                    this.T_PROP_BODY_STYLE_TYPERowChanged(this, new T_PROP_BODY_STYLE_TYPERowChangeEvent(((T_PROP_BODY_STYLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_BODY_STYLE_TYPERowChanging != null)) {
                    this.T_PROP_BODY_STYLE_TYPERowChanging(this, new T_PROP_BODY_STYLE_TYPERowChangeEvent(((T_PROP_BODY_STYLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_BODY_STYLE_TYPERowDeleted != null)) {
                    this.T_PROP_BODY_STYLE_TYPERowDeleted(this, new T_PROP_BODY_STYLE_TYPERowChangeEvent(((T_PROP_BODY_STYLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_BODY_STYLE_TYPERowDeleting != null)) {
                    this.T_PROP_BODY_STYLE_TYPERowDeleting(this, new T_PROP_BODY_STYLE_TYPERowChangeEvent(((T_PROP_BODY_STYLE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_BODY_STYLE_TYPERow(T_PROP_BODY_STYLE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_BODY_STYLE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_RMN_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRMT_CODE;
            
            private global::System.Data.DataColumn columnRMT_RTT_TYPE_TYPE;
            
            private global::System.Data.DataColumn columnRMT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnRMT_TEXT;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMDataTable() {
                this.TableName = "T_RMN_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_RMN_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_RMN_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMT_CODEColumn {
                get {
                    return this.columnRMT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMT_RTT_TYPE_TYPEColumn {
                get {
                    return this.columnRMT_RTT_TYPE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMT_DESCRIPTIONColumn {
                get {
                    return this.columnRMT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMT_TEXTColumn {
                get {
                    return this.columnRMT_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_RMN_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_RMN_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_ENUMRowChanging;
            
            public event T_RMN_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_ENUMRowChanged;
            
            public event T_RMN_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_ENUMRowDeleting;
            
            public event T_RMN_TYPE_ENUMRowChangeEventHandler T_RMN_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_RMN_TYPE_ENUMRow(T_RMN_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMRow AddT_RMN_TYPE_ENUMRow(int RMT_CODE, T_RMN_TYPE_TYPE_ENUMRow parentT_RMN_TYPE_TYPE_ENUMRowByFK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM, string RMT_DESCRIPTION, string RMT_TEXT, int ValueCode, string ValueNameEnum, string ValueName) {
                T_RMN_TYPE_ENUMRow rowT_RMN_TYPE_ENUMRow = ((T_RMN_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RMT_CODE,
                        null,
                        RMT_DESCRIPTION,
                        RMT_TEXT,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                if ((parentT_RMN_TYPE_TYPE_ENUMRowByFK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM != null)) {
                    columnValuesArray[1] = parentT_RMN_TYPE_TYPE_ENUMRowByFK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM[0];
                }
                rowT_RMN_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_RMN_TYPE_ENUMRow);
                return rowT_RMN_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMRow FindByRMT_CODE(int RMT_CODE) {
                return ((T_RMN_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            RMT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_RMN_TYPE_ENUMDataTable cln = ((T_RMN_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_RMN_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRMT_CODE = base.Columns["RMT_CODE"];
                this.columnRMT_RTT_TYPE_TYPE = base.Columns["RMT_RTT_TYPE_TYPE"];
                this.columnRMT_DESCRIPTION = base.Columns["RMT_DESCRIPTION"];
                this.columnRMT_TEXT = base.Columns["RMT_TEXT"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRMT_CODE = new global::System.Data.DataColumn("RMT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMT_CODE);
                this.columnRMT_RTT_TYPE_TYPE = new global::System.Data.DataColumn("RMT_RTT_TYPE_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMT_RTT_TYPE_TYPE);
                this.columnRMT_DESCRIPTION = new global::System.Data.DataColumn("RMT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMT_DESCRIPTION);
                this.columnRMT_TEXT = new global::System.Data.DataColumn("RMT_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMT_TEXT);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRMT_CODE}, true));
                this.columnRMT_CODE.AllowDBNull = false;
                this.columnRMT_CODE.Unique = true;
                this.columnRMT_RTT_TYPE_TYPE.AllowDBNull = false;
                this.columnRMT_DESCRIPTION.AllowDBNull = false;
                this.columnRMT_DESCRIPTION.MaxLength = 50;
                this.columnRMT_TEXT.MaxLength = 255;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMRow NewT_RMN_TYPE_ENUMRow() {
                return ((T_RMN_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_RMN_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_RMN_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_RMN_TYPE_ENUMRowChanged != null)) {
                    this.T_RMN_TYPE_ENUMRowChanged(this, new T_RMN_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_RMN_TYPE_ENUMRowChanging != null)) {
                    this.T_RMN_TYPE_ENUMRowChanging(this, new T_RMN_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_RMN_TYPE_ENUMRowDeleted != null)) {
                    this.T_RMN_TYPE_ENUMRowDeleted(this, new T_RMN_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_RMN_TYPE_ENUMRowDeleting != null)) {
                    this.T_RMN_TYPE_ENUMRowDeleting(this, new T_RMN_TYPE_ENUMRowChangeEvent(((T_RMN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_RMN_TYPE_ENUMRow(T_RMN_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_RMN_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnSecretKey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmailDataTable() {
                this.TableName = "Email";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EmailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecretKeyColumn {
                get {
                    return this.columnSecretKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmailRow this[int index] {
                get {
                    return ((EmailRow)(this.Rows[index]));
                }
            }
            
            public event EmailRowChangeEventHandler EmailRowChanging;
            
            public event EmailRowChangeEventHandler EmailRowChanged;
            
            public event EmailRowChangeEventHandler EmailRowDeleting;
            
            public event EmailRowChangeEventHandler EmailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEmailRow(EmailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmailRow AddEmailRow(string UserName, string Password, int UserID, string SecretKey) {
                EmailRow rowEmailRow = ((EmailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UserName,
                        Password,
                        UserID,
                        SecretKey};
                rowEmailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmailRow);
                return rowEmailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EmailDataTable cln = ((EmailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserName = base.Columns["UserName"];
                this.columnPassword = base.Columns["Password"];
                this.columnUserID = base.Columns["UserID"];
                this.columnSecretKey = base.Columns["SecretKey"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnSecretKey = new global::System.Data.DataColumn("SecretKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecretKey);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmailRow NewEmailRow() {
                return ((EmailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EmailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmailRowChanged != null)) {
                    this.EmailRowChanged(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmailRowChanging != null)) {
                    this.EmailRowChanging(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmailRowDeleted != null)) {
                    this.EmailRowDeleted(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmailRowDeleting != null)) {
                    this.EmailRowDeleting(this, new EmailRowChangeEvent(((EmailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEmailRow(EmailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_DOMAIN_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDMT_CODE;
            
            private global::System.Data.DataColumn columnDMT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnDMT_DOMAIN;
            
            private global::System.Data.DataColumn columnDMT_SERVICE_NAME;
            
            private global::System.Data.DataColumn columnDMT_SRC;
            
            private global::System.Data.DataColumn columnDMT_FETCHER_CODE;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DOMAIN_TYPE_ENUMDataTable() {
                this.TableName = "T_DOMAIN_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DOMAIN_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_DOMAIN_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DMT_CODEColumn {
                get {
                    return this.columnDMT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DMT_DESCRIPTIONColumn {
                get {
                    return this.columnDMT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DMT_DOMAINColumn {
                get {
                    return this.columnDMT_DOMAIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DMT_SERVICE_NAMEColumn {
                get {
                    return this.columnDMT_SERVICE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DMT_SRCColumn {
                get {
                    return this.columnDMT_SRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DMT_FETCHER_CODEColumn {
                get {
                    return this.columnDMT_FETCHER_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DOMAIN_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_DOMAIN_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_DOMAIN_TYPE_ENUMRowChangeEventHandler T_DOMAIN_TYPE_ENUMRowChanging;
            
            public event T_DOMAIN_TYPE_ENUMRowChangeEventHandler T_DOMAIN_TYPE_ENUMRowChanged;
            
            public event T_DOMAIN_TYPE_ENUMRowChangeEventHandler T_DOMAIN_TYPE_ENUMRowDeleting;
            
            public event T_DOMAIN_TYPE_ENUMRowChangeEventHandler T_DOMAIN_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_DOMAIN_TYPE_ENUMRow(T_DOMAIN_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DOMAIN_TYPE_ENUMRow AddT_DOMAIN_TYPE_ENUMRow(int DMT_CODE, string DMT_DESCRIPTION, string DMT_DOMAIN, string DMT_SERVICE_NAME, string DMT_SRC, int DMT_FETCHER_CODE, int ValueCode, string ValueNameEnum, string ValueName) {
                T_DOMAIN_TYPE_ENUMRow rowT_DOMAIN_TYPE_ENUMRow = ((T_DOMAIN_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DMT_CODE,
                        DMT_DESCRIPTION,
                        DMT_DOMAIN,
                        DMT_SERVICE_NAME,
                        DMT_SRC,
                        DMT_FETCHER_CODE,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_DOMAIN_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_DOMAIN_TYPE_ENUMRow);
                return rowT_DOMAIN_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DOMAIN_TYPE_ENUMRow FindByDMT_CODE(int DMT_CODE) {
                return ((T_DOMAIN_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            DMT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_DOMAIN_TYPE_ENUMDataTable cln = ((T_DOMAIN_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_DOMAIN_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDMT_CODE = base.Columns["DMT_CODE"];
                this.columnDMT_DESCRIPTION = base.Columns["DMT_DESCRIPTION"];
                this.columnDMT_DOMAIN = base.Columns["DMT_DOMAIN"];
                this.columnDMT_SERVICE_NAME = base.Columns["DMT_SERVICE_NAME"];
                this.columnDMT_SRC = base.Columns["DMT_SRC"];
                this.columnDMT_FETCHER_CODE = base.Columns["DMT_FETCHER_CODE"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDMT_CODE = new global::System.Data.DataColumn("DMT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMT_CODE);
                this.columnDMT_DESCRIPTION = new global::System.Data.DataColumn("DMT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMT_DESCRIPTION);
                this.columnDMT_DOMAIN = new global::System.Data.DataColumn("DMT_DOMAIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMT_DOMAIN);
                this.columnDMT_SERVICE_NAME = new global::System.Data.DataColumn("DMT_SERVICE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMT_SERVICE_NAME);
                this.columnDMT_SRC = new global::System.Data.DataColumn("DMT_SRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMT_SRC);
                this.columnDMT_FETCHER_CODE = new global::System.Data.DataColumn("DMT_FETCHER_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDMT_FETCHER_CODE);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDMT_CODE}, true));
                this.columnDMT_CODE.AllowDBNull = false;
                this.columnDMT_CODE.Unique = true;
                this.columnDMT_DESCRIPTION.AllowDBNull = false;
                this.columnDMT_DESCRIPTION.MaxLength = 50;
                this.columnDMT_DOMAIN.AllowDBNull = false;
                this.columnDMT_DOMAIN.MaxLength = 50;
                this.columnDMT_SERVICE_NAME.AllowDBNull = false;
                this.columnDMT_SERVICE_NAME.MaxLength = 50;
                this.columnDMT_SRC.MaxLength = 2000;
                this.columnDMT_FETCHER_CODE.AllowDBNull = false;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DOMAIN_TYPE_ENUMRow NewT_DOMAIN_TYPE_ENUMRow() {
                return ((T_DOMAIN_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_DOMAIN_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_DOMAIN_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_DOMAIN_TYPE_ENUMRowChanged != null)) {
                    this.T_DOMAIN_TYPE_ENUMRowChanged(this, new T_DOMAIN_TYPE_ENUMRowChangeEvent(((T_DOMAIN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_DOMAIN_TYPE_ENUMRowChanging != null)) {
                    this.T_DOMAIN_TYPE_ENUMRowChanging(this, new T_DOMAIN_TYPE_ENUMRowChangeEvent(((T_DOMAIN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_DOMAIN_TYPE_ENUMRowDeleted != null)) {
                    this.T_DOMAIN_TYPE_ENUMRowDeleted(this, new T_DOMAIN_TYPE_ENUMRowChangeEvent(((T_DOMAIN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_DOMAIN_TYPE_ENUMRowDeleting != null)) {
                    this.T_DOMAIN_TYPE_ENUMRowDeleting(this, new T_DOMAIN_TYPE_ENUMRowChangeEvent(((T_DOMAIN_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_DOMAIN_TYPE_ENUMRow(T_DOMAIN_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_DOMAIN_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_CONTACT_FETCHER_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCFT_CODE;
            
            private global::System.Data.DataColumn columnCFT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTACT_FETCHER_TYPE_ENUMDataTable() {
                this.TableName = "T_CONTACT_FETCHER_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CONTACT_FETCHER_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_CONTACT_FETCHER_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CFT_CODEColumn {
                get {
                    return this.columnCFT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CFT_DESCRIPTIONColumn {
                get {
                    return this.columnCFT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTACT_FETCHER_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_CONTACT_FETCHER_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_CONTACT_FETCHER_TYPE_ENUMRowChangeEventHandler T_CONTACT_FETCHER_TYPE_ENUMRowChanging;
            
            public event T_CONTACT_FETCHER_TYPE_ENUMRowChangeEventHandler T_CONTACT_FETCHER_TYPE_ENUMRowChanged;
            
            public event T_CONTACT_FETCHER_TYPE_ENUMRowChangeEventHandler T_CONTACT_FETCHER_TYPE_ENUMRowDeleting;
            
            public event T_CONTACT_FETCHER_TYPE_ENUMRowChangeEventHandler T_CONTACT_FETCHER_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_CONTACT_FETCHER_TYPE_ENUMRow(T_CONTACT_FETCHER_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTACT_FETCHER_TYPE_ENUMRow AddT_CONTACT_FETCHER_TYPE_ENUMRow(int CFT_CODE, string CFT_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_CONTACT_FETCHER_TYPE_ENUMRow rowT_CONTACT_FETCHER_TYPE_ENUMRow = ((T_CONTACT_FETCHER_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CFT_CODE,
                        CFT_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_CONTACT_FETCHER_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_CONTACT_FETCHER_TYPE_ENUMRow);
                return rowT_CONTACT_FETCHER_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTACT_FETCHER_TYPE_ENUMRow FindByCFT_CODE(int CFT_CODE) {
                return ((T_CONTACT_FETCHER_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            CFT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_CONTACT_FETCHER_TYPE_ENUMDataTable cln = ((T_CONTACT_FETCHER_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_CONTACT_FETCHER_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCFT_CODE = base.Columns["CFT_CODE"];
                this.columnCFT_DESCRIPTION = base.Columns["CFT_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCFT_CODE = new global::System.Data.DataColumn("CFT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCFT_CODE);
                this.columnCFT_DESCRIPTION = new global::System.Data.DataColumn("CFT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCFT_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCFT_CODE}, true));
                this.columnCFT_CODE.AllowDBNull = false;
                this.columnCFT_CODE.Unique = true;
                this.columnCFT_DESCRIPTION.AllowDBNull = false;
                this.columnCFT_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTACT_FETCHER_TYPE_ENUMRow NewT_CONTACT_FETCHER_TYPE_ENUMRow() {
                return ((T_CONTACT_FETCHER_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_CONTACT_FETCHER_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_CONTACT_FETCHER_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_CONTACT_FETCHER_TYPE_ENUMRowChanged != null)) {
                    this.T_CONTACT_FETCHER_TYPE_ENUMRowChanged(this, new T_CONTACT_FETCHER_TYPE_ENUMRowChangeEvent(((T_CONTACT_FETCHER_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_CONTACT_FETCHER_TYPE_ENUMRowChanging != null)) {
                    this.T_CONTACT_FETCHER_TYPE_ENUMRowChanging(this, new T_CONTACT_FETCHER_TYPE_ENUMRowChangeEvent(((T_CONTACT_FETCHER_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_CONTACT_FETCHER_TYPE_ENUMRowDeleted != null)) {
                    this.T_CONTACT_FETCHER_TYPE_ENUMRowDeleted(this, new T_CONTACT_FETCHER_TYPE_ENUMRowChangeEvent(((T_CONTACT_FETCHER_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_CONTACT_FETCHER_TYPE_ENUMRowDeleting != null)) {
                    this.T_CONTACT_FETCHER_TYPE_ENUMRowDeleting(this, new T_CONTACT_FETCHER_TYPE_ENUMRowChangeEvent(((T_CONTACT_FETCHER_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_CONTACT_FETCHER_TYPE_ENUMRow(T_CONTACT_FETCHER_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_CONTACT_FETCHER_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_EDUCATION_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEDU_CODE;
            
            private global::System.Data.DataColumn columnEDU_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EDUCATION_TYPEDataTable() {
                this.TableName = "T_PROP_EDUCATION_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_EDUCATION_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_EDUCATION_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EDU_CODEColumn {
                get {
                    return this.columnEDU_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EDU_DESCRIPTIONColumn {
                get {
                    return this.columnEDU_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EDUCATION_TYPERow this[int index] {
                get {
                    return ((T_PROP_EDUCATION_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_EDUCATION_TYPERowChangeEventHandler T_PROP_EDUCATION_TYPERowChanging;
            
            public event T_PROP_EDUCATION_TYPERowChangeEventHandler T_PROP_EDUCATION_TYPERowChanged;
            
            public event T_PROP_EDUCATION_TYPERowChangeEventHandler T_PROP_EDUCATION_TYPERowDeleting;
            
            public event T_PROP_EDUCATION_TYPERowChangeEventHandler T_PROP_EDUCATION_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_EDUCATION_TYPERow(T_PROP_EDUCATION_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EDUCATION_TYPERow AddT_PROP_EDUCATION_TYPERow(int EDU_CODE, string EDU_DESCRIPTION) {
                T_PROP_EDUCATION_TYPERow rowT_PROP_EDUCATION_TYPERow = ((T_PROP_EDUCATION_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EDU_CODE,
                        EDU_DESCRIPTION};
                rowT_PROP_EDUCATION_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_EDUCATION_TYPERow);
                return rowT_PROP_EDUCATION_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EDUCATION_TYPERow FindByEDU_CODE(int EDU_CODE) {
                return ((T_PROP_EDUCATION_TYPERow)(this.Rows.Find(new object[] {
                            EDU_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_EDUCATION_TYPEDataTable cln = ((T_PROP_EDUCATION_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_EDUCATION_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEDU_CODE = base.Columns["EDU_CODE"];
                this.columnEDU_DESCRIPTION = base.Columns["EDU_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEDU_CODE = new global::System.Data.DataColumn("EDU_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDU_CODE);
                this.columnEDU_DESCRIPTION = new global::System.Data.DataColumn("EDU_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDU_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEDU_CODE}, true));
                this.columnEDU_CODE.AllowDBNull = false;
                this.columnEDU_CODE.Unique = true;
                this.columnEDU_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EDUCATION_TYPERow NewT_PROP_EDUCATION_TYPERow() {
                return ((T_PROP_EDUCATION_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_EDUCATION_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_EDUCATION_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_EDUCATION_TYPERowChanged != null)) {
                    this.T_PROP_EDUCATION_TYPERowChanged(this, new T_PROP_EDUCATION_TYPERowChangeEvent(((T_PROP_EDUCATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_EDUCATION_TYPERowChanging != null)) {
                    this.T_PROP_EDUCATION_TYPERowChanging(this, new T_PROP_EDUCATION_TYPERowChangeEvent(((T_PROP_EDUCATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_EDUCATION_TYPERowDeleted != null)) {
                    this.T_PROP_EDUCATION_TYPERowDeleted(this, new T_PROP_EDUCATION_TYPERowChangeEvent(((T_PROP_EDUCATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_EDUCATION_TYPERowDeleting != null)) {
                    this.T_PROP_EDUCATION_TYPERowDeleting(this, new T_PROP_EDUCATION_TYPERowChangeEvent(((T_PROP_EDUCATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_EDUCATION_TYPERow(T_PROP_EDUCATION_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_EDUCATION_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_INTERESTS_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnINT_CODE;
            
            private global::System.Data.DataColumn columnINT_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_INTERESTS_TYPEDataTable() {
                this.TableName = "T_PROP_INTERESTS_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_INTERESTS_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_INTERESTS_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INT_CODEColumn {
                get {
                    return this.columnINT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INT_DESCRIPTIONColumn {
                get {
                    return this.columnINT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_INTERESTS_TYPERow this[int index] {
                get {
                    return ((T_PROP_INTERESTS_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_INTERESTS_TYPERowChangeEventHandler T_PROP_INTERESTS_TYPERowChanging;
            
            public event T_PROP_INTERESTS_TYPERowChangeEventHandler T_PROP_INTERESTS_TYPERowChanged;
            
            public event T_PROP_INTERESTS_TYPERowChangeEventHandler T_PROP_INTERESTS_TYPERowDeleting;
            
            public event T_PROP_INTERESTS_TYPERowChangeEventHandler T_PROP_INTERESTS_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_INTERESTS_TYPERow(T_PROP_INTERESTS_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_INTERESTS_TYPERow AddT_PROP_INTERESTS_TYPERow(int INT_CODE, string INT_DESCRIPTION) {
                T_PROP_INTERESTS_TYPERow rowT_PROP_INTERESTS_TYPERow = ((T_PROP_INTERESTS_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INT_CODE,
                        INT_DESCRIPTION};
                rowT_PROP_INTERESTS_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_INTERESTS_TYPERow);
                return rowT_PROP_INTERESTS_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_INTERESTS_TYPERow FindByINT_CODE(int INT_CODE) {
                return ((T_PROP_INTERESTS_TYPERow)(this.Rows.Find(new object[] {
                            INT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_INTERESTS_TYPEDataTable cln = ((T_PROP_INTERESTS_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_INTERESTS_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnINT_CODE = base.Columns["INT_CODE"];
                this.columnINT_DESCRIPTION = base.Columns["INT_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnINT_CODE = new global::System.Data.DataColumn("INT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_CODE);
                this.columnINT_DESCRIPTION = new global::System.Data.DataColumn("INT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINT_CODE}, true));
                this.columnINT_CODE.AllowDBNull = false;
                this.columnINT_CODE.Unique = true;
                this.columnINT_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_INTERESTS_TYPERow NewT_PROP_INTERESTS_TYPERow() {
                return ((T_PROP_INTERESTS_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_INTERESTS_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_INTERESTS_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_INTERESTS_TYPERowChanged != null)) {
                    this.T_PROP_INTERESTS_TYPERowChanged(this, new T_PROP_INTERESTS_TYPERowChangeEvent(((T_PROP_INTERESTS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_INTERESTS_TYPERowChanging != null)) {
                    this.T_PROP_INTERESTS_TYPERowChanging(this, new T_PROP_INTERESTS_TYPERowChangeEvent(((T_PROP_INTERESTS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_INTERESTS_TYPERowDeleted != null)) {
                    this.T_PROP_INTERESTS_TYPERowDeleted(this, new T_PROP_INTERESTS_TYPERowChangeEvent(((T_PROP_INTERESTS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_INTERESTS_TYPERowDeleting != null)) {
                    this.T_PROP_INTERESTS_TYPERowDeleting(this, new T_PROP_INTERESTS_TYPERowChangeEvent(((T_PROP_INTERESTS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_INTERESTS_TYPERow(T_PROP_INTERESTS_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_INTERESTS_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_OCCUPATION_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOCU_CODE;
            
            private global::System.Data.DataColumn columnOCU_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_OCCUPATION_TYPEDataTable() {
                this.TableName = "T_PROP_OCCUPATION_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_OCCUPATION_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_OCCUPATION_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OCU_CODEColumn {
                get {
                    return this.columnOCU_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OCU_DESCRIPTIONColumn {
                get {
                    return this.columnOCU_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_OCCUPATION_TYPERow this[int index] {
                get {
                    return ((T_PROP_OCCUPATION_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_OCCUPATION_TYPERowChangeEventHandler T_PROP_OCCUPATION_TYPERowChanging;
            
            public event T_PROP_OCCUPATION_TYPERowChangeEventHandler T_PROP_OCCUPATION_TYPERowChanged;
            
            public event T_PROP_OCCUPATION_TYPERowChangeEventHandler T_PROP_OCCUPATION_TYPERowDeleting;
            
            public event T_PROP_OCCUPATION_TYPERowChangeEventHandler T_PROP_OCCUPATION_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_OCCUPATION_TYPERow(T_PROP_OCCUPATION_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_OCCUPATION_TYPERow AddT_PROP_OCCUPATION_TYPERow(int OCU_CODE, string OCU_DESCRIPTION) {
                T_PROP_OCCUPATION_TYPERow rowT_PROP_OCCUPATION_TYPERow = ((T_PROP_OCCUPATION_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OCU_CODE,
                        OCU_DESCRIPTION};
                rowT_PROP_OCCUPATION_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_OCCUPATION_TYPERow);
                return rowT_PROP_OCCUPATION_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_OCCUPATION_TYPERow FindByOCU_CODE(int OCU_CODE) {
                return ((T_PROP_OCCUPATION_TYPERow)(this.Rows.Find(new object[] {
                            OCU_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_OCCUPATION_TYPEDataTable cln = ((T_PROP_OCCUPATION_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_OCCUPATION_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOCU_CODE = base.Columns["OCU_CODE"];
                this.columnOCU_DESCRIPTION = base.Columns["OCU_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOCU_CODE = new global::System.Data.DataColumn("OCU_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOCU_CODE);
                this.columnOCU_DESCRIPTION = new global::System.Data.DataColumn("OCU_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOCU_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOCU_CODE}, true));
                this.columnOCU_CODE.AllowDBNull = false;
                this.columnOCU_CODE.Unique = true;
                this.columnOCU_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_OCCUPATION_TYPERow NewT_PROP_OCCUPATION_TYPERow() {
                return ((T_PROP_OCCUPATION_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_OCCUPATION_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_OCCUPATION_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_OCCUPATION_TYPERowChanged != null)) {
                    this.T_PROP_OCCUPATION_TYPERowChanged(this, new T_PROP_OCCUPATION_TYPERowChangeEvent(((T_PROP_OCCUPATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_OCCUPATION_TYPERowChanging != null)) {
                    this.T_PROP_OCCUPATION_TYPERowChanging(this, new T_PROP_OCCUPATION_TYPERowChangeEvent(((T_PROP_OCCUPATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_OCCUPATION_TYPERowDeleted != null)) {
                    this.T_PROP_OCCUPATION_TYPERowDeleted(this, new T_PROP_OCCUPATION_TYPERowChangeEvent(((T_PROP_OCCUPATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_OCCUPATION_TYPERowDeleting != null)) {
                    this.T_PROP_OCCUPATION_TYPERowDeleting(this, new T_PROP_OCCUPATION_TYPERowChangeEvent(((T_PROP_OCCUPATION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_OCCUPATION_TYPERow(T_PROP_OCCUPATION_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_OCCUPATION_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_RACE_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRCE_CODE;
            
            private global::System.Data.DataColumn columnRCE_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RACE_TYPEDataTable() {
                this.TableName = "T_PROP_RACE_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_RACE_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_RACE_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCE_CODEColumn {
                get {
                    return this.columnRCE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCE_DESCRIPTIONColumn {
                get {
                    return this.columnRCE_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RACE_TYPERow this[int index] {
                get {
                    return ((T_PROP_RACE_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_RACE_TYPERowChangeEventHandler T_PROP_RACE_TYPERowChanging;
            
            public event T_PROP_RACE_TYPERowChangeEventHandler T_PROP_RACE_TYPERowChanged;
            
            public event T_PROP_RACE_TYPERowChangeEventHandler T_PROP_RACE_TYPERowDeleting;
            
            public event T_PROP_RACE_TYPERowChangeEventHandler T_PROP_RACE_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_RACE_TYPERow(T_PROP_RACE_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RACE_TYPERow AddT_PROP_RACE_TYPERow(int RCE_CODE, string RCE_DESCRIPTION) {
                T_PROP_RACE_TYPERow rowT_PROP_RACE_TYPERow = ((T_PROP_RACE_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RCE_CODE,
                        RCE_DESCRIPTION};
                rowT_PROP_RACE_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_RACE_TYPERow);
                return rowT_PROP_RACE_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RACE_TYPERow FindByRCE_CODE(int RCE_CODE) {
                return ((T_PROP_RACE_TYPERow)(this.Rows.Find(new object[] {
                            RCE_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_RACE_TYPEDataTable cln = ((T_PROP_RACE_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_RACE_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRCE_CODE = base.Columns["RCE_CODE"];
                this.columnRCE_DESCRIPTION = base.Columns["RCE_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRCE_CODE = new global::System.Data.DataColumn("RCE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCE_CODE);
                this.columnRCE_DESCRIPTION = new global::System.Data.DataColumn("RCE_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCE_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRCE_CODE}, true));
                this.columnRCE_CODE.AllowDBNull = false;
                this.columnRCE_CODE.Unique = true;
                this.columnRCE_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RACE_TYPERow NewT_PROP_RACE_TYPERow() {
                return ((T_PROP_RACE_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_RACE_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_RACE_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_RACE_TYPERowChanged != null)) {
                    this.T_PROP_RACE_TYPERowChanged(this, new T_PROP_RACE_TYPERowChangeEvent(((T_PROP_RACE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_RACE_TYPERowChanging != null)) {
                    this.T_PROP_RACE_TYPERowChanging(this, new T_PROP_RACE_TYPERowChangeEvent(((T_PROP_RACE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_RACE_TYPERowDeleted != null)) {
                    this.T_PROP_RACE_TYPERowDeleted(this, new T_PROP_RACE_TYPERowChangeEvent(((T_PROP_RACE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_RACE_TYPERowDeleting != null)) {
                    this.T_PROP_RACE_TYPERowDeleting(this, new T_PROP_RACE_TYPERowChangeEvent(((T_PROP_RACE_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_RACE_TYPERow(T_PROP_RACE_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_RACE_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_RELIGION_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRLG_CODE;
            
            private global::System.Data.DataColumn columnRLG_DESCRIPTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELIGION_TYPEDataTable() {
                this.TableName = "T_PROP_RELIGION_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_RELIGION_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_RELIGION_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RLG_CODEColumn {
                get {
                    return this.columnRLG_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RLG_DESCRIPTIONColumn {
                get {
                    return this.columnRLG_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELIGION_TYPERow this[int index] {
                get {
                    return ((T_PROP_RELIGION_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_RELIGION_TYPERowChangeEventHandler T_PROP_RELIGION_TYPERowChanging;
            
            public event T_PROP_RELIGION_TYPERowChangeEventHandler T_PROP_RELIGION_TYPERowChanged;
            
            public event T_PROP_RELIGION_TYPERowChangeEventHandler T_PROP_RELIGION_TYPERowDeleting;
            
            public event T_PROP_RELIGION_TYPERowChangeEventHandler T_PROP_RELIGION_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_RELIGION_TYPERow(T_PROP_RELIGION_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELIGION_TYPERow AddT_PROP_RELIGION_TYPERow(int RLG_CODE, string RLG_DESCRIPTION) {
                T_PROP_RELIGION_TYPERow rowT_PROP_RELIGION_TYPERow = ((T_PROP_RELIGION_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RLG_CODE,
                        RLG_DESCRIPTION};
                rowT_PROP_RELIGION_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_RELIGION_TYPERow);
                return rowT_PROP_RELIGION_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELIGION_TYPERow FindByRLG_CODE(int RLG_CODE) {
                return ((T_PROP_RELIGION_TYPERow)(this.Rows.Find(new object[] {
                            RLG_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_RELIGION_TYPEDataTable cln = ((T_PROP_RELIGION_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_RELIGION_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRLG_CODE = base.Columns["RLG_CODE"];
                this.columnRLG_DESCRIPTION = base.Columns["RLG_DESCRIPTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRLG_CODE = new global::System.Data.DataColumn("RLG_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRLG_CODE);
                this.columnRLG_DESCRIPTION = new global::System.Data.DataColumn("RLG_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRLG_DESCRIPTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRLG_CODE}, true));
                this.columnRLG_CODE.AllowDBNull = false;
                this.columnRLG_CODE.Unique = true;
                this.columnRLG_DESCRIPTION.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELIGION_TYPERow NewT_PROP_RELIGION_TYPERow() {
                return ((T_PROP_RELIGION_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_RELIGION_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_RELIGION_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_RELIGION_TYPERowChanged != null)) {
                    this.T_PROP_RELIGION_TYPERowChanged(this, new T_PROP_RELIGION_TYPERowChangeEvent(((T_PROP_RELIGION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_RELIGION_TYPERowChanging != null)) {
                    this.T_PROP_RELIGION_TYPERowChanging(this, new T_PROP_RELIGION_TYPERowChangeEvent(((T_PROP_RELIGION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_RELIGION_TYPERowDeleted != null)) {
                    this.T_PROP_RELIGION_TYPERowDeleted(this, new T_PROP_RELIGION_TYPERowChangeEvent(((T_PROP_RELIGION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_RELIGION_TYPERowDeleting != null)) {
                    this.T_PROP_RELIGION_TYPERowDeleting(this, new T_PROP_RELIGION_TYPERowChangeEvent(((T_PROP_RELIGION_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_RELIGION_TYPERow(T_PROP_RELIGION_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_RELIGION_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_LINK_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLKT_CODE;
            
            private global::System.Data.DataColumn columnLKT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnLKT_TEXT;
            
            private global::System.Data.DataColumn columnLKT_SRC;
            
            private global::System.Data.DataColumn columnLKT_LINK_ACTION_TYPE_1;
            
            private global::System.Data.DataColumn columnLKT_LINK_ACTION_TYPE_2;
            
            private global::System.Data.DataColumn columnLKT_SMAP_PARAMETER_VISIBLE;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_TYPE_ENUMDataTable() {
                this.TableName = "T_LINK_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LINK_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_LINK_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LKT_CODEColumn {
                get {
                    return this.columnLKT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LKT_DESCRIPTIONColumn {
                get {
                    return this.columnLKT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LKT_TEXTColumn {
                get {
                    return this.columnLKT_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LKT_SRCColumn {
                get {
                    return this.columnLKT_SRC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LKT_LINK_ACTION_TYPE_1Column {
                get {
                    return this.columnLKT_LINK_ACTION_TYPE_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LKT_LINK_ACTION_TYPE_2Column {
                get {
                    return this.columnLKT_LINK_ACTION_TYPE_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LKT_SMAP_PARAMETER_VISIBLEColumn {
                get {
                    return this.columnLKT_SMAP_PARAMETER_VISIBLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_LINK_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_LINK_TYPE_ENUMRowChangeEventHandler T_LINK_TYPE_ENUMRowChanging;
            
            public event T_LINK_TYPE_ENUMRowChangeEventHandler T_LINK_TYPE_ENUMRowChanged;
            
            public event T_LINK_TYPE_ENUMRowChangeEventHandler T_LINK_TYPE_ENUMRowDeleting;
            
            public event T_LINK_TYPE_ENUMRowChangeEventHandler T_LINK_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_LINK_TYPE_ENUMRow(T_LINK_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_TYPE_ENUMRow AddT_LINK_TYPE_ENUMRow(int LKT_CODE, string LKT_DESCRIPTION, string LKT_TEXT, string LKT_SRC, int LKT_LINK_ACTION_TYPE_1, int LKT_LINK_ACTION_TYPE_2, bool LKT_SMAP_PARAMETER_VISIBLE, int ValueCode, string ValueNameEnum, string ValueName) {
                T_LINK_TYPE_ENUMRow rowT_LINK_TYPE_ENUMRow = ((T_LINK_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LKT_CODE,
                        LKT_DESCRIPTION,
                        LKT_TEXT,
                        LKT_SRC,
                        LKT_LINK_ACTION_TYPE_1,
                        LKT_LINK_ACTION_TYPE_2,
                        LKT_SMAP_PARAMETER_VISIBLE,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_LINK_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_LINK_TYPE_ENUMRow);
                return rowT_LINK_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_TYPE_ENUMRow FindByLKT_CODE(int LKT_CODE) {
                return ((T_LINK_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            LKT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_LINK_TYPE_ENUMDataTable cln = ((T_LINK_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_LINK_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLKT_CODE = base.Columns["LKT_CODE"];
                this.columnLKT_DESCRIPTION = base.Columns["LKT_DESCRIPTION"];
                this.columnLKT_TEXT = base.Columns["LKT_TEXT"];
                this.columnLKT_SRC = base.Columns["LKT_SRC"];
                this.columnLKT_LINK_ACTION_TYPE_1 = base.Columns["LKT_LINK_ACTION_TYPE_1"];
                this.columnLKT_LINK_ACTION_TYPE_2 = base.Columns["LKT_LINK_ACTION_TYPE_2"];
                this.columnLKT_SMAP_PARAMETER_VISIBLE = base.Columns["LKT_SMAP_PARAMETER_VISIBLE"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLKT_CODE = new global::System.Data.DataColumn("LKT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLKT_CODE);
                this.columnLKT_DESCRIPTION = new global::System.Data.DataColumn("LKT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLKT_DESCRIPTION);
                this.columnLKT_TEXT = new global::System.Data.DataColumn("LKT_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLKT_TEXT);
                this.columnLKT_SRC = new global::System.Data.DataColumn("LKT_SRC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLKT_SRC);
                this.columnLKT_LINK_ACTION_TYPE_1 = new global::System.Data.DataColumn("LKT_LINK_ACTION_TYPE_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLKT_LINK_ACTION_TYPE_1);
                this.columnLKT_LINK_ACTION_TYPE_2 = new global::System.Data.DataColumn("LKT_LINK_ACTION_TYPE_2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLKT_LINK_ACTION_TYPE_2);
                this.columnLKT_SMAP_PARAMETER_VISIBLE = new global::System.Data.DataColumn("LKT_SMAP_PARAMETER_VISIBLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLKT_SMAP_PARAMETER_VISIBLE);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLKT_CODE}, true));
                this.columnLKT_CODE.AllowDBNull = false;
                this.columnLKT_CODE.Unique = true;
                this.columnLKT_DESCRIPTION.MaxLength = 50;
                this.columnLKT_TEXT.MaxLength = 255;
                this.columnLKT_SRC.MaxLength = 255;
                this.columnLKT_LINK_ACTION_TYPE_2.AllowDBNull = false;
                this.columnLKT_SMAP_PARAMETER_VISIBLE.AllowDBNull = false;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_TYPE_ENUMRow NewT_LINK_TYPE_ENUMRow() {
                return ((T_LINK_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_LINK_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_LINK_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_LINK_TYPE_ENUMRowChanged != null)) {
                    this.T_LINK_TYPE_ENUMRowChanged(this, new T_LINK_TYPE_ENUMRowChangeEvent(((T_LINK_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_LINK_TYPE_ENUMRowChanging != null)) {
                    this.T_LINK_TYPE_ENUMRowChanging(this, new T_LINK_TYPE_ENUMRowChangeEvent(((T_LINK_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_LINK_TYPE_ENUMRowDeleted != null)) {
                    this.T_LINK_TYPE_ENUMRowDeleted(this, new T_LINK_TYPE_ENUMRowChangeEvent(((T_LINK_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_LINK_TYPE_ENUMRowDeleting != null)) {
                    this.T_LINK_TYPE_ENUMRowDeleting(this, new T_LINK_TYPE_ENUMRowChangeEvent(((T_LINK_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_LINK_TYPE_ENUMRow(T_LINK_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_LINK_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_SERIALIZERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSRL_DESCRIPTION;
            
            private global::System.Data.DataColumn columnSRL_KEY_1;
            
            private global::System.Data.DataColumn columnSRL_KEY_2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERDataTable() {
                this.TableName = "T_SERIALIZER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SERIALIZERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_SERIALIZERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SRL_DESCRIPTIONColumn {
                get {
                    return this.columnSRL_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SRL_KEY_1Column {
                get {
                    return this.columnSRL_KEY_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SRL_KEY_2Column {
                get {
                    return this.columnSRL_KEY_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow this[int index] {
                get {
                    return ((T_SERIALIZERRow)(this.Rows[index]));
                }
            }
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowChanging;
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowChanged;
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowDeleting;
            
            public event T_SERIALIZERRowChangeEventHandler T_SERIALIZERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_SERIALIZERRow(T_SERIALIZERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow AddT_SERIALIZERRow(string SRL_DESCRIPTION, string SRL_KEY_1, string SRL_KEY_2) {
                T_SERIALIZERRow rowT_SERIALIZERRow = ((T_SERIALIZERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SRL_DESCRIPTION,
                        SRL_KEY_1,
                        SRL_KEY_2};
                rowT_SERIALIZERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_SERIALIZERRow);
                return rowT_SERIALIZERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow FindBySRL_DESCRIPTION(string SRL_DESCRIPTION) {
                return ((T_SERIALIZERRow)(this.Rows.Find(new object[] {
                            SRL_DESCRIPTION})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_SERIALIZERDataTable cln = ((T_SERIALIZERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_SERIALIZERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSRL_DESCRIPTION = base.Columns["SRL_DESCRIPTION"];
                this.columnSRL_KEY_1 = base.Columns["SRL_KEY_1"];
                this.columnSRL_KEY_2 = base.Columns["SRL_KEY_2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSRL_DESCRIPTION = new global::System.Data.DataColumn("SRL_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRL_DESCRIPTION);
                this.columnSRL_KEY_1 = new global::System.Data.DataColumn("SRL_KEY_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRL_KEY_1);
                this.columnSRL_KEY_2 = new global::System.Data.DataColumn("SRL_KEY_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSRL_KEY_2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSRL_DESCRIPTION}, true));
                this.columnSRL_DESCRIPTION.AllowDBNull = false;
                this.columnSRL_DESCRIPTION.Unique = true;
                this.columnSRL_DESCRIPTION.MaxLength = 255;
                this.columnSRL_KEY_1.MaxLength = 5;
                this.columnSRL_KEY_2.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow NewT_SERIALIZERRow() {
                return ((T_SERIALIZERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_SERIALIZERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_SERIALIZERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_SERIALIZERRowChanged != null)) {
                    this.T_SERIALIZERRowChanged(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_SERIALIZERRowChanging != null)) {
                    this.T_SERIALIZERRowChanging(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_SERIALIZERRowDeleted != null)) {
                    this.T_SERIALIZERRowDeleted(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_SERIALIZERRowDeleting != null)) {
                    this.T_SERIALIZERRowDeleting(this, new T_SERIALIZERRowChangeEvent(((T_SERIALIZERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_SERIALIZERRow(T_SERIALIZERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_SERIALIZERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_LINK_ACTION_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLAT_CODE;
            
            private global::System.Data.DataColumn columnLAT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnLAT_SOURCE_LINK_TYPE;
            
            private global::System.Data.DataColumn columnLAT_NAME;
            
            private global::System.Data.DataColumn columnLAT_TEXT;
            
            private global::System.Data.DataColumn columnLAT_TARGET_LINK_TYPE;
            
            private global::System.Data.DataColumn columnLAT_BUTTON_SIZE_CODE;
            
            private global::System.Data.DataColumn columnLAT_RMN_TYPE;
            
            private global::System.Data.DataColumn columnLAT_EMAIL_BOX_TYPE;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_ACTION_TYPE_ENUMDataTable() {
                this.TableName = "T_LINK_ACTION_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LINK_ACTION_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_LINK_ACTION_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_CODEColumn {
                get {
                    return this.columnLAT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_DESCRIPTIONColumn {
                get {
                    return this.columnLAT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_SOURCE_LINK_TYPEColumn {
                get {
                    return this.columnLAT_SOURCE_LINK_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_NAMEColumn {
                get {
                    return this.columnLAT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_TEXTColumn {
                get {
                    return this.columnLAT_TEXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_TARGET_LINK_TYPEColumn {
                get {
                    return this.columnLAT_TARGET_LINK_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_BUTTON_SIZE_CODEColumn {
                get {
                    return this.columnLAT_BUTTON_SIZE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_RMN_TYPEColumn {
                get {
                    return this.columnLAT_RMN_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAT_EMAIL_BOX_TYPEColumn {
                get {
                    return this.columnLAT_EMAIL_BOX_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_ACTION_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_LINK_ACTION_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_LINK_ACTION_TYPE_ENUMRowChangeEventHandler T_LINK_ACTION_TYPE_ENUMRowChanging;
            
            public event T_LINK_ACTION_TYPE_ENUMRowChangeEventHandler T_LINK_ACTION_TYPE_ENUMRowChanged;
            
            public event T_LINK_ACTION_TYPE_ENUMRowChangeEventHandler T_LINK_ACTION_TYPE_ENUMRowDeleting;
            
            public event T_LINK_ACTION_TYPE_ENUMRowChangeEventHandler T_LINK_ACTION_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_LINK_ACTION_TYPE_ENUMRow(T_LINK_ACTION_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_ACTION_TYPE_ENUMRow AddT_LINK_ACTION_TYPE_ENUMRow(int LAT_CODE, string LAT_DESCRIPTION, int LAT_SOURCE_LINK_TYPE, string LAT_NAME, string LAT_TEXT, int LAT_TARGET_LINK_TYPE, int LAT_BUTTON_SIZE_CODE, int LAT_RMN_TYPE, int LAT_EMAIL_BOX_TYPE, int ValueCode, string ValueNameEnum, string ValueName) {
                T_LINK_ACTION_TYPE_ENUMRow rowT_LINK_ACTION_TYPE_ENUMRow = ((T_LINK_ACTION_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LAT_CODE,
                        LAT_DESCRIPTION,
                        LAT_SOURCE_LINK_TYPE,
                        LAT_NAME,
                        LAT_TEXT,
                        LAT_TARGET_LINK_TYPE,
                        LAT_BUTTON_SIZE_CODE,
                        LAT_RMN_TYPE,
                        LAT_EMAIL_BOX_TYPE,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_LINK_ACTION_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_LINK_ACTION_TYPE_ENUMRow);
                return rowT_LINK_ACTION_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_ACTION_TYPE_ENUMRow FindByLAT_CODE(int LAT_CODE) {
                return ((T_LINK_ACTION_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            LAT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_LINK_ACTION_TYPE_ENUMDataTable cln = ((T_LINK_ACTION_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_LINK_ACTION_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLAT_CODE = base.Columns["LAT_CODE"];
                this.columnLAT_DESCRIPTION = base.Columns["LAT_DESCRIPTION"];
                this.columnLAT_SOURCE_LINK_TYPE = base.Columns["LAT_SOURCE_LINK_TYPE"];
                this.columnLAT_NAME = base.Columns["LAT_NAME"];
                this.columnLAT_TEXT = base.Columns["LAT_TEXT"];
                this.columnLAT_TARGET_LINK_TYPE = base.Columns["LAT_TARGET_LINK_TYPE"];
                this.columnLAT_BUTTON_SIZE_CODE = base.Columns["LAT_BUTTON_SIZE_CODE"];
                this.columnLAT_RMN_TYPE = base.Columns["LAT_RMN_TYPE"];
                this.columnLAT_EMAIL_BOX_TYPE = base.Columns["LAT_EMAIL_BOX_TYPE"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLAT_CODE = new global::System.Data.DataColumn("LAT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_CODE);
                this.columnLAT_DESCRIPTION = new global::System.Data.DataColumn("LAT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_DESCRIPTION);
                this.columnLAT_SOURCE_LINK_TYPE = new global::System.Data.DataColumn("LAT_SOURCE_LINK_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_SOURCE_LINK_TYPE);
                this.columnLAT_NAME = new global::System.Data.DataColumn("LAT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_NAME);
                this.columnLAT_TEXT = new global::System.Data.DataColumn("LAT_TEXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_TEXT);
                this.columnLAT_TARGET_LINK_TYPE = new global::System.Data.DataColumn("LAT_TARGET_LINK_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_TARGET_LINK_TYPE);
                this.columnLAT_BUTTON_SIZE_CODE = new global::System.Data.DataColumn("LAT_BUTTON_SIZE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_BUTTON_SIZE_CODE);
                this.columnLAT_RMN_TYPE = new global::System.Data.DataColumn("LAT_RMN_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_RMN_TYPE);
                this.columnLAT_EMAIL_BOX_TYPE = new global::System.Data.DataColumn("LAT_EMAIL_BOX_TYPE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAT_EMAIL_BOX_TYPE);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLAT_CODE}, true));
                this.columnLAT_CODE.AllowDBNull = false;
                this.columnLAT_CODE.Unique = true;
                this.columnLAT_DESCRIPTION.AllowDBNull = false;
                this.columnLAT_DESCRIPTION.MaxLength = 50;
                this.columnLAT_NAME.MaxLength = 50;
                this.columnLAT_TEXT.MaxLength = 50;
                this.columnLAT_TARGET_LINK_TYPE.AllowDBNull = false;
                this.columnLAT_BUTTON_SIZE_CODE.AllowDBNull = false;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_ACTION_TYPE_ENUMRow NewT_LINK_ACTION_TYPE_ENUMRow() {
                return ((T_LINK_ACTION_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_LINK_ACTION_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_LINK_ACTION_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_LINK_ACTION_TYPE_ENUMRowChanged != null)) {
                    this.T_LINK_ACTION_TYPE_ENUMRowChanged(this, new T_LINK_ACTION_TYPE_ENUMRowChangeEvent(((T_LINK_ACTION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_LINK_ACTION_TYPE_ENUMRowChanging != null)) {
                    this.T_LINK_ACTION_TYPE_ENUMRowChanging(this, new T_LINK_ACTION_TYPE_ENUMRowChangeEvent(((T_LINK_ACTION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_LINK_ACTION_TYPE_ENUMRowDeleted != null)) {
                    this.T_LINK_ACTION_TYPE_ENUMRowDeleted(this, new T_LINK_ACTION_TYPE_ENUMRowChangeEvent(((T_LINK_ACTION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_LINK_ACTION_TYPE_ENUMRowDeleting != null)) {
                    this.T_LINK_ACTION_TYPE_ENUMRowDeleting(this, new T_LINK_ACTION_TYPE_ENUMRowChangeEvent(((T_LINK_ACTION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_LINK_ACTION_TYPE_ENUMRow(T_LINK_ACTION_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_LINK_ACTION_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_EMAIL_BOX_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEBT_CODE;
            
            private global::System.Data.DataColumn columnEBT_HOLD_TIME_MINUTES;
            
            private global::System.Data.DataColumn columnEBT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnEBT_SUBJECT;
            
            private global::System.Data.DataColumn columnEBT_PIC_URL;
            
            private global::System.Data.DataColumn columnEBT_CLICK_HERE_TO;
            
            private global::System.Data.DataColumn columnEBT_PATH;
            
            private global::System.Data.DataColumn columnEBT_QUERY_STRING;
            
            private global::System.Data.DataColumn columnEBT_COUNTER;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOX_TYPE_ENUMDataTable() {
                this.TableName = "T_EMAIL_BOX_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_EMAIL_BOX_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_EMAIL_BOX_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_CODEColumn {
                get {
                    return this.columnEBT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_HOLD_TIME_MINUTESColumn {
                get {
                    return this.columnEBT_HOLD_TIME_MINUTES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_DESCRIPTIONColumn {
                get {
                    return this.columnEBT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_SUBJECTColumn {
                get {
                    return this.columnEBT_SUBJECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_PIC_URLColumn {
                get {
                    return this.columnEBT_PIC_URL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_CLICK_HERE_TOColumn {
                get {
                    return this.columnEBT_CLICK_HERE_TO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_PATHColumn {
                get {
                    return this.columnEBT_PATH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_QUERY_STRINGColumn {
                get {
                    return this.columnEBT_QUERY_STRING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EBT_COUNTERColumn {
                get {
                    return this.columnEBT_COUNTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOX_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_EMAIL_BOX_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_EMAIL_BOX_TYPE_ENUMRowChangeEventHandler T_EMAIL_BOX_TYPE_ENUMRowChanging;
            
            public event T_EMAIL_BOX_TYPE_ENUMRowChangeEventHandler T_EMAIL_BOX_TYPE_ENUMRowChanged;
            
            public event T_EMAIL_BOX_TYPE_ENUMRowChangeEventHandler T_EMAIL_BOX_TYPE_ENUMRowDeleting;
            
            public event T_EMAIL_BOX_TYPE_ENUMRowChangeEventHandler T_EMAIL_BOX_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_EMAIL_BOX_TYPE_ENUMRow(T_EMAIL_BOX_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOX_TYPE_ENUMRow AddT_EMAIL_BOX_TYPE_ENUMRow(int EBT_CODE, int EBT_HOLD_TIME_MINUTES, string EBT_DESCRIPTION, string EBT_SUBJECT, string EBT_PIC_URL, string EBT_CLICK_HERE_TO, string EBT_PATH, string EBT_QUERY_STRING, int EBT_COUNTER, int ValueCode, string ValueNameEnum, string ValueName) {
                T_EMAIL_BOX_TYPE_ENUMRow rowT_EMAIL_BOX_TYPE_ENUMRow = ((T_EMAIL_BOX_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EBT_CODE,
                        EBT_HOLD_TIME_MINUTES,
                        EBT_DESCRIPTION,
                        EBT_SUBJECT,
                        EBT_PIC_URL,
                        EBT_CLICK_HERE_TO,
                        EBT_PATH,
                        EBT_QUERY_STRING,
                        EBT_COUNTER,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_EMAIL_BOX_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_EMAIL_BOX_TYPE_ENUMRow);
                return rowT_EMAIL_BOX_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOX_TYPE_ENUMRow FindByEBT_CODE(int EBT_CODE) {
                return ((T_EMAIL_BOX_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            EBT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_EMAIL_BOX_TYPE_ENUMDataTable cln = ((T_EMAIL_BOX_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_EMAIL_BOX_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEBT_CODE = base.Columns["EBT_CODE"];
                this.columnEBT_HOLD_TIME_MINUTES = base.Columns["EBT_HOLD_TIME_MINUTES"];
                this.columnEBT_DESCRIPTION = base.Columns["EBT_DESCRIPTION"];
                this.columnEBT_SUBJECT = base.Columns["EBT_SUBJECT"];
                this.columnEBT_PIC_URL = base.Columns["EBT_PIC_URL"];
                this.columnEBT_CLICK_HERE_TO = base.Columns["EBT_CLICK_HERE_TO"];
                this.columnEBT_PATH = base.Columns["EBT_PATH"];
                this.columnEBT_QUERY_STRING = base.Columns["EBT_QUERY_STRING"];
                this.columnEBT_COUNTER = base.Columns["EBT_COUNTER"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEBT_CODE = new global::System.Data.DataColumn("EBT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_CODE);
                this.columnEBT_HOLD_TIME_MINUTES = new global::System.Data.DataColumn("EBT_HOLD_TIME_MINUTES", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_HOLD_TIME_MINUTES);
                this.columnEBT_DESCRIPTION = new global::System.Data.DataColumn("EBT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_DESCRIPTION);
                this.columnEBT_SUBJECT = new global::System.Data.DataColumn("EBT_SUBJECT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_SUBJECT);
                this.columnEBT_PIC_URL = new global::System.Data.DataColumn("EBT_PIC_URL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_PIC_URL);
                this.columnEBT_CLICK_HERE_TO = new global::System.Data.DataColumn("EBT_CLICK_HERE_TO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_CLICK_HERE_TO);
                this.columnEBT_PATH = new global::System.Data.DataColumn("EBT_PATH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_PATH);
                this.columnEBT_QUERY_STRING = new global::System.Data.DataColumn("EBT_QUERY_STRING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_QUERY_STRING);
                this.columnEBT_COUNTER = new global::System.Data.DataColumn("EBT_COUNTER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEBT_COUNTER);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEBT_CODE}, true));
                this.columnEBT_CODE.AllowDBNull = false;
                this.columnEBT_CODE.Unique = true;
                this.columnEBT_HOLD_TIME_MINUTES.AllowDBNull = false;
                this.columnEBT_DESCRIPTION.AllowDBNull = false;
                this.columnEBT_DESCRIPTION.MaxLength = 50;
                this.columnEBT_SUBJECT.AllowDBNull = false;
                this.columnEBT_SUBJECT.MaxLength = 255;
                this.columnEBT_PIC_URL.AllowDBNull = false;
                this.columnEBT_PIC_URL.MaxLength = 255;
                this.columnEBT_CLICK_HERE_TO.MaxLength = 255;
                this.columnEBT_PATH.MaxLength = 2000;
                this.columnEBT_QUERY_STRING.MaxLength = 255;
                this.columnEBT_COUNTER.AllowDBNull = false;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOX_TYPE_ENUMRow NewT_EMAIL_BOX_TYPE_ENUMRow() {
                return ((T_EMAIL_BOX_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_EMAIL_BOX_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_EMAIL_BOX_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_EMAIL_BOX_TYPE_ENUMRowChanged != null)) {
                    this.T_EMAIL_BOX_TYPE_ENUMRowChanged(this, new T_EMAIL_BOX_TYPE_ENUMRowChangeEvent(((T_EMAIL_BOX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_EMAIL_BOX_TYPE_ENUMRowChanging != null)) {
                    this.T_EMAIL_BOX_TYPE_ENUMRowChanging(this, new T_EMAIL_BOX_TYPE_ENUMRowChangeEvent(((T_EMAIL_BOX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_EMAIL_BOX_TYPE_ENUMRowDeleted != null)) {
                    this.T_EMAIL_BOX_TYPE_ENUMRowDeleted(this, new T_EMAIL_BOX_TYPE_ENUMRowChangeEvent(((T_EMAIL_BOX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_EMAIL_BOX_TYPE_ENUMRowDeleting != null)) {
                    this.T_EMAIL_BOX_TYPE_ENUMRowDeleting(this, new T_EMAIL_BOX_TYPE_ENUMRowChangeEvent(((T_EMAIL_BOX_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_EMAIL_BOX_TYPE_ENUMRow(T_EMAIL_BOX_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_EMAIL_BOX_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_SETTINGDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSET_ID;
            
            private global::System.Data.DataColumn columnSET_MAX_ROWS_ON_SP_SELECT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SETTINGDataTable() {
                this.TableName = "T_SETTING";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SETTINGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_SETTINGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SET_IDColumn {
                get {
                    return this.columnSET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SET_MAX_ROWS_ON_SP_SELECTColumn {
                get {
                    return this.columnSET_MAX_ROWS_ON_SP_SELECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SETTINGRow this[int index] {
                get {
                    return ((T_SETTINGRow)(this.Rows[index]));
                }
            }
            
            public event T_SETTINGRowChangeEventHandler T_SETTINGRowChanging;
            
            public event T_SETTINGRowChangeEventHandler T_SETTINGRowChanged;
            
            public event T_SETTINGRowChangeEventHandler T_SETTINGRowDeleting;
            
            public event T_SETTINGRowChangeEventHandler T_SETTINGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_SETTINGRow(T_SETTINGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SETTINGRow AddT_SETTINGRow(int SET_MAX_ROWS_ON_SP_SELECT) {
                T_SETTINGRow rowT_SETTINGRow = ((T_SETTINGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SET_MAX_ROWS_ON_SP_SELECT};
                rowT_SETTINGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_SETTINGRow);
                return rowT_SETTINGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SETTINGRow FindBySET_ID(int SET_ID) {
                return ((T_SETTINGRow)(this.Rows.Find(new object[] {
                            SET_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_SETTINGDataTable cln = ((T_SETTINGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_SETTINGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSET_ID = base.Columns["SET_ID"];
                this.columnSET_MAX_ROWS_ON_SP_SELECT = base.Columns["SET_MAX_ROWS_ON_SP_SELECT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSET_ID = new global::System.Data.DataColumn("SET_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSET_ID);
                this.columnSET_MAX_ROWS_ON_SP_SELECT = new global::System.Data.DataColumn("SET_MAX_ROWS_ON_SP_SELECT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSET_MAX_ROWS_ON_SP_SELECT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSET_ID}, true));
                this.columnSET_ID.AutoIncrement = true;
                this.columnSET_ID.AllowDBNull = false;
                this.columnSET_ID.ReadOnly = true;
                this.columnSET_ID.Unique = true;
                this.columnSET_MAX_ROWS_ON_SP_SELECT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SETTINGRow NewT_SETTINGRow() {
                return ((T_SETTINGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_SETTINGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_SETTINGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_SETTINGRowChanged != null)) {
                    this.T_SETTINGRowChanged(this, new T_SETTINGRowChangeEvent(((T_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_SETTINGRowChanging != null)) {
                    this.T_SETTINGRowChanging(this, new T_SETTINGRowChangeEvent(((T_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_SETTINGRowDeleted != null)) {
                    this.T_SETTINGRowDeleted(this, new T_SETTINGRowChangeEvent(((T_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_SETTINGRowDeleting != null)) {
                    this.T_SETTINGRowDeleting(this, new T_SETTINGRowChangeEvent(((T_SETTINGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_SETTINGRow(T_SETTINGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_SETTINGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_ADS_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnADS_CODE;
            
            private global::System.Data.DataColumn columnADS_DESCRIPTION;
            
            private global::System.Data.DataColumn columnADS_STARTER_IMAGE;
            
            private global::System.Data.DataColumn columnADS_SPLASH_LOADER_IMAGE;
            
            private global::System.Data.DataColumn columnADS_REGISTRATION_APP_IMAGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_ADS_TYPEDataTable() {
                this.TableName = "T_ADS_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_ADS_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_ADS_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADS_CODEColumn {
                get {
                    return this.columnADS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADS_DESCRIPTIONColumn {
                get {
                    return this.columnADS_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADS_STARTER_IMAGEColumn {
                get {
                    return this.columnADS_STARTER_IMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADS_SPLASH_LOADER_IMAGEColumn {
                get {
                    return this.columnADS_SPLASH_LOADER_IMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADS_REGISTRATION_APP_IMAGEColumn {
                get {
                    return this.columnADS_REGISTRATION_APP_IMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_ADS_TYPERow this[int index] {
                get {
                    return ((T_ADS_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_ADS_TYPERowChangeEventHandler T_ADS_TYPERowChanging;
            
            public event T_ADS_TYPERowChangeEventHandler T_ADS_TYPERowChanged;
            
            public event T_ADS_TYPERowChangeEventHandler T_ADS_TYPERowDeleting;
            
            public event T_ADS_TYPERowChangeEventHandler T_ADS_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_ADS_TYPERow(T_ADS_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_ADS_TYPERow AddT_ADS_TYPERow(int ADS_CODE, string ADS_DESCRIPTION, string ADS_STARTER_IMAGE, string ADS_SPLASH_LOADER_IMAGE, string ADS_REGISTRATION_APP_IMAGE) {
                T_ADS_TYPERow rowT_ADS_TYPERow = ((T_ADS_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ADS_CODE,
                        ADS_DESCRIPTION,
                        ADS_STARTER_IMAGE,
                        ADS_SPLASH_LOADER_IMAGE,
                        ADS_REGISTRATION_APP_IMAGE};
                rowT_ADS_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_ADS_TYPERow);
                return rowT_ADS_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_ADS_TYPERow FindByADS_CODE(int ADS_CODE) {
                return ((T_ADS_TYPERow)(this.Rows.Find(new object[] {
                            ADS_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_ADS_TYPEDataTable cln = ((T_ADS_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_ADS_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnADS_CODE = base.Columns["ADS_CODE"];
                this.columnADS_DESCRIPTION = base.Columns["ADS_DESCRIPTION"];
                this.columnADS_STARTER_IMAGE = base.Columns["ADS_STARTER_IMAGE"];
                this.columnADS_SPLASH_LOADER_IMAGE = base.Columns["ADS_SPLASH_LOADER_IMAGE"];
                this.columnADS_REGISTRATION_APP_IMAGE = base.Columns["ADS_REGISTRATION_APP_IMAGE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnADS_CODE = new global::System.Data.DataColumn("ADS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADS_CODE);
                this.columnADS_DESCRIPTION = new global::System.Data.DataColumn("ADS_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADS_DESCRIPTION);
                this.columnADS_STARTER_IMAGE = new global::System.Data.DataColumn("ADS_STARTER_IMAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADS_STARTER_IMAGE);
                this.columnADS_SPLASH_LOADER_IMAGE = new global::System.Data.DataColumn("ADS_SPLASH_LOADER_IMAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADS_SPLASH_LOADER_IMAGE);
                this.columnADS_REGISTRATION_APP_IMAGE = new global::System.Data.DataColumn("ADS_REGISTRATION_APP_IMAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADS_REGISTRATION_APP_IMAGE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnADS_CODE}, true));
                this.columnADS_CODE.AllowDBNull = false;
                this.columnADS_CODE.Unique = true;
                this.columnADS_DESCRIPTION.MaxLength = 255;
                this.columnADS_STARTER_IMAGE.AllowDBNull = false;
                this.columnADS_STARTER_IMAGE.MaxLength = 255;
                this.columnADS_SPLASH_LOADER_IMAGE.AllowDBNull = false;
                this.columnADS_SPLASH_LOADER_IMAGE.MaxLength = 255;
                this.columnADS_REGISTRATION_APP_IMAGE.AllowDBNull = false;
                this.columnADS_REGISTRATION_APP_IMAGE.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_ADS_TYPERow NewT_ADS_TYPERow() {
                return ((T_ADS_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_ADS_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_ADS_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_ADS_TYPERowChanged != null)) {
                    this.T_ADS_TYPERowChanged(this, new T_ADS_TYPERowChangeEvent(((T_ADS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_ADS_TYPERowChanging != null)) {
                    this.T_ADS_TYPERowChanging(this, new T_ADS_TYPERowChangeEvent(((T_ADS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_ADS_TYPERowDeleted != null)) {
                    this.T_ADS_TYPERowDeleted(this, new T_ADS_TYPERowChangeEvent(((T_ADS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_ADS_TYPERowDeleting != null)) {
                    this.T_ADS_TYPERowDeleting(this, new T_ADS_TYPERowChangeEvent(((T_ADS_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_ADS_TYPERow(T_ADS_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_ADS_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_PROP_LOCATION_VISIBILITY_TYPEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLVS_CODE;
            
            private global::System.Data.DataColumn columnLVS_DESCRIPTION;
            
            private global::System.Data.DataColumn columnLVS_COMMENT;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LOCATION_VISIBILITY_TYPEDataTable() {
                this.TableName = "T_PROP_LOCATION_VISIBILITY_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_LOCATION_VISIBILITY_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_PROP_LOCATION_VISIBILITY_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LVS_CODEColumn {
                get {
                    return this.columnLVS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LVS_DESCRIPTIONColumn {
                get {
                    return this.columnLVS_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LVS_COMMENTColumn {
                get {
                    return this.columnLVS_COMMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LOCATION_VISIBILITY_TYPERow this[int index] {
                get {
                    return ((T_PROP_LOCATION_VISIBILITY_TYPERow)(this.Rows[index]));
                }
            }
            
            public event T_PROP_LOCATION_VISIBILITY_TYPERowChangeEventHandler T_PROP_LOCATION_VISIBILITY_TYPERowChanging;
            
            public event T_PROP_LOCATION_VISIBILITY_TYPERowChangeEventHandler T_PROP_LOCATION_VISIBILITY_TYPERowChanged;
            
            public event T_PROP_LOCATION_VISIBILITY_TYPERowChangeEventHandler T_PROP_LOCATION_VISIBILITY_TYPERowDeleting;
            
            public event T_PROP_LOCATION_VISIBILITY_TYPERowChangeEventHandler T_PROP_LOCATION_VISIBILITY_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_PROP_LOCATION_VISIBILITY_TYPERow(T_PROP_LOCATION_VISIBILITY_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LOCATION_VISIBILITY_TYPERow AddT_PROP_LOCATION_VISIBILITY_TYPERow(int LVS_CODE, string LVS_DESCRIPTION, string LVS_COMMENT, int ValueCode, string ValueNameEnum, string ValueName) {
                T_PROP_LOCATION_VISIBILITY_TYPERow rowT_PROP_LOCATION_VISIBILITY_TYPERow = ((T_PROP_LOCATION_VISIBILITY_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LVS_CODE,
                        LVS_DESCRIPTION,
                        LVS_COMMENT,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_PROP_LOCATION_VISIBILITY_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_PROP_LOCATION_VISIBILITY_TYPERow);
                return rowT_PROP_LOCATION_VISIBILITY_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LOCATION_VISIBILITY_TYPERow FindByLVS_CODE(int LVS_CODE) {
                return ((T_PROP_LOCATION_VISIBILITY_TYPERow)(this.Rows.Find(new object[] {
                            LVS_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_PROP_LOCATION_VISIBILITY_TYPEDataTable cln = ((T_PROP_LOCATION_VISIBILITY_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_PROP_LOCATION_VISIBILITY_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLVS_CODE = base.Columns["LVS_CODE"];
                this.columnLVS_DESCRIPTION = base.Columns["LVS_DESCRIPTION"];
                this.columnLVS_COMMENT = base.Columns["LVS_COMMENT"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLVS_CODE = new global::System.Data.DataColumn("LVS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLVS_CODE);
                this.columnLVS_DESCRIPTION = new global::System.Data.DataColumn("LVS_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLVS_DESCRIPTION);
                this.columnLVS_COMMENT = new global::System.Data.DataColumn("LVS_COMMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLVS_COMMENT);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLVS_CODE}, true));
                this.columnLVS_CODE.AllowDBNull = false;
                this.columnLVS_CODE.Unique = true;
                this.columnLVS_DESCRIPTION.AllowDBNull = false;
                this.columnLVS_DESCRIPTION.MaxLength = 50;
                this.columnLVS_COMMENT.AllowDBNull = false;
                this.columnLVS_COMMENT.MaxLength = 255;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LOCATION_VISIBILITY_TYPERow NewT_PROP_LOCATION_VISIBILITY_TYPERow() {
                return ((T_PROP_LOCATION_VISIBILITY_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_PROP_LOCATION_VISIBILITY_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_PROP_LOCATION_VISIBILITY_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_PROP_LOCATION_VISIBILITY_TYPERowChanged != null)) {
                    this.T_PROP_LOCATION_VISIBILITY_TYPERowChanged(this, new T_PROP_LOCATION_VISIBILITY_TYPERowChangeEvent(((T_PROP_LOCATION_VISIBILITY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_PROP_LOCATION_VISIBILITY_TYPERowChanging != null)) {
                    this.T_PROP_LOCATION_VISIBILITY_TYPERowChanging(this, new T_PROP_LOCATION_VISIBILITY_TYPERowChangeEvent(((T_PROP_LOCATION_VISIBILITY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_PROP_LOCATION_VISIBILITY_TYPERowDeleted != null)) {
                    this.T_PROP_LOCATION_VISIBILITY_TYPERowDeleted(this, new T_PROP_LOCATION_VISIBILITY_TYPERowChangeEvent(((T_PROP_LOCATION_VISIBILITY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_PROP_LOCATION_VISIBILITY_TYPERowDeleting != null)) {
                    this.T_PROP_LOCATION_VISIBILITY_TYPERowDeleting(this, new T_PROP_LOCATION_VISIBILITY_TYPERowChangeEvent(((T_PROP_LOCATION_VISIBILITY_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_PROP_LOCATION_VISIBILITY_TYPERow(T_PROP_LOCATION_VISIBILITY_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_PROP_LOCATION_VISIBILITY_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_USER_LOCATION_TYPE_ENUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnULT_CODE;
            
            private global::System.Data.DataColumn columnULT_DESCRIPTION;
            
            private global::System.Data.DataColumn columnValueCode;
            
            private global::System.Data.DataColumn columnValueNameEnum;
            
            private global::System.Data.DataColumn columnValueName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_LOCATION_TYPE_ENUMDataTable() {
                this.TableName = "T_USER_LOCATION_TYPE_ENUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_USER_LOCATION_TYPE_ENUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_USER_LOCATION_TYPE_ENUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ULT_CODEColumn {
                get {
                    return this.columnULT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ULT_DESCRIPTIONColumn {
                get {
                    return this.columnULT_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueCodeColumn {
                get {
                    return this.columnValueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameEnumColumn {
                get {
                    return this.columnValueNameEnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValueNameColumn {
                get {
                    return this.columnValueName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_LOCATION_TYPE_ENUMRow this[int index] {
                get {
                    return ((T_USER_LOCATION_TYPE_ENUMRow)(this.Rows[index]));
                }
            }
            
            public event T_USER_LOCATION_TYPE_ENUMRowChangeEventHandler T_USER_LOCATION_TYPE_ENUMRowChanging;
            
            public event T_USER_LOCATION_TYPE_ENUMRowChangeEventHandler T_USER_LOCATION_TYPE_ENUMRowChanged;
            
            public event T_USER_LOCATION_TYPE_ENUMRowChangeEventHandler T_USER_LOCATION_TYPE_ENUMRowDeleting;
            
            public event T_USER_LOCATION_TYPE_ENUMRowChangeEventHandler T_USER_LOCATION_TYPE_ENUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_USER_LOCATION_TYPE_ENUMRow(T_USER_LOCATION_TYPE_ENUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_LOCATION_TYPE_ENUMRow AddT_USER_LOCATION_TYPE_ENUMRow(int ULT_CODE, string ULT_DESCRIPTION, int ValueCode, string ValueNameEnum, string ValueName) {
                T_USER_LOCATION_TYPE_ENUMRow rowT_USER_LOCATION_TYPE_ENUMRow = ((T_USER_LOCATION_TYPE_ENUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ULT_CODE,
                        ULT_DESCRIPTION,
                        ValueCode,
                        ValueNameEnum,
                        ValueName};
                rowT_USER_LOCATION_TYPE_ENUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_USER_LOCATION_TYPE_ENUMRow);
                return rowT_USER_LOCATION_TYPE_ENUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_LOCATION_TYPE_ENUMRow FindByULT_CODE(int ULT_CODE) {
                return ((T_USER_LOCATION_TYPE_ENUMRow)(this.Rows.Find(new object[] {
                            ULT_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_USER_LOCATION_TYPE_ENUMDataTable cln = ((T_USER_LOCATION_TYPE_ENUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_USER_LOCATION_TYPE_ENUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnULT_CODE = base.Columns["ULT_CODE"];
                this.columnULT_DESCRIPTION = base.Columns["ULT_DESCRIPTION"];
                this.columnValueCode = base.Columns["ValueCode"];
                this.columnValueNameEnum = base.Columns["ValueNameEnum"];
                this.columnValueName = base.Columns["ValueName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnULT_CODE = new global::System.Data.DataColumn("ULT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnULT_CODE);
                this.columnULT_DESCRIPTION = new global::System.Data.DataColumn("ULT_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnULT_DESCRIPTION);
                this.columnValueCode = new global::System.Data.DataColumn("ValueCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueCode);
                this.columnValueNameEnum = new global::System.Data.DataColumn("ValueNameEnum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueNameEnum);
                this.columnValueName = new global::System.Data.DataColumn("ValueName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnULT_CODE}, true));
                this.columnULT_CODE.AllowDBNull = false;
                this.columnULT_CODE.Unique = true;
                this.columnULT_DESCRIPTION.AllowDBNull = false;
                this.columnULT_DESCRIPTION.MaxLength = 50;
                this.columnValueCode.ReadOnly = true;
                this.columnValueNameEnum.ReadOnly = true;
                this.columnValueNameEnum.MaxLength = 50;
                this.columnValueName.ReadOnly = true;
                this.columnValueName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_LOCATION_TYPE_ENUMRow NewT_USER_LOCATION_TYPE_ENUMRow() {
                return ((T_USER_LOCATION_TYPE_ENUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_USER_LOCATION_TYPE_ENUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_USER_LOCATION_TYPE_ENUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_USER_LOCATION_TYPE_ENUMRowChanged != null)) {
                    this.T_USER_LOCATION_TYPE_ENUMRowChanged(this, new T_USER_LOCATION_TYPE_ENUMRowChangeEvent(((T_USER_LOCATION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_USER_LOCATION_TYPE_ENUMRowChanging != null)) {
                    this.T_USER_LOCATION_TYPE_ENUMRowChanging(this, new T_USER_LOCATION_TYPE_ENUMRowChangeEvent(((T_USER_LOCATION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_USER_LOCATION_TYPE_ENUMRowDeleted != null)) {
                    this.T_USER_LOCATION_TYPE_ENUMRowDeleted(this, new T_USER_LOCATION_TYPE_ENUMRowChangeEvent(((T_USER_LOCATION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_USER_LOCATION_TYPE_ENUMRowDeleting != null)) {
                    this.T_USER_LOCATION_TYPE_ENUMRowDeleting(this, new T_USER_LOCATION_TYPE_ENUMRowChangeEvent(((T_USER_LOCATION_TYPE_ENUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_USER_LOCATION_TYPE_ENUMRow(T_USER_LOCATION_TYPE_ENUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_USER_LOCATION_TYPE_ENUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DatePercent_T_USERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUSR_ID;
            
            private global::System.Data.DataColumn columnUSR_UID;
            
            private global::System.Data.DataColumn columnUSR_NAME;
            
            private global::System.Data.DataColumn columnUSR_V_NAME;
            
            private global::System.Data.DataColumn columnUSR_PIC_URL;
            
            private global::System.Data.DataColumn columnUSR_ADDED_DATETIME;
            
            private global::System.Data.DataColumn columnUSR_SUBSCRIBE;
            
            private global::System.Data.DataColumn columnUSR_PROFILE_URL;
            
            private global::System.Data.DataColumn columnUSR_TIMEZONE;
            
            private global::System.Data.DataColumn columnUSR_LOCALE;
            
            private global::System.Data.DataColumn columnUSR_PROP_BIRTHDATE;
            
            private global::System.Data.DataColumn columnUSR_PROP_SEX_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_MATCH_SEX_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_STATUS_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_HEIGHT_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_WEIGHT_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_HAIR_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_EYE_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_BODY_STYLE_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_RELIGION_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_RACE_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_EDUCATION_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_OCCUPATION_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_ABOUT_ME;
            
            private global::System.Data.DataColumn columnUSR_PROP_HAVE_KIDS_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_CUSTODY_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_WANT_KIDS_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_SMOKE_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_DRINK_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_ZODIAC_SIGN_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_MY_IDEAL_MATCH;
            
            private global::System.Data.DataColumn columnUSR_PROP_AGE_RANGE_FROM_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_AGE_RANGE_TO_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_MATCH_HAVE_KIDS_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_MATCH_WANT_KIDS_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_MATCH_SMOKE_CODE;
            
            private global::System.Data.DataColumn columnUSR_PROP_MATCH_DRINK_CODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatePercent_T_USERDataTable() {
                this.TableName = "DatePercent_T_USER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DatePercent_T_USERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DatePercent_T_USERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_IDColumn {
                get {
                    return this.columnUSR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_UIDColumn {
                get {
                    return this.columnUSR_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_NAMEColumn {
                get {
                    return this.columnUSR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_V_NAMEColumn {
                get {
                    return this.columnUSR_V_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PIC_URLColumn {
                get {
                    return this.columnUSR_PIC_URL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_ADDED_DATETIMEColumn {
                get {
                    return this.columnUSR_ADDED_DATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_SUBSCRIBEColumn {
                get {
                    return this.columnUSR_SUBSCRIBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROFILE_URLColumn {
                get {
                    return this.columnUSR_PROFILE_URL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_TIMEZONEColumn {
                get {
                    return this.columnUSR_TIMEZONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_LOCALEColumn {
                get {
                    return this.columnUSR_LOCALE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_BIRTHDATEColumn {
                get {
                    return this.columnUSR_PROP_BIRTHDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_SEX_CODEColumn {
                get {
                    return this.columnUSR_PROP_SEX_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_MATCH_SEX_CODEColumn {
                get {
                    return this.columnUSR_PROP_MATCH_SEX_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_STATUS_CODEColumn {
                get {
                    return this.columnUSR_PROP_STATUS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_HEIGHT_CODEColumn {
                get {
                    return this.columnUSR_PROP_HEIGHT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_WEIGHT_CODEColumn {
                get {
                    return this.columnUSR_PROP_WEIGHT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_HAIR_CODEColumn {
                get {
                    return this.columnUSR_PROP_HAIR_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_EYE_CODEColumn {
                get {
                    return this.columnUSR_PROP_EYE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_BODY_STYLE_CODEColumn {
                get {
                    return this.columnUSR_PROP_BODY_STYLE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_RELIGION_CODEColumn {
                get {
                    return this.columnUSR_PROP_RELIGION_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_RACE_CODEColumn {
                get {
                    return this.columnUSR_PROP_RACE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_EDUCATION_CODEColumn {
                get {
                    return this.columnUSR_PROP_EDUCATION_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_OCCUPATION_CODEColumn {
                get {
                    return this.columnUSR_PROP_OCCUPATION_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_ABOUT_MEColumn {
                get {
                    return this.columnUSR_PROP_ABOUT_ME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_HAVE_KIDS_CODEColumn {
                get {
                    return this.columnUSR_PROP_HAVE_KIDS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_CUSTODY_CODEColumn {
                get {
                    return this.columnUSR_PROP_CUSTODY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_WANT_KIDS_CODEColumn {
                get {
                    return this.columnUSR_PROP_WANT_KIDS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_SMOKE_CODEColumn {
                get {
                    return this.columnUSR_PROP_SMOKE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_DRINK_CODEColumn {
                get {
                    return this.columnUSR_PROP_DRINK_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_ZODIAC_SIGN_CODEColumn {
                get {
                    return this.columnUSR_PROP_ZODIAC_SIGN_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_MY_IDEAL_MATCHColumn {
                get {
                    return this.columnUSR_PROP_MY_IDEAL_MATCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_AGE_RANGE_FROM_CODEColumn {
                get {
                    return this.columnUSR_PROP_AGE_RANGE_FROM_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_AGE_RANGE_TO_CODEColumn {
                get {
                    return this.columnUSR_PROP_AGE_RANGE_TO_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_MATCH_HAVE_KIDS_CODEColumn {
                get {
                    return this.columnUSR_PROP_MATCH_HAVE_KIDS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_MATCH_WANT_KIDS_CODEColumn {
                get {
                    return this.columnUSR_PROP_MATCH_WANT_KIDS_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_MATCH_SMOKE_CODEColumn {
                get {
                    return this.columnUSR_PROP_MATCH_SMOKE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USR_PROP_MATCH_DRINK_CODEColumn {
                get {
                    return this.columnUSR_PROP_MATCH_DRINK_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatePercent_T_USERRow this[int index] {
                get {
                    return ((DatePercent_T_USERRow)(this.Rows[index]));
                }
            }
            
            public event DatePercent_T_USERRowChangeEventHandler DatePercent_T_USERRowChanging;
            
            public event DatePercent_T_USERRowChangeEventHandler DatePercent_T_USERRowChanged;
            
            public event DatePercent_T_USERRowChangeEventHandler DatePercent_T_USERRowDeleting;
            
            public event DatePercent_T_USERRowChangeEventHandler DatePercent_T_USERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDatePercent_T_USERRow(DatePercent_T_USERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatePercent_T_USERRow AddDatePercent_T_USERRow(
                        string USR_UID, 
                        string USR_NAME, 
                        string USR_V_NAME, 
                        string USR_PIC_URL, 
                        System.DateTime USR_ADDED_DATETIME, 
                        bool USR_SUBSCRIBE, 
                        string USR_PROFILE_URL, 
                        int USR_TIMEZONE, 
                        string USR_LOCALE, 
                        System.DateTime USR_PROP_BIRTHDATE, 
                        int USR_PROP_SEX_CODE, 
                        int USR_PROP_MATCH_SEX_CODE, 
                        int USR_PROP_STATUS_CODE, 
                        int USR_PROP_HEIGHT_CODE, 
                        int USR_PROP_WEIGHT_CODE, 
                        int USR_PROP_HAIR_CODE, 
                        int USR_PROP_EYE_CODE, 
                        int USR_PROP_BODY_STYLE_CODE, 
                        int USR_PROP_RELIGION_CODE, 
                        int USR_PROP_RACE_CODE, 
                        int USR_PROP_EDUCATION_CODE, 
                        int USR_PROP_OCCUPATION_CODE, 
                        string USR_PROP_ABOUT_ME, 
                        int USR_PROP_HAVE_KIDS_CODE, 
                        int USR_PROP_CUSTODY_CODE, 
                        int USR_PROP_WANT_KIDS_CODE, 
                        int USR_PROP_SMOKE_CODE, 
                        int USR_PROP_DRINK_CODE, 
                        int USR_PROP_ZODIAC_SIGN_CODE, 
                        string USR_PROP_MY_IDEAL_MATCH, 
                        int USR_PROP_AGE_RANGE_FROM_CODE, 
                        int USR_PROP_AGE_RANGE_TO_CODE, 
                        int USR_PROP_MATCH_HAVE_KIDS_CODE, 
                        int USR_PROP_MATCH_WANT_KIDS_CODE, 
                        int USR_PROP_MATCH_SMOKE_CODE, 
                        int USR_PROP_MATCH_DRINK_CODE) {
                DatePercent_T_USERRow rowDatePercent_T_USERRow = ((DatePercent_T_USERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        USR_UID,
                        USR_NAME,
                        USR_V_NAME,
                        USR_PIC_URL,
                        USR_ADDED_DATETIME,
                        USR_SUBSCRIBE,
                        USR_PROFILE_URL,
                        USR_TIMEZONE,
                        USR_LOCALE,
                        USR_PROP_BIRTHDATE,
                        USR_PROP_SEX_CODE,
                        USR_PROP_MATCH_SEX_CODE,
                        USR_PROP_STATUS_CODE,
                        USR_PROP_HEIGHT_CODE,
                        USR_PROP_WEIGHT_CODE,
                        USR_PROP_HAIR_CODE,
                        USR_PROP_EYE_CODE,
                        USR_PROP_BODY_STYLE_CODE,
                        USR_PROP_RELIGION_CODE,
                        USR_PROP_RACE_CODE,
                        USR_PROP_EDUCATION_CODE,
                        USR_PROP_OCCUPATION_CODE,
                        USR_PROP_ABOUT_ME,
                        USR_PROP_HAVE_KIDS_CODE,
                        USR_PROP_CUSTODY_CODE,
                        USR_PROP_WANT_KIDS_CODE,
                        USR_PROP_SMOKE_CODE,
                        USR_PROP_DRINK_CODE,
                        USR_PROP_ZODIAC_SIGN_CODE,
                        USR_PROP_MY_IDEAL_MATCH,
                        USR_PROP_AGE_RANGE_FROM_CODE,
                        USR_PROP_AGE_RANGE_TO_CODE,
                        USR_PROP_MATCH_HAVE_KIDS_CODE,
                        USR_PROP_MATCH_WANT_KIDS_CODE,
                        USR_PROP_MATCH_SMOKE_CODE,
                        USR_PROP_MATCH_DRINK_CODE};
                rowDatePercent_T_USERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDatePercent_T_USERRow);
                return rowDatePercent_T_USERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatePercent_T_USERRow FindByUSR_ID(int USR_ID) {
                return ((DatePercent_T_USERRow)(this.Rows.Find(new object[] {
                            USR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DatePercent_T_USERDataTable cln = ((DatePercent_T_USERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DatePercent_T_USERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSR_ID = base.Columns["USR_ID"];
                this.columnUSR_UID = base.Columns["USR_UID"];
                this.columnUSR_NAME = base.Columns["USR_NAME"];
                this.columnUSR_V_NAME = base.Columns["USR_V_NAME"];
                this.columnUSR_PIC_URL = base.Columns["USR_PIC_URL"];
                this.columnUSR_ADDED_DATETIME = base.Columns["USR_ADDED_DATETIME"];
                this.columnUSR_SUBSCRIBE = base.Columns["USR_SUBSCRIBE"];
                this.columnUSR_PROFILE_URL = base.Columns["USR_PROFILE_URL"];
                this.columnUSR_TIMEZONE = base.Columns["USR_TIMEZONE"];
                this.columnUSR_LOCALE = base.Columns["USR_LOCALE"];
                this.columnUSR_PROP_BIRTHDATE = base.Columns["USR_PROP_BIRTHDATE"];
                this.columnUSR_PROP_SEX_CODE = base.Columns["USR_PROP_SEX_CODE"];
                this.columnUSR_PROP_MATCH_SEX_CODE = base.Columns["USR_PROP_MATCH_SEX_CODE"];
                this.columnUSR_PROP_STATUS_CODE = base.Columns["USR_PROP_STATUS_CODE"];
                this.columnUSR_PROP_HEIGHT_CODE = base.Columns["USR_PROP_HEIGHT_CODE"];
                this.columnUSR_PROP_WEIGHT_CODE = base.Columns["USR_PROP_WEIGHT_CODE"];
                this.columnUSR_PROP_HAIR_CODE = base.Columns["USR_PROP_HAIR_CODE"];
                this.columnUSR_PROP_EYE_CODE = base.Columns["USR_PROP_EYE_CODE"];
                this.columnUSR_PROP_BODY_STYLE_CODE = base.Columns["USR_PROP_BODY_STYLE_CODE"];
                this.columnUSR_PROP_RELIGION_CODE = base.Columns["USR_PROP_RELIGION_CODE"];
                this.columnUSR_PROP_RACE_CODE = base.Columns["USR_PROP_RACE_CODE"];
                this.columnUSR_PROP_EDUCATION_CODE = base.Columns["USR_PROP_EDUCATION_CODE"];
                this.columnUSR_PROP_OCCUPATION_CODE = base.Columns["USR_PROP_OCCUPATION_CODE"];
                this.columnUSR_PROP_ABOUT_ME = base.Columns["USR_PROP_ABOUT_ME"];
                this.columnUSR_PROP_HAVE_KIDS_CODE = base.Columns["USR_PROP_HAVE_KIDS_CODE"];
                this.columnUSR_PROP_CUSTODY_CODE = base.Columns["USR_PROP_CUSTODY_CODE"];
                this.columnUSR_PROP_WANT_KIDS_CODE = base.Columns["USR_PROP_WANT_KIDS_CODE"];
                this.columnUSR_PROP_SMOKE_CODE = base.Columns["USR_PROP_SMOKE_CODE"];
                this.columnUSR_PROP_DRINK_CODE = base.Columns["USR_PROP_DRINK_CODE"];
                this.columnUSR_PROP_ZODIAC_SIGN_CODE = base.Columns["USR_PROP_ZODIAC_SIGN_CODE"];
                this.columnUSR_PROP_MY_IDEAL_MATCH = base.Columns["USR_PROP_MY_IDEAL_MATCH"];
                this.columnUSR_PROP_AGE_RANGE_FROM_CODE = base.Columns["USR_PROP_AGE_RANGE_FROM_CODE"];
                this.columnUSR_PROP_AGE_RANGE_TO_CODE = base.Columns["USR_PROP_AGE_RANGE_TO_CODE"];
                this.columnUSR_PROP_MATCH_HAVE_KIDS_CODE = base.Columns["USR_PROP_MATCH_HAVE_KIDS_CODE"];
                this.columnUSR_PROP_MATCH_WANT_KIDS_CODE = base.Columns["USR_PROP_MATCH_WANT_KIDS_CODE"];
                this.columnUSR_PROP_MATCH_SMOKE_CODE = base.Columns["USR_PROP_MATCH_SMOKE_CODE"];
                this.columnUSR_PROP_MATCH_DRINK_CODE = base.Columns["USR_PROP_MATCH_DRINK_CODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSR_ID = new global::System.Data.DataColumn("USR_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_ID);
                this.columnUSR_UID = new global::System.Data.DataColumn("USR_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_UID);
                this.columnUSR_NAME = new global::System.Data.DataColumn("USR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_NAME);
                this.columnUSR_V_NAME = new global::System.Data.DataColumn("USR_V_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_V_NAME);
                this.columnUSR_PIC_URL = new global::System.Data.DataColumn("USR_PIC_URL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PIC_URL);
                this.columnUSR_ADDED_DATETIME = new global::System.Data.DataColumn("USR_ADDED_DATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_ADDED_DATETIME);
                this.columnUSR_SUBSCRIBE = new global::System.Data.DataColumn("USR_SUBSCRIBE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_SUBSCRIBE);
                this.columnUSR_PROFILE_URL = new global::System.Data.DataColumn("USR_PROFILE_URL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROFILE_URL);
                this.columnUSR_TIMEZONE = new global::System.Data.DataColumn("USR_TIMEZONE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_TIMEZONE);
                this.columnUSR_LOCALE = new global::System.Data.DataColumn("USR_LOCALE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_LOCALE);
                this.columnUSR_PROP_BIRTHDATE = new global::System.Data.DataColumn("USR_PROP_BIRTHDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_BIRTHDATE);
                this.columnUSR_PROP_SEX_CODE = new global::System.Data.DataColumn("USR_PROP_SEX_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_SEX_CODE);
                this.columnUSR_PROP_MATCH_SEX_CODE = new global::System.Data.DataColumn("USR_PROP_MATCH_SEX_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_MATCH_SEX_CODE);
                this.columnUSR_PROP_STATUS_CODE = new global::System.Data.DataColumn("USR_PROP_STATUS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_STATUS_CODE);
                this.columnUSR_PROP_HEIGHT_CODE = new global::System.Data.DataColumn("USR_PROP_HEIGHT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_HEIGHT_CODE);
                this.columnUSR_PROP_WEIGHT_CODE = new global::System.Data.DataColumn("USR_PROP_WEIGHT_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_WEIGHT_CODE);
                this.columnUSR_PROP_HAIR_CODE = new global::System.Data.DataColumn("USR_PROP_HAIR_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_HAIR_CODE);
                this.columnUSR_PROP_EYE_CODE = new global::System.Data.DataColumn("USR_PROP_EYE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_EYE_CODE);
                this.columnUSR_PROP_BODY_STYLE_CODE = new global::System.Data.DataColumn("USR_PROP_BODY_STYLE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_BODY_STYLE_CODE);
                this.columnUSR_PROP_RELIGION_CODE = new global::System.Data.DataColumn("USR_PROP_RELIGION_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_RELIGION_CODE);
                this.columnUSR_PROP_RACE_CODE = new global::System.Data.DataColumn("USR_PROP_RACE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_RACE_CODE);
                this.columnUSR_PROP_EDUCATION_CODE = new global::System.Data.DataColumn("USR_PROP_EDUCATION_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_EDUCATION_CODE);
                this.columnUSR_PROP_OCCUPATION_CODE = new global::System.Data.DataColumn("USR_PROP_OCCUPATION_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_OCCUPATION_CODE);
                this.columnUSR_PROP_ABOUT_ME = new global::System.Data.DataColumn("USR_PROP_ABOUT_ME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_ABOUT_ME);
                this.columnUSR_PROP_HAVE_KIDS_CODE = new global::System.Data.DataColumn("USR_PROP_HAVE_KIDS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_HAVE_KIDS_CODE);
                this.columnUSR_PROP_CUSTODY_CODE = new global::System.Data.DataColumn("USR_PROP_CUSTODY_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_CUSTODY_CODE);
                this.columnUSR_PROP_WANT_KIDS_CODE = new global::System.Data.DataColumn("USR_PROP_WANT_KIDS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_WANT_KIDS_CODE);
                this.columnUSR_PROP_SMOKE_CODE = new global::System.Data.DataColumn("USR_PROP_SMOKE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_SMOKE_CODE);
                this.columnUSR_PROP_DRINK_CODE = new global::System.Data.DataColumn("USR_PROP_DRINK_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_DRINK_CODE);
                this.columnUSR_PROP_ZODIAC_SIGN_CODE = new global::System.Data.DataColumn("USR_PROP_ZODIAC_SIGN_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_ZODIAC_SIGN_CODE);
                this.columnUSR_PROP_MY_IDEAL_MATCH = new global::System.Data.DataColumn("USR_PROP_MY_IDEAL_MATCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_MY_IDEAL_MATCH);
                this.columnUSR_PROP_AGE_RANGE_FROM_CODE = new global::System.Data.DataColumn("USR_PROP_AGE_RANGE_FROM_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_AGE_RANGE_FROM_CODE);
                this.columnUSR_PROP_AGE_RANGE_TO_CODE = new global::System.Data.DataColumn("USR_PROP_AGE_RANGE_TO_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_AGE_RANGE_TO_CODE);
                this.columnUSR_PROP_MATCH_HAVE_KIDS_CODE = new global::System.Data.DataColumn("USR_PROP_MATCH_HAVE_KIDS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_MATCH_HAVE_KIDS_CODE);
                this.columnUSR_PROP_MATCH_WANT_KIDS_CODE = new global::System.Data.DataColumn("USR_PROP_MATCH_WANT_KIDS_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_MATCH_WANT_KIDS_CODE);
                this.columnUSR_PROP_MATCH_SMOKE_CODE = new global::System.Data.DataColumn("USR_PROP_MATCH_SMOKE_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_MATCH_SMOKE_CODE);
                this.columnUSR_PROP_MATCH_DRINK_CODE = new global::System.Data.DataColumn("USR_PROP_MATCH_DRINK_CODE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSR_PROP_MATCH_DRINK_CODE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUSR_ID}, true));
                this.columnUSR_ID.AutoIncrement = true;
                this.columnUSR_ID.AllowDBNull = false;
                this.columnUSR_ID.ReadOnly = true;
                this.columnUSR_ID.Unique = true;
                this.columnUSR_UID.MaxLength = 255;
                this.columnUSR_NAME.MaxLength = 50;
                this.columnUSR_V_NAME.MaxLength = 10;
                this.columnUSR_PIC_URL.MaxLength = 2000;
                this.columnUSR_SUBSCRIBE.AllowDBNull = false;
                this.columnUSR_PROFILE_URL.MaxLength = 2000;
                this.columnUSR_TIMEZONE.AllowDBNull = false;
                this.columnUSR_LOCALE.AllowDBNull = false;
                this.columnUSR_LOCALE.MaxLength = 50;
                this.columnUSR_PROP_BIRTHDATE.AllowDBNull = false;
                this.columnUSR_PROP_SEX_CODE.AllowDBNull = false;
                this.columnUSR_PROP_ABOUT_ME.MaxLength = 2000;
                this.columnUSR_PROP_MY_IDEAL_MATCH.MaxLength = 2000;
                this.columnUSR_PROP_AGE_RANGE_FROM_CODE.AllowDBNull = false;
                this.columnUSR_PROP_AGE_RANGE_TO_CODE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatePercent_T_USERRow NewDatePercent_T_USERRow() {
                return ((DatePercent_T_USERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DatePercent_T_USERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DatePercent_T_USERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DatePercent_T_USERRowChanged != null)) {
                    this.DatePercent_T_USERRowChanged(this, new DatePercent_T_USERRowChangeEvent(((DatePercent_T_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DatePercent_T_USERRowChanging != null)) {
                    this.DatePercent_T_USERRowChanging(this, new DatePercent_T_USERRowChangeEvent(((DatePercent_T_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DatePercent_T_USERRowDeleted != null)) {
                    this.DatePercent_T_USERRowDeleted(this, new DatePercent_T_USERRowChangeEvent(((DatePercent_T_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DatePercent_T_USERRowDeleting != null)) {
                    this.DatePercent_T_USERRowDeleting(this, new DatePercent_T_USERRowChangeEvent(((DatePercent_T_USERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDatePercent_T_USERRow(DatePercent_T_USERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ApplicationHandler ds = new ApplicationHandler();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DatePercent_T_USERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_BUTTON_SIZE_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_BUTTON_SIZE_TYPE_ENUMDataTable tableT_BUTTON_SIZE_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_BUTTON_SIZE_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_BUTTON_SIZE_TYPE_ENUM = ((T_BUTTON_SIZE_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BNS_CODE {
                get {
                    return ((int)(this[this.tableT_BUTTON_SIZE_TYPE_ENUM.BNS_CODEColumn]));
                }
                set {
                    this[this.tableT_BUTTON_SIZE_TYPE_ENUM.BNS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BNS_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_BUTTON_SIZE_TYPE_ENUM.BNS_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_BUTTON_SIZE_TYPE_ENUM.BNS_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_BUTTON_SIZE_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_BUTTON_SIZE_TYPE_ENUM\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_BUTTON_SIZE_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_BUTTON_SIZE_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_CULTURERow : global::System.Data.DataRow {
            
            private T_CULTUREDataTable tableT_CULTURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CULTURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_CULTURE = ((T_CULTUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CLT_ID {
                get {
                    return ((int)(this[this.tableT_CULTURE.CLT_IDColumn]));
                }
                set {
                    this[this.tableT_CULTURE.CLT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLT_NAME {
                get {
                    return ((string)(this[this.tableT_CULTURE.CLT_NAMEColumn]));
                }
                set {
                    this[this.tableT_CULTURE.CLT_NAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_CULTURE_DATE_FORMAT_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable tableT_CULTURE_DATE_FORMAT_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CULTURE_DATE_FORMAT_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM = ((T_CULTURE_DATE_FORMAT_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CDF_CODE {
                get {
                    return ((int)(this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.CDF_CODEColumn]));
                }
                set {
                    this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.CDF_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDF_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.CDF_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.CDF_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CDF_FORMAT {
                get {
                    return ((string)(this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.CDF_FORMATColumn]));
                }
                set {
                    this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.CDF_FORMATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_CULTURE_DATE_FORMAT_TYPE_ENUM\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_CULTURE_DATE_FORMAT_TYPE_ENUM\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_CULTURE_DATE_FORMAT_TYPE_ENUM\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_CULTURE_DATE_FORMAT_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_DISTANCE_UNITS_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_DISTANCE_UNITS_TYPE_ENUMDataTable tableT_DISTANCE_UNITS_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DISTANCE_UNITS_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_DISTANCE_UNITS_TYPE_ENUM = ((T_DISTANCE_UNITS_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DUT_CODE {
                get {
                    return ((int)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_CODEColumn]));
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DUT_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUT_DESCRIPTION\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_DISTANCE_UNITS_TYPE_ENUM\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDUT_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDUT_DESCRIPTIONNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.DUT_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_DISTANCE_UNITS_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_FAQ_TYPERow : global::System.Data.DataRow {
            
            private T_FAQ_TYPEDataTable tableT_FAQ_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_FAQ_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_FAQ_TYPE = ((T_FAQ_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FQT_CODE {
                get {
                    return ((int)(this[this.tableT_FAQ_TYPE.FQT_CODEColumn]));
                }
                set {
                    this[this.tableT_FAQ_TYPE.FQT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FQT_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_FAQ_TYPE.FQT_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FQT_DESCRIPTION\' in table \'T_FAQ_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_FAQ_TYPE.FQT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FQT_ORDER_BY {
                get {
                    return ((int)(this[this.tableT_FAQ_TYPE.FQT_ORDER_BYColumn]));
                }
                set {
                    this[this.tableT_FAQ_TYPE.FQT_ORDER_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FQT_SELECTED {
                get {
                    return ((bool)(this[this.tableT_FAQ_TYPE.FQT_SELECTEDColumn]));
                }
                set {
                    this[this.tableT_FAQ_TYPE.FQT_SELECTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FQT_DISABLED {
                get {
                    return ((bool)(this[this.tableT_FAQ_TYPE.FQT_DISABLEDColumn]));
                }
                set {
                    this[this.tableT_FAQ_TYPE.FQT_DISABLEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFQT_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_FAQ_TYPE.FQT_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFQT_DESCRIPTIONNull() {
                this[this.tableT_FAQ_TYPE.FQT_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQRow[] GetT_FAQRows() {
                if ((this.Table.ChildRelations["FK_T_FAQ_T_FAQ_TYPE"] == null)) {
                    return new T_FAQRow[0];
                }
                else {
                    return ((T_FAQRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T_FAQ_T_FAQ_TYPE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_LIST_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_LIST_TYPE_ENUMDataTable tableT_LIST_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LIST_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_LIST_TYPE_ENUM = ((T_LIST_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LTT_CODE {
                get {
                    return ((int)(this[this.tableT_LIST_TYPE_ENUM.LTT_CODEColumn]));
                }
                set {
                    this[this.tableT_LIST_TYPE_ENUM.LTT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LTT_IS_SYSTEM {
                get {
                    return ((bool)(this[this.tableT_LIST_TYPE_ENUM.LTT_IS_SYSTEMColumn]));
                }
                set {
                    this[this.tableT_LIST_TYPE_ENUM.LTT_IS_SYSTEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LTT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_LIST_TYPE_ENUM.LTT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_LIST_TYPE_ENUM.LTT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LTT_COMMENT {
                get {
                    return ((string)(this[this.tableT_LIST_TYPE_ENUM.LTT_COMMENTColumn]));
                }
                set {
                    this[this.tableT_LIST_TYPE_ENUM.LTT_COMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_LIST_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_LIST_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LIST_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_LIST_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_LIST_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LIST_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_LIST_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_LIST_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LIST_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_LIST_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_LIST_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_LIST_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_LIST_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_LIST_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_LIST_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_AGE_RANGE_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_AGE_RANGE_TYPEDataTable tableT_PROP_AGE_RANGE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_AGE_RANGE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_AGE_RANGE_TYPE = ((T_PROP_AGE_RANGE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AGR_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_AGE_RANGE_TYPE.AGR_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_AGE_RANGE_TYPE.AGR_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AGR_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_AGE_RANGE_TYPE.AGR_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AGR_DESCRIPTION\' in table \'T_PROP_AGE_RANGE_TYPE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_PROP_AGE_RANGE_TYPE.AGR_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAGR_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_AGE_RANGE_TYPE.AGR_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAGR_DESCRIPTIONNull() {
                this[this.tableT_PROP_AGE_RANGE_TYPE.AGR_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_CUSTODY_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_CUSTODY_TYPEDataTable tableT_PROP_CUSTODY_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_CUSTODY_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_CUSTODY_TYPE = ((T_PROP_CUSTODY_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CTD_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_CUSTODY_TYPE.CTD_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_CUSTODY_TYPE.CTD_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_CUSTODY_TYPE.CTD_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTD_DESCRIPTION\' in table \'T_PROP_CUSTODY_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_CUSTODY_TYPE.CTD_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTD_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_CUSTODY_TYPE.CTD_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTD_DESCRIPTIONNull() {
                this[this.tableT_PROP_CUSTODY_TYPE.CTD_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_DRINK_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_DRINK_TYPEDataTable tableT_PROP_DRINK_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_DRINK_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_DRINK_TYPE = ((T_PROP_DRINK_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DRK_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_DRINK_TYPE.DRK_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_DRINK_TYPE.DRK_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRK_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_DRINK_TYPE.DRK_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DRK_DESCRIPTION\' in table \'T_PROP_DRINK_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_DRINK_TYPE.DRK_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRK_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_DRINK_TYPE.DRK_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRK_DESCRIPTIONNull() {
                this[this.tableT_PROP_DRINK_TYPE.DRK_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_EYE_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_EYE_TYPEDataTable tableT_PROP_EYE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_EYE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_EYE_TYPE = ((T_PROP_EYE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EYE_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_EYE_TYPE.EYE_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_EYE_TYPE.EYE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EYE_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_EYE_TYPE.EYE_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EYE_DESCRIPTION\' in table \'T_PROP_EYE_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_EYE_TYPE.EYE_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEYE_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_EYE_TYPE.EYE_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEYE_DESCRIPTIONNull() {
                this[this.tableT_PROP_EYE_TYPE.EYE_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_HAIR_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_HAIR_TYPEDataTable tableT_PROP_HAIR_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_HAIR_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_HAIR_TYPE = ((T_PROP_HAIR_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HAR_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_HAIR_TYPE.HAR_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_HAIR_TYPE.HAR_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HAR_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_HAIR_TYPE.HAR_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HAR_DESCRIPTION\' in table \'T_PROP_HAIR_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_HAIR_TYPE.HAR_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAR_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_HAIR_TYPE.HAR_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAR_DESCRIPTIONNull() {
                this[this.tableT_PROP_HAIR_TYPE.HAR_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_HAVE_KIDS_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_HAVE_KIDS_TYPEDataTable tableT_PROP_HAVE_KIDS_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_HAVE_KIDS_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_HAVE_KIDS_TYPE = ((T_PROP_HAVE_KIDS_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HKD_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_HAVE_KIDS_TYPE.HKD_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_HAVE_KIDS_TYPE.HKD_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HKD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_HAVE_KIDS_TYPE.HKD_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HKD_DESCRIPTION\' in table \'T_PROP_HAVE_KIDS_TYPE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_PROP_HAVE_KIDS_TYPE.HKD_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHKD_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_HAVE_KIDS_TYPE.HKD_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHKD_DESCRIPTIONNull() {
                this[this.tableT_PROP_HAVE_KIDS_TYPE.HKD_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_HEIGHT_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_HEIGHT_TYPEDataTable tableT_PROP_HEIGHT_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_HEIGHT_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_HEIGHT_TYPE = ((T_PROP_HEIGHT_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HGT_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_HEIGHT_TYPE.HGT_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_HEIGHT_TYPE.HGT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HGT_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_HEIGHT_TYPE.HGT_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HGT_DESCRIPTION\' in table \'T_PROP_HEIGHT_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_HEIGHT_TYPE.HGT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHGT_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_HEIGHT_TYPE.HGT_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHGT_DESCRIPTIONNull() {
                this[this.tableT_PROP_HEIGHT_TYPE.HGT_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_LANGUAGE_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_LANGUAGE_TYPEDataTable tableT_PROP_LANGUAGE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_LANGUAGE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_LANGUAGE_TYPE = ((T_PROP_LANGUAGE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LNG_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_LANGUAGE_TYPE.LNG_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_LANGUAGE_TYPE.LNG_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LNG_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_LANGUAGE_TYPE.LNG_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LNG_DESCRIPTION\' in table \'T_PROP_LANGUAGE_TYPE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_PROP_LANGUAGE_TYPE.LNG_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLNG_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_LANGUAGE_TYPE.LNG_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLNG_DESCRIPTIONNull() {
                this[this.tableT_PROP_LANGUAGE_TYPE.LNG_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_MATCH_SEX_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_MATCH_SEX_TYPEDataTable tableT_PROP_MATCH_SEX_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_MATCH_SEX_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_MATCH_SEX_TYPE = ((T_PROP_MATCH_SEX_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SXI_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_MATCH_SEX_TYPE.SXI_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_MATCH_SEX_TYPE.SXI_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SXI_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_MATCH_SEX_TYPE.SXI_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SXI_DESCRIPTION\' in table \'T_PROP_MATCH_SEX_TYPE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_PROP_MATCH_SEX_TYPE.SXI_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSXI_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_MATCH_SEX_TYPE.SXI_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSXI_DESCRIPTIONNull() {
                this[this.tableT_PROP_MATCH_SEX_TYPE.SXI_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_RELATIONSHIP_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_RELATIONSHIP_TYPEDataTable tableT_PROP_RELATIONSHIP_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_RELATIONSHIP_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_RELATIONSHIP_TYPE = ((T_PROP_RELATIONSHIP_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int REL_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_RELATIONSHIP_TYPE.REL_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_RELATIONSHIP_TYPE.REL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REL_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_RELATIONSHIP_TYPE.REL_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REL_DESCRIPTION\' in table \'T_PROP_RELATIONSHIP_TYPE\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_RELATIONSHIP_TYPE.REL_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREL_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_RELATIONSHIP_TYPE.REL_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREL_DESCRIPTIONNull() {
                this[this.tableT_PROP_RELATIONSHIP_TYPE.REL_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_SEX_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_PROP_SEX_TYPE_ENUMDataTable tableT_PROP_SEX_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_SEX_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_SEX_TYPE_ENUM = ((T_PROP_SEX_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SEX_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_SEX_TYPE_ENUM.SEX_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_SEX_TYPE_ENUM.SEX_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEX_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SEX_DESCRIPTION\' in table \'T_PROP_SEX_TYPE_ENUM\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_PROP_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_PROP_SEX_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_PROP_SEX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_SEX_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_SEX_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_PROP_SEX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_SEX_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_SEX_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_PROP_SEX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_SEX_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEX_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEX_DESCRIPTIONNull() {
                this[this.tableT_PROP_SEX_TYPE_ENUM.SEX_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_PROP_SEX_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_PROP_SEX_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_PROP_SEX_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_PROP_SEX_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_PROP_SEX_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_PROP_SEX_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_SMOKE_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_SMOKE_TYPEDataTable tableT_PROP_SMOKE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_SMOKE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_SMOKE_TYPE = ((T_PROP_SMOKE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SMK_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_SMOKE_TYPE.SMK_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_SMOKE_TYPE.SMK_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMK_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_SMOKE_TYPE.SMK_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMK_DESCRIPTION\' in table \'T_PROP_SMOKE_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_SMOKE_TYPE.SMK_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMK_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_SMOKE_TYPE.SMK_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMK_DESCRIPTIONNull() {
                this[this.tableT_PROP_SMOKE_TYPE.SMK_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_STATUS_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_STATUS_TYPEDataTable tableT_PROP_STATUS_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_STATUS_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_STATUS_TYPE = ((T_PROP_STATUS_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RCS_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_STATUS_TYPE.RCS_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_STATUS_TYPE.RCS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCS_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_STATUS_TYPE.RCS_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RCS_DESCRIPTION\' in table \'T_PROP_STATUS_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_STATUS_TYPE.RCS_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRCS_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_STATUS_TYPE.RCS_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRCS_DESCRIPTIONNull() {
                this[this.tableT_PROP_STATUS_TYPE.RCS_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_WANT_KIDS_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_WANT_KIDS_TYPEDataTable tableT_PROP_WANT_KIDS_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_WANT_KIDS_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_WANT_KIDS_TYPE = ((T_PROP_WANT_KIDS_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WKD_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_WANT_KIDS_TYPE.WKD_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_WANT_KIDS_TYPE.WKD_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WKD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_WANT_KIDS_TYPE.WKD_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WKD_DESCRIPTION\' in table \'T_PROP_WANT_KIDS_TYPE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_PROP_WANT_KIDS_TYPE.WKD_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWKD_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_WANT_KIDS_TYPE.WKD_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWKD_DESCRIPTIONNull() {
                this[this.tableT_PROP_WANT_KIDS_TYPE.WKD_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_WEIGHT_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_WEIGHT_TYPEDataTable tableT_PROP_WEIGHT_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_WEIGHT_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_WEIGHT_TYPE = ((T_PROP_WEIGHT_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WGT_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_WEIGHT_TYPE.WGT_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_WEIGHT_TYPE.WGT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WGT_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_WEIGHT_TYPE.WGT_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WGT_DESCRIPTION\' in table \'T_PROP_WEIGHT_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_WEIGHT_TYPE.WGT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWGT_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_WEIGHT_TYPE.WGT_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWGT_DESCRIPTIONNull() {
                this[this.tableT_PROP_WEIGHT_TYPE.WGT_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_ZODIAC_SIGN_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_ZODIAC_SIGN_TYPEDataTable tableT_PROP_ZODIAC_SIGN_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_ZODIAC_SIGN_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_ZODIAC_SIGN_TYPE = ((T_PROP_ZODIAC_SIGN_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZDC_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_ZODIAC_SIGN_TYPE.ZDC_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_ZODIAC_SIGN_TYPE.ZDC_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZDC_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_ZODIAC_SIGN_TYPE.ZDC_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZDC_DESCRIPTION\' in table \'T_PROP_ZODIAC_SIGN_TYPE\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_ZODIAC_SIGN_TYPE.ZDC_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZDC_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_ZODIAC_SIGN_TYPE.ZDC_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZDC_DESCRIPTIONNull() {
                this[this.tableT_PROP_ZODIAC_SIGN_TYPE.ZDC_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_RESULT_VIEW_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_RESULT_VIEW_TYPE_ENUMDataTable tableT_RESULT_VIEW_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_RESULT_VIEW_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_RESULT_VIEW_TYPE_ENUM = ((T_RESULT_VIEW_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RST_CODE {
                get {
                    return ((int)(this[this.tableT_RESULT_VIEW_TYPE_ENUM.RST_CODEColumn]));
                }
                set {
                    this[this.tableT_RESULT_VIEW_TYPE_ENUM.RST_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RST_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_RESULT_VIEW_TYPE_ENUM.RST_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RST_DESCRIPTION\' in table \'T_RESULT_VIEW_TYPE_ENUM\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_RESULT_VIEW_TYPE_ENUM.RST_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RST_SELECTED {
                get {
                    return ((bool)(this[this.tableT_RESULT_VIEW_TYPE_ENUM.RST_SELECTEDColumn]));
                }
                set {
                    this[this.tableT_RESULT_VIEW_TYPE_ENUM.RST_SELECTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_RESULT_VIEW_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_RESULT_VIEW_TYPE_ENUM\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_RESULT_VIEW_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRST_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_RESULT_VIEW_TYPE_ENUM.RST_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRST_DESCRIPTIONNull() {
                this[this.tableT_RESULT_VIEW_TYPE_ENUM.RST_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_RESULT_VIEW_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_RESULT_VIEW_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_RMN_TYPE_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_RMN_TYPE_TYPE_ENUMDataTable tableT_RMN_TYPE_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_RMN_TYPE_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_RMN_TYPE_TYPE_ENUM = ((T_RMN_TYPE_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RTT_CODE {
                get {
                    return ((int)(this[this.tableT_RMN_TYPE_TYPE_ENUM.RTT_CODEColumn]));
                }
                set {
                    this[this.tableT_RMN_TYPE_TYPE_ENUM.RTT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RTT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_RMN_TYPE_TYPE_ENUM.RTT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_RMN_TYPE_TYPE_ENUM.RTT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_RMN_TYPE_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_RMN_TYPE_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_RMN_TYPE_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_RMN_TYPE_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_RMN_TYPE_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMRow[] GetT_RMN_TYPE_ENUMRows() {
                if ((this.Table.ChildRelations["FK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM"] == null)) {
                    return new T_RMN_TYPE_ENUMRow[0];
                }
                else {
                    return ((T_RMN_TYPE_ENUMRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_TWINK_TYPERow : global::System.Data.DataRow {
            
            private T_TWINK_TYPEDataTable tableT_TWINK_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TWINK_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_TWINK_TYPE = ((T_TWINK_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TWT_CODE {
                get {
                    return ((int)(this[this.tableT_TWINK_TYPE.TWT_CODEColumn]));
                }
                set {
                    this[this.tableT_TWINK_TYPE.TWT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_TWINK_TYPE.TWT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_TWINK_TYPE.TWT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TWT_ORDER_BY {
                get {
                    return ((int)(this[this.tableT_TWINK_TYPE.TWT_ORDER_BYColumn]));
                }
                set {
                    this[this.tableT_TWINK_TYPE.TWT_ORDER_BYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TWT_SELECTED {
                get {
                    return ((bool)(this[this.tableT_TWINK_TYPE.TWT_SELECTEDColumn]));
                }
                set {
                    this[this.tableT_TWINK_TYPE.TWT_SELECTEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TWT_DISABLED {
                get {
                    return ((bool)(this[this.tableT_TWINK_TYPE.TWT_DISABLEDColumn]));
                }
                set {
                    this[this.tableT_TWINK_TYPE.TWT_DISABLEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKRow[] GetT_TWINKRows() {
                if ((this.Table.ChildRelations["FK_T_TWINK_T_TWINK_TYPE"] == null)) {
                    return new T_TWINKRow[0];
                }
                else {
                    return ((T_TWINKRow[])(base.GetChildRows(this.Table.ChildRelations["FK_T_TWINK_T_TWINK_TYPE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_USER_INVITEE_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_USER_INVITEE_TYPE_ENUMDataTable tableT_USER_INVITEE_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_USER_INVITEE_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_USER_INVITEE_TYPE_ENUM = ((T_USER_INVITEE_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UIT_CODE {
                get {
                    return ((int)(this[this.tableT_USER_INVITEE_TYPE_ENUM.UIT_CODEColumn]));
                }
                set {
                    this[this.tableT_USER_INVITEE_TYPE_ENUM.UIT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UIT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_USER_INVITEE_TYPE_ENUM.UIT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_USER_INVITEE_TYPE_ENUM.UIT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_USER_INVITEE_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_USER_INVITEE_TYPE_ENUM\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_USER_INVITEE_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_USER_INVITEE_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_USER_INVITEE_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_TWINKRow : global::System.Data.DataRow {
            
            private T_TWINKDataTable tableT_TWINK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_TWINKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_TWINK = ((T_TWINKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TWK_ID {
                get {
                    return ((int)(this[this.tableT_TWINK.TWK_IDColumn]));
                }
                set {
                    this[this.tableT_TWINK.TWK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TWK_TWINK_TYPE {
                get {
                    return ((int)(this[this.tableT_TWINK.TWK_TWINK_TYPEColumn]));
                }
                set {
                    this[this.tableT_TWINK.TWK_TWINK_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWK_TWINK {
                get {
                    return ((string)(this[this.tableT_TWINK.TWK_TWINKColumn]));
                }
                set {
                    this[this.tableT_TWINK.TWK_TWINKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] TWK_ICON {
                get {
                    try {
                        return ((byte[])(this[this.tableT_TWINK.TWK_ICONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TWK_ICON\' in table \'T_TWINK\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_TWINK.TWK_ICONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPERow T_TWINK_TYPERow {
                get {
                    return ((T_TWINK_TYPERow)(this.GetParentRow(this.Table.ParentRelations["FK_T_TWINK_T_TWINK_TYPE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T_TWINK_T_TWINK_TYPE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWK_ICONNull() {
                return this.IsNull(this.tableT_TWINK.TWK_ICONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWK_ICONNull() {
                this[this.tableT_TWINK.TWK_ICONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_FAQRow : global::System.Data.DataRow {
            
            private T_FAQDataTable tableT_FAQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_FAQRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_FAQ = ((T_FAQDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FAQ_ID {
                get {
                    return ((int)(this[this.tableT_FAQ.FAQ_IDColumn]));
                }
                set {
                    this[this.tableT_FAQ.FAQ_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FAQ_FAQ_TYPE {
                get {
                    return ((int)(this[this.tableT_FAQ.FAQ_FAQ_TYPEColumn]));
                }
                set {
                    this[this.tableT_FAQ.FAQ_FAQ_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAQ_QUESTION {
                get {
                    return ((string)(this[this.tableT_FAQ.FAQ_QUESTIONColumn]));
                }
                set {
                    this[this.tableT_FAQ.FAQ_QUESTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAQ_ANSWER {
                get {
                    return ((string)(this[this.tableT_FAQ.FAQ_ANSWERColumn]));
                }
                set {
                    this[this.tableT_FAQ.FAQ_ANSWERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPERow T_FAQ_TYPERow {
                get {
                    return ((T_FAQ_TYPERow)(this.GetParentRow(this.Table.ParentRelations["FK_T_FAQ_T_FAQ_TYPE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T_FAQ_T_FAQ_TYPE"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_BODY_STYLE_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_BODY_STYLE_TYPEDataTable tableT_PROP_BODY_STYLE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_BODY_STYLE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_BODY_STYLE_TYPE = ((T_PROP_BODY_STYLE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BDY_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_BODY_STYLE_TYPE.BDY_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_BODY_STYLE_TYPE.BDY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BDY_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_BODY_STYLE_TYPE.BDY_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BDY_DESCRIPTION\' in table \'T_PROP_BODY_STYLE_TYPE\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_BODY_STYLE_TYPE.BDY_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBDY_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_BODY_STYLE_TYPE.BDY_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBDY_DESCRIPTIONNull() {
                this[this.tableT_PROP_BODY_STYLE_TYPE.BDY_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_RMN_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_RMN_TYPE_ENUMDataTable tableT_RMN_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_RMN_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_RMN_TYPE_ENUM = ((T_RMN_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMT_CODE {
                get {
                    return ((int)(this[this.tableT_RMN_TYPE_ENUM.RMT_CODEColumn]));
                }
                set {
                    this[this.tableT_RMN_TYPE_ENUM.RMT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMT_RTT_TYPE_TYPE {
                get {
                    return ((int)(this[this.tableT_RMN_TYPE_ENUM.RMT_RTT_TYPE_TYPEColumn]));
                }
                set {
                    this[this.tableT_RMN_TYPE_ENUM.RMT_RTT_TYPE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RMT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_RMN_TYPE_ENUM.RMT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_RMN_TYPE_ENUM.RMT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RMT_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableT_RMN_TYPE_ENUM.RMT_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMT_TEXT\' in table \'T_RMN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RMN_TYPE_ENUM.RMT_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_RMN_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_RMN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RMN_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_RMN_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_RMN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RMN_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_RMN_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_RMN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_RMN_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMRow T_RMN_TYPE_TYPE_ENUMRow {
                get {
                    return ((T_RMN_TYPE_TYPE_ENUMRow)(this.GetParentRow(this.Table.ParentRelations["FK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_T_RMN_TYPE_ENUM_T_RMN_TYPE_TYPE_ENUM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMT_TEXTNull() {
                return this.IsNull(this.tableT_RMN_TYPE_ENUM.RMT_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMT_TEXTNull() {
                this[this.tableT_RMN_TYPE_ENUM.RMT_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_RMN_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_RMN_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_RMN_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_RMN_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_RMN_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_RMN_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EmailRow : global::System.Data.DataRow {
            
            private EmailDataTable tableEmail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmail = ((EmailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tableEmail.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Password {
                get {
                    try {
                        return ((string)(this[this.tableEmail.PasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Password\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    try {
                        return ((int)(this[this.tableEmail.UserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserID\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SecretKey {
                get {
                    try {
                        return ((string)(this[this.tableEmail.SecretKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecretKey\' in table \'Email\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEmail.SecretKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tableEmail.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tableEmail.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPasswordNull() {
                return this.IsNull(this.tableEmail.PasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPasswordNull() {
                this[this.tableEmail.PasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserIDNull() {
                return this.IsNull(this.tableEmail.UserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserIDNull() {
                this[this.tableEmail.UserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecretKeyNull() {
                return this.IsNull(this.tableEmail.SecretKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecretKeyNull() {
                this[this.tableEmail.SecretKeyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_DOMAIN_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_DOMAIN_TYPE_ENUMDataTable tableT_DOMAIN_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_DOMAIN_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_DOMAIN_TYPE_ENUM = ((T_DOMAIN_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DMT_CODE {
                get {
                    return ((int)(this[this.tableT_DOMAIN_TYPE_ENUM.DMT_CODEColumn]));
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.DMT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DMT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_DOMAIN_TYPE_ENUM.DMT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.DMT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DMT_DOMAIN {
                get {
                    return ((string)(this[this.tableT_DOMAIN_TYPE_ENUM.DMT_DOMAINColumn]));
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.DMT_DOMAINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DMT_SERVICE_NAME {
                get {
                    return ((string)(this[this.tableT_DOMAIN_TYPE_ENUM.DMT_SERVICE_NAMEColumn]));
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.DMT_SERVICE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DMT_SRC {
                get {
                    try {
                        return ((string)(this[this.tableT_DOMAIN_TYPE_ENUM.DMT_SRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DMT_SRC\' in table \'T_DOMAIN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.DMT_SRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DMT_FETCHER_CODE {
                get {
                    return ((int)(this[this.tableT_DOMAIN_TYPE_ENUM.DMT_FETCHER_CODEColumn]));
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.DMT_FETCHER_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_DOMAIN_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_DOMAIN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_DOMAIN_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_DOMAIN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_DOMAIN_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_DOMAIN_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_DOMAIN_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDMT_SRCNull() {
                return this.IsNull(this.tableT_DOMAIN_TYPE_ENUM.DMT_SRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDMT_SRCNull() {
                this[this.tableT_DOMAIN_TYPE_ENUM.DMT_SRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_DOMAIN_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_DOMAIN_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_DOMAIN_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_DOMAIN_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_DOMAIN_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_DOMAIN_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_CONTACT_FETCHER_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_CONTACT_FETCHER_TYPE_ENUMDataTable tableT_CONTACT_FETCHER_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_CONTACT_FETCHER_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_CONTACT_FETCHER_TYPE_ENUM = ((T_CONTACT_FETCHER_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CFT_CODE {
                get {
                    return ((int)(this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.CFT_CODEColumn]));
                }
                set {
                    this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.CFT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CFT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.CFT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.CFT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_CONTACT_FETCHER_TYPE_ENUM\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_CONTACT_FETCHER_TYPE_ENUM\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_CONTACT_FETCHER_TYPE_ENUM\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_CONTACT_FETCHER_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_EDUCATION_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_EDUCATION_TYPEDataTable tableT_PROP_EDUCATION_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_EDUCATION_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_EDUCATION_TYPE = ((T_PROP_EDUCATION_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EDU_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_EDUCATION_TYPE.EDU_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_EDUCATION_TYPE.EDU_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EDU_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_EDUCATION_TYPE.EDU_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDU_DESCRIPTION\' in table \'T_PROP_EDUCATION_TYPE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_PROP_EDUCATION_TYPE.EDU_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEDU_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_EDUCATION_TYPE.EDU_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEDU_DESCRIPTIONNull() {
                this[this.tableT_PROP_EDUCATION_TYPE.EDU_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_INTERESTS_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_INTERESTS_TYPEDataTable tableT_PROP_INTERESTS_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_INTERESTS_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_INTERESTS_TYPE = ((T_PROP_INTERESTS_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int INT_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_INTERESTS_TYPE.INT_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_INTERESTS_TYPE.INT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INT_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_INTERESTS_TYPE.INT_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_DESCRIPTION\' in table \'T_PROP_INTERESTS_TYPE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_PROP_INTERESTS_TYPE.INT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINT_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_INTERESTS_TYPE.INT_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINT_DESCRIPTIONNull() {
                this[this.tableT_PROP_INTERESTS_TYPE.INT_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_OCCUPATION_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_OCCUPATION_TYPEDataTable tableT_PROP_OCCUPATION_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_OCCUPATION_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_OCCUPATION_TYPE = ((T_PROP_OCCUPATION_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OCU_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_OCCUPATION_TYPE.OCU_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_OCCUPATION_TYPE.OCU_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OCU_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_OCCUPATION_TYPE.OCU_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OCU_DESCRIPTION\' in table \'T_PROP_OCCUPATION_TYPE\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_OCCUPATION_TYPE.OCU_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOCU_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_OCCUPATION_TYPE.OCU_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOCU_DESCRIPTIONNull() {
                this[this.tableT_PROP_OCCUPATION_TYPE.OCU_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_RACE_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_RACE_TYPEDataTable tableT_PROP_RACE_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_RACE_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_RACE_TYPE = ((T_PROP_RACE_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RCE_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_RACE_TYPE.RCE_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_RACE_TYPE.RCE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCE_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_RACE_TYPE.RCE_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RCE_DESCRIPTION\' in table \'T_PROP_RACE_TYPE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_RACE_TYPE.RCE_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRCE_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_RACE_TYPE.RCE_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRCE_DESCRIPTIONNull() {
                this[this.tableT_PROP_RACE_TYPE.RCE_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_RELIGION_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_RELIGION_TYPEDataTable tableT_PROP_RELIGION_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_RELIGION_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_RELIGION_TYPE = ((T_PROP_RELIGION_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RLG_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_RELIGION_TYPE.RLG_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_RELIGION_TYPE.RLG_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RLG_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_RELIGION_TYPE.RLG_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RLG_DESCRIPTION\' in table \'T_PROP_RELIGION_TYPE\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_PROP_RELIGION_TYPE.RLG_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRLG_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_PROP_RELIGION_TYPE.RLG_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRLG_DESCRIPTIONNull() {
                this[this.tableT_PROP_RELIGION_TYPE.RLG_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_LINK_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_LINK_TYPE_ENUMDataTable tableT_LINK_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LINK_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_LINK_TYPE_ENUM = ((T_LINK_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LKT_CODE {
                get {
                    return ((int)(this[this.tableT_LINK_TYPE_ENUM.LKT_CODEColumn]));
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.LKT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LKT_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_TYPE_ENUM.LKT_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LKT_DESCRIPTION\' in table \'T_LINK_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.LKT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LKT_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_TYPE_ENUM.LKT_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LKT_TEXT\' in table \'T_LINK_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.LKT_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LKT_SRC {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_TYPE_ENUM.LKT_SRCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LKT_SRC\' in table \'T_LINK_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.LKT_SRCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LKT_LINK_ACTION_TYPE_1 {
                get {
                    try {
                        return ((int)(this[this.tableT_LINK_TYPE_ENUM.LKT_LINK_ACTION_TYPE_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LKT_LINK_ACTION_TYPE_1\' in table \'T_LINK_TYPE_ENUM\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.LKT_LINK_ACTION_TYPE_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LKT_LINK_ACTION_TYPE_2 {
                get {
                    return ((int)(this[this.tableT_LINK_TYPE_ENUM.LKT_LINK_ACTION_TYPE_2Column]));
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.LKT_LINK_ACTION_TYPE_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LKT_SMAP_PARAMETER_VISIBLE {
                get {
                    return ((bool)(this[this.tableT_LINK_TYPE_ENUM.LKT_SMAP_PARAMETER_VISIBLEColumn]));
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.LKT_SMAP_PARAMETER_VISIBLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_LINK_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_LINK_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_LINK_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_LINK_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLKT_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_LINK_TYPE_ENUM.LKT_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLKT_DESCRIPTIONNull() {
                this[this.tableT_LINK_TYPE_ENUM.LKT_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLKT_TEXTNull() {
                return this.IsNull(this.tableT_LINK_TYPE_ENUM.LKT_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLKT_TEXTNull() {
                this[this.tableT_LINK_TYPE_ENUM.LKT_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLKT_SRCNull() {
                return this.IsNull(this.tableT_LINK_TYPE_ENUM.LKT_SRCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLKT_SRCNull() {
                this[this.tableT_LINK_TYPE_ENUM.LKT_SRCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLKT_LINK_ACTION_TYPE_1Null() {
                return this.IsNull(this.tableT_LINK_TYPE_ENUM.LKT_LINK_ACTION_TYPE_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLKT_LINK_ACTION_TYPE_1Null() {
                this[this.tableT_LINK_TYPE_ENUM.LKT_LINK_ACTION_TYPE_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_LINK_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_LINK_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_LINK_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_LINK_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_LINK_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_LINK_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_SERIALIZERRow : global::System.Data.DataRow {
            
            private T_SERIALIZERDataTable tableT_SERIALIZER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SERIALIZERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_SERIALIZER = ((T_SERIALIZERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRL_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_SERIALIZER.SRL_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_SERIALIZER.SRL_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRL_KEY_1 {
                get {
                    try {
                        return ((string)(this[this.tableT_SERIALIZER.SRL_KEY_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SRL_KEY_1\' in table \'T_SERIALIZER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SERIALIZER.SRL_KEY_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SRL_KEY_2 {
                get {
                    try {
                        return ((string)(this[this.tableT_SERIALIZER.SRL_KEY_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SRL_KEY_2\' in table \'T_SERIALIZER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_SERIALIZER.SRL_KEY_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSRL_KEY_1Null() {
                return this.IsNull(this.tableT_SERIALIZER.SRL_KEY_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSRL_KEY_1Null() {
                this[this.tableT_SERIALIZER.SRL_KEY_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSRL_KEY_2Null() {
                return this.IsNull(this.tableT_SERIALIZER.SRL_KEY_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSRL_KEY_2Null() {
                this[this.tableT_SERIALIZER.SRL_KEY_2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_LINK_ACTION_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_LINK_ACTION_TYPE_ENUMDataTable tableT_LINK_ACTION_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_LINK_ACTION_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_LINK_ACTION_TYPE_ENUM = ((T_LINK_ACTION_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAT_CODE {
                get {
                    return ((int)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_CODEColumn]));
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAT_SOURCE_LINK_TYPE {
                get {
                    try {
                        return ((int)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_SOURCE_LINK_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAT_SOURCE_LINK_TYPE\' in table \'T_LINK_ACTION_TYPE_ENUM\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_SOURCE_LINK_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAT_NAME\' in table \'T_LINK_ACTION_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAT_TEXT {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_TEXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAT_TEXT\' in table \'T_LINK_ACTION_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_TEXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAT_TARGET_LINK_TYPE {
                get {
                    return ((int)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_TARGET_LINK_TYPEColumn]));
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_TARGET_LINK_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAT_BUTTON_SIZE_CODE {
                get {
                    return ((int)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_BUTTON_SIZE_CODEColumn]));
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_BUTTON_SIZE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAT_RMN_TYPE {
                get {
                    try {
                        return ((int)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_RMN_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAT_RMN_TYPE\' in table \'T_LINK_ACTION_TYPE_ENUM\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_RMN_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LAT_EMAIL_BOX_TYPE {
                get {
                    try {
                        return ((int)(this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_EMAIL_BOX_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAT_EMAIL_BOX_TYPE\' in table \'T_LINK_ACTION_TYPE_ENUM\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_EMAIL_BOX_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_LINK_ACTION_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_LINK_ACTION_TYPE_ENUM\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_LINK_ACTION_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAT_SOURCE_LINK_TYPENull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.LAT_SOURCE_LINK_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAT_SOURCE_LINK_TYPENull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_SOURCE_LINK_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAT_NAMENull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.LAT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAT_NAMENull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAT_TEXTNull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.LAT_TEXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAT_TEXTNull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_TEXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAT_RMN_TYPENull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.LAT_RMN_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAT_RMN_TYPENull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_RMN_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAT_EMAIL_BOX_TYPENull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.LAT_EMAIL_BOX_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAT_EMAIL_BOX_TYPENull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.LAT_EMAIL_BOX_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_LINK_ACTION_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_EMAIL_BOX_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_EMAIL_BOX_TYPE_ENUMDataTable tableT_EMAIL_BOX_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_EMAIL_BOX_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_EMAIL_BOX_TYPE_ENUM = ((T_EMAIL_BOX_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EBT_CODE {
                get {
                    return ((int)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_CODEColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EBT_HOLD_TIME_MINUTES {
                get {
                    return ((int)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_HOLD_TIME_MINUTESColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_HOLD_TIME_MINUTESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EBT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EBT_SUBJECT {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_SUBJECTColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_SUBJECTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EBT_PIC_URL {
                get {
                    return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_PIC_URLColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_PIC_URLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EBT_CLICK_HERE_TO {
                get {
                    try {
                        return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_CLICK_HERE_TOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EBT_CLICK_HERE_TO\' in table \'T_EMAIL_BOX_TYPE_ENUM\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_CLICK_HERE_TOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EBT_PATH {
                get {
                    try {
                        return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_PATHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EBT_PATH\' in table \'T_EMAIL_BOX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_PATHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EBT_QUERY_STRING {
                get {
                    try {
                        return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_QUERY_STRINGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EBT_QUERY_STRING\' in table \'T_EMAIL_BOX_TYPE_ENUM\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_QUERY_STRINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EBT_COUNTER {
                get {
                    return ((int)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_COUNTERColumn]));
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_COUNTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_EMAIL_BOX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_EMAIL_BOX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_EMAIL_BOX_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEBT_CLICK_HERE_TONull() {
                return this.IsNull(this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_CLICK_HERE_TOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEBT_CLICK_HERE_TONull() {
                this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_CLICK_HERE_TOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEBT_PATHNull() {
                return this.IsNull(this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_PATHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEBT_PATHNull() {
                this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_PATHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEBT_QUERY_STRINGNull() {
                return this.IsNull(this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_QUERY_STRINGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEBT_QUERY_STRINGNull() {
                this[this.tableT_EMAIL_BOX_TYPE_ENUM.EBT_QUERY_STRINGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_EMAIL_BOX_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_EMAIL_BOX_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_SETTINGRow : global::System.Data.DataRow {
            
            private T_SETTINGDataTable tableT_SETTING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_SETTINGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_SETTING = ((T_SETTINGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SET_ID {
                get {
                    return ((int)(this[this.tableT_SETTING.SET_IDColumn]));
                }
                set {
                    this[this.tableT_SETTING.SET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SET_MAX_ROWS_ON_SP_SELECT {
                get {
                    return ((int)(this[this.tableT_SETTING.SET_MAX_ROWS_ON_SP_SELECTColumn]));
                }
                set {
                    this[this.tableT_SETTING.SET_MAX_ROWS_ON_SP_SELECTColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_ADS_TYPERow : global::System.Data.DataRow {
            
            private T_ADS_TYPEDataTable tableT_ADS_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_ADS_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_ADS_TYPE = ((T_ADS_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ADS_CODE {
                get {
                    return ((int)(this[this.tableT_ADS_TYPE.ADS_CODEColumn]));
                }
                set {
                    this[this.tableT_ADS_TYPE.ADS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADS_DESCRIPTION {
                get {
                    if (this.IsADS_DESCRIPTIONNull()) {
                        return "(Empty)";
                    }
                    else {
                        return ((string)(this[this.tableT_ADS_TYPE.ADS_DESCRIPTIONColumn]));
                    }
                }
                set {
                    this[this.tableT_ADS_TYPE.ADS_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADS_STARTER_IMAGE {
                get {
                    return ((string)(this[this.tableT_ADS_TYPE.ADS_STARTER_IMAGEColumn]));
                }
                set {
                    this[this.tableT_ADS_TYPE.ADS_STARTER_IMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADS_SPLASH_LOADER_IMAGE {
                get {
                    return ((string)(this[this.tableT_ADS_TYPE.ADS_SPLASH_LOADER_IMAGEColumn]));
                }
                set {
                    this[this.tableT_ADS_TYPE.ADS_SPLASH_LOADER_IMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADS_REGISTRATION_APP_IMAGE {
                get {
                    return ((string)(this[this.tableT_ADS_TYPE.ADS_REGISTRATION_APP_IMAGEColumn]));
                }
                set {
                    this[this.tableT_ADS_TYPE.ADS_REGISTRATION_APP_IMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADS_DESCRIPTIONNull() {
                return this.IsNull(this.tableT_ADS_TYPE.ADS_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADS_DESCRIPTIONNull() {
                this[this.tableT_ADS_TYPE.ADS_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_PROP_LOCATION_VISIBILITY_TYPERow : global::System.Data.DataRow {
            
            private T_PROP_LOCATION_VISIBILITY_TYPEDataTable tableT_PROP_LOCATION_VISIBILITY_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_PROP_LOCATION_VISIBILITY_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_PROP_LOCATION_VISIBILITY_TYPE = ((T_PROP_LOCATION_VISIBILITY_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LVS_CODE {
                get {
                    return ((int)(this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.LVS_CODEColumn]));
                }
                set {
                    this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.LVS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LVS_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.LVS_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.LVS_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LVS_COMMENT {
                get {
                    return ((string)(this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.LVS_COMMENTColumn]));
                }
                set {
                    this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.LVS_COMMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_PROP_LOCATION_VISIBILITY_TYPE\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_PROP_LOCATION_VISIBILITY_TYPE\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_PROP_LOCATION_VISIBILITY_TYPE\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_PROP_LOCATION_VISIBILITY_TYPE.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_USER_LOCATION_TYPE_ENUMRow : global::System.Data.DataRow {
            
            private T_USER_LOCATION_TYPE_ENUMDataTable tableT_USER_LOCATION_TYPE_ENUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_USER_LOCATION_TYPE_ENUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_USER_LOCATION_TYPE_ENUM = ((T_USER_LOCATION_TYPE_ENUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ULT_CODE {
                get {
                    return ((int)(this[this.tableT_USER_LOCATION_TYPE_ENUM.ULT_CODEColumn]));
                }
                set {
                    this[this.tableT_USER_LOCATION_TYPE_ENUM.ULT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ULT_DESCRIPTION {
                get {
                    return ((string)(this[this.tableT_USER_LOCATION_TYPE_ENUM.ULT_DESCRIPTIONColumn]));
                }
                set {
                    this[this.tableT_USER_LOCATION_TYPE_ENUM.ULT_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValueCode {
                get {
                    try {
                        return ((int)(this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueCode\' in table \'T_USER_LOCATION_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueNameEnum {
                get {
                    try {
                        return ((string)(this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameEnumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueNameEnum\' in table \'T_USER_LOCATION_TYPE_ENUM\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameEnumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValueName {
                get {
                    try {
                        return ((string)(this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueName\' in table \'T_USER_LOCATION_TYPE_ENUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueCodeNull() {
                return this.IsNull(this.tableT_USER_LOCATION_TYPE_ENUM.ValueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueCodeNull() {
                this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameEnumNull() {
                return this.IsNull(this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameEnumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameEnumNull() {
                this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameEnumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValueNameNull() {
                return this.IsNull(this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValueNameNull() {
                this[this.tableT_USER_LOCATION_TYPE_ENUM.ValueNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DatePercent_T_USERRow : global::System.Data.DataRow {
            
            private DatePercent_T_USERDataTable tableDatePercent_T_USER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DatePercent_T_USERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDatePercent_T_USER = ((DatePercent_T_USERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_ID {
                get {
                    return ((int)(this[this.tableDatePercent_T_USER.USR_IDColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_UID {
                get {
                    try {
                        return ((string)(this[this.tableDatePercent_T_USER.USR_UIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_UID\' in table \'DatePercent_T_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDatePercent_T_USER.USR_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_NAME\' in table \'DatePercent_T_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_V_NAME {
                get {
                    try {
                        return ((string)(this[this.tableDatePercent_T_USER.USR_V_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_V_NAME\' in table \'DatePercent_T_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_V_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_PIC_URL {
                get {
                    try {
                        return ((string)(this[this.tableDatePercent_T_USER.USR_PIC_URLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PIC_URL\' in table \'DatePercent_T_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PIC_URLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime USR_ADDED_DATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDatePercent_T_USER.USR_ADDED_DATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_ADDED_DATETIME\' in table \'DatePercent_T_USER\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_ADDED_DATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool USR_SUBSCRIBE {
                get {
                    return ((bool)(this[this.tableDatePercent_T_USER.USR_SUBSCRIBEColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_SUBSCRIBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_PROFILE_URL {
                get {
                    try {
                        return ((string)(this[this.tableDatePercent_T_USER.USR_PROFILE_URLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROFILE_URL\' in table \'DatePercent_T_USER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROFILE_URLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_TIMEZONE {
                get {
                    return ((int)(this[this.tableDatePercent_T_USER.USR_TIMEZONEColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_TIMEZONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_LOCALE {
                get {
                    return ((string)(this[this.tableDatePercent_T_USER.USR_LOCALEColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_LOCALEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime USR_PROP_BIRTHDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDatePercent_T_USER.USR_PROP_BIRTHDATEColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_BIRTHDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_SEX_CODE {
                get {
                    return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_SEX_CODEColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_SEX_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_MATCH_SEX_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_MATCH_SEX_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_MATCH_SEX_CODE\' in table \'DatePercent_T_USER\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_MATCH_SEX_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_STATUS_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_STATUS_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_STATUS_CODE\' in table \'DatePercent_T_USER\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_STATUS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_HEIGHT_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_HEIGHT_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_HEIGHT_CODE\' in table \'DatePercent_T_USER\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_HEIGHT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_WEIGHT_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_WEIGHT_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_WEIGHT_CODE\' in table \'DatePercent_T_USER\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_WEIGHT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_HAIR_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_HAIR_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_HAIR_CODE\' in table \'DatePercent_T_USER\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_HAIR_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_EYE_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_EYE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_EYE_CODE\' in table \'DatePercent_T_USER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_EYE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_BODY_STYLE_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_BODY_STYLE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_BODY_STYLE_CODE\' in table \'DatePercent_T_USER\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_BODY_STYLE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_RELIGION_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_RELIGION_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_RELIGION_CODE\' in table \'DatePercent_T_USER\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_RELIGION_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_RACE_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_RACE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_RACE_CODE\' in table \'DatePercent_T_USER\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_RACE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_EDUCATION_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_EDUCATION_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_EDUCATION_CODE\' in table \'DatePercent_T_USER\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_EDUCATION_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_OCCUPATION_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_OCCUPATION_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_OCCUPATION_CODE\' in table \'DatePercent_T_USER\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_OCCUPATION_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_PROP_ABOUT_ME {
                get {
                    try {
                        return ((string)(this[this.tableDatePercent_T_USER.USR_PROP_ABOUT_MEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_ABOUT_ME\' in table \'DatePercent_T_USER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_ABOUT_MEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_HAVE_KIDS_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_HAVE_KIDS_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_HAVE_KIDS_CODE\' in table \'DatePercent_T_USER\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_HAVE_KIDS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_CUSTODY_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_CUSTODY_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_CUSTODY_CODE\' in table \'DatePercent_T_USER\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_CUSTODY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_WANT_KIDS_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_WANT_KIDS_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_WANT_KIDS_CODE\' in table \'DatePercent_T_USER\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_WANT_KIDS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_SMOKE_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_SMOKE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_SMOKE_CODE\' in table \'DatePercent_T_USER\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_SMOKE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_DRINK_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_DRINK_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_DRINK_CODE\' in table \'DatePercent_T_USER\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_DRINK_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_ZODIAC_SIGN_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_ZODIAC_SIGN_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_ZODIAC_SIGN_CODE\' in table \'DatePercent_T_USER\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_ZODIAC_SIGN_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USR_PROP_MY_IDEAL_MATCH {
                get {
                    try {
                        return ((string)(this[this.tableDatePercent_T_USER.USR_PROP_MY_IDEAL_MATCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_MY_IDEAL_MATCH\' in table \'DatePercent_T_USER\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_MY_IDEAL_MATCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_AGE_RANGE_FROM_CODE {
                get {
                    return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_AGE_RANGE_FROM_CODEColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_AGE_RANGE_FROM_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_AGE_RANGE_TO_CODE {
                get {
                    return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_AGE_RANGE_TO_CODEColumn]));
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_AGE_RANGE_TO_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_MATCH_HAVE_KIDS_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_MATCH_HAVE_KIDS_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_MATCH_HAVE_KIDS_CODE\' in table \'DatePercent_T_USER" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_MATCH_HAVE_KIDS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_MATCH_WANT_KIDS_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_MATCH_WANT_KIDS_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_MATCH_WANT_KIDS_CODE\' in table \'DatePercent_T_USER" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_MATCH_WANT_KIDS_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_MATCH_SMOKE_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_MATCH_SMOKE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_MATCH_SMOKE_CODE\' in table \'DatePercent_T_USER\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_MATCH_SMOKE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int USR_PROP_MATCH_DRINK_CODE {
                get {
                    try {
                        return ((int)(this[this.tableDatePercent_T_USER.USR_PROP_MATCH_DRINK_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USR_PROP_MATCH_DRINK_CODE\' in table \'DatePercent_T_USER\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatePercent_T_USER.USR_PROP_MATCH_DRINK_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_UIDNull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_UIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_UIDNull() {
                this[this.tableDatePercent_T_USER.USR_UIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_NAMENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_NAMENull() {
                this[this.tableDatePercent_T_USER.USR_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_V_NAMENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_V_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_V_NAMENull() {
                this[this.tableDatePercent_T_USER.USR_V_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PIC_URLNull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PIC_URLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PIC_URLNull() {
                this[this.tableDatePercent_T_USER.USR_PIC_URLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_ADDED_DATETIMENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_ADDED_DATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_ADDED_DATETIMENull() {
                this[this.tableDatePercent_T_USER.USR_ADDED_DATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROFILE_URLNull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROFILE_URLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROFILE_URLNull() {
                this[this.tableDatePercent_T_USER.USR_PROFILE_URLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_MATCH_SEX_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_MATCH_SEX_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_MATCH_SEX_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_MATCH_SEX_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_STATUS_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_STATUS_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_STATUS_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_STATUS_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_HEIGHT_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_HEIGHT_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_HEIGHT_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_HEIGHT_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_WEIGHT_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_WEIGHT_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_WEIGHT_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_WEIGHT_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_HAIR_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_HAIR_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_HAIR_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_HAIR_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_EYE_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_EYE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_EYE_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_EYE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_BODY_STYLE_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_BODY_STYLE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_BODY_STYLE_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_BODY_STYLE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_RELIGION_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_RELIGION_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_RELIGION_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_RELIGION_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_RACE_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_RACE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_RACE_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_RACE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_EDUCATION_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_EDUCATION_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_EDUCATION_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_EDUCATION_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_OCCUPATION_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_OCCUPATION_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_OCCUPATION_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_OCCUPATION_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_ABOUT_MENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_ABOUT_MEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_ABOUT_MENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_ABOUT_MEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_HAVE_KIDS_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_HAVE_KIDS_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_HAVE_KIDS_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_HAVE_KIDS_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_CUSTODY_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_CUSTODY_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_CUSTODY_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_CUSTODY_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_WANT_KIDS_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_WANT_KIDS_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_WANT_KIDS_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_WANT_KIDS_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_SMOKE_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_SMOKE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_SMOKE_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_SMOKE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_DRINK_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_DRINK_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_DRINK_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_DRINK_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_ZODIAC_SIGN_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_ZODIAC_SIGN_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_ZODIAC_SIGN_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_ZODIAC_SIGN_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_MY_IDEAL_MATCHNull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_MY_IDEAL_MATCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_MY_IDEAL_MATCHNull() {
                this[this.tableDatePercent_T_USER.USR_PROP_MY_IDEAL_MATCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_MATCH_HAVE_KIDS_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_MATCH_HAVE_KIDS_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_MATCH_HAVE_KIDS_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_MATCH_HAVE_KIDS_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_MATCH_WANT_KIDS_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_MATCH_WANT_KIDS_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_MATCH_WANT_KIDS_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_MATCH_WANT_KIDS_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_MATCH_SMOKE_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_MATCH_SMOKE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_MATCH_SMOKE_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_MATCH_SMOKE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSR_PROP_MATCH_DRINK_CODENull() {
                return this.IsNull(this.tableDatePercent_T_USER.USR_PROP_MATCH_DRINK_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSR_PROP_MATCH_DRINK_CODENull() {
                this[this.tableDatePercent_T_USER.USR_PROP_MATCH_DRINK_CODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_BUTTON_SIZE_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_BUTTON_SIZE_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BUTTON_SIZE_TYPE_ENUMRowChangeEvent(T_BUTTON_SIZE_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_BUTTON_SIZE_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_CULTURERowChangeEvent : global::System.EventArgs {
            
            private T_CULTURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURERowChangeEvent(T_CULTURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_CULTURE_DATE_FORMAT_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURE_DATE_FORMAT_TYPE_ENUMRowChangeEvent(T_CULTURE_DATE_FORMAT_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CULTURE_DATE_FORMAT_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_DISTANCE_UNITS_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRowChangeEvent(T_DISTANCE_UNITS_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DISTANCE_UNITS_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_FAQ_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_FAQ_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPERowChangeEvent(T_FAQ_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQ_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_LIST_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_LIST_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LIST_TYPE_ENUMRowChangeEvent(T_LIST_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LIST_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_AGE_RANGE_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_AGE_RANGE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_AGE_RANGE_TYPERowChangeEvent(T_PROP_AGE_RANGE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_AGE_RANGE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_CUSTODY_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_CUSTODY_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_CUSTODY_TYPERowChangeEvent(T_PROP_CUSTODY_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_CUSTODY_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_DRINK_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_DRINK_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_DRINK_TYPERowChangeEvent(T_PROP_DRINK_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_DRINK_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_EYE_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_EYE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EYE_TYPERowChangeEvent(T_PROP_EYE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EYE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_HAIR_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_HAIR_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAIR_TYPERowChangeEvent(T_PROP_HAIR_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAIR_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_HAVE_KIDS_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_HAVE_KIDS_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAVE_KIDS_TYPERowChangeEvent(T_PROP_HAVE_KIDS_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HAVE_KIDS_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_HEIGHT_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_HEIGHT_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HEIGHT_TYPERowChangeEvent(T_PROP_HEIGHT_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_HEIGHT_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_LANGUAGE_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_LANGUAGE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LANGUAGE_TYPERowChangeEvent(T_PROP_LANGUAGE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LANGUAGE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_MATCH_SEX_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_MATCH_SEX_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_MATCH_SEX_TYPERowChangeEvent(T_PROP_MATCH_SEX_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_MATCH_SEX_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_RELATIONSHIP_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_RELATIONSHIP_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELATIONSHIP_TYPERowChangeEvent(T_PROP_RELATIONSHIP_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELATIONSHIP_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_SEX_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_PROP_SEX_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SEX_TYPE_ENUMRowChangeEvent(T_PROP_SEX_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SEX_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_SMOKE_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_SMOKE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SMOKE_TYPERowChangeEvent(T_PROP_SMOKE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_SMOKE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_STATUS_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_STATUS_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_STATUS_TYPERowChangeEvent(T_PROP_STATUS_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_STATUS_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_WANT_KIDS_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_WANT_KIDS_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WANT_KIDS_TYPERowChangeEvent(T_PROP_WANT_KIDS_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WANT_KIDS_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_WEIGHT_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_WEIGHT_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WEIGHT_TYPERowChangeEvent(T_PROP_WEIGHT_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_WEIGHT_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_ZODIAC_SIGN_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_ZODIAC_SIGN_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_ZODIAC_SIGN_TYPERowChangeEvent(T_PROP_ZODIAC_SIGN_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_ZODIAC_SIGN_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_RESULT_VIEW_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_RESULT_VIEW_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RESULT_VIEW_TYPE_ENUMRowChangeEvent(T_RESULT_VIEW_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RESULT_VIEW_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_RMN_TYPE_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_RMN_TYPE_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMRowChangeEvent(T_RMN_TYPE_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_TWINK_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_TWINK_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPERowChangeEvent(T_TWINK_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINK_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_USER_INVITEE_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_USER_INVITEE_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_INVITEE_TYPE_ENUMRowChangeEvent(T_USER_INVITEE_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_INVITEE_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_TWINKRowChangeEvent : global::System.EventArgs {
            
            private T_TWINKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKRowChangeEvent(T_TWINKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_TWINKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_FAQRowChangeEvent : global::System.EventArgs {
            
            private T_FAQRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQRowChangeEvent(T_FAQRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_FAQRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_BODY_STYLE_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_BODY_STYLE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_BODY_STYLE_TYPERowChangeEvent(T_PROP_BODY_STYLE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_BODY_STYLE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_RMN_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_RMN_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMRowChangeEvent(T_RMN_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_RMN_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EmailRowChangeEvent : global::System.EventArgs {
            
            private EmailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmailRowChangeEvent(EmailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_DOMAIN_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_DOMAIN_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DOMAIN_TYPE_ENUMRowChangeEvent(T_DOMAIN_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_DOMAIN_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_CONTACT_FETCHER_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_CONTACT_FETCHER_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTACT_FETCHER_TYPE_ENUMRowChangeEvent(T_CONTACT_FETCHER_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_CONTACT_FETCHER_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_EDUCATION_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_EDUCATION_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EDUCATION_TYPERowChangeEvent(T_PROP_EDUCATION_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_EDUCATION_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_INTERESTS_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_INTERESTS_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_INTERESTS_TYPERowChangeEvent(T_PROP_INTERESTS_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_INTERESTS_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_OCCUPATION_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_OCCUPATION_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_OCCUPATION_TYPERowChangeEvent(T_PROP_OCCUPATION_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_OCCUPATION_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_RACE_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_RACE_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RACE_TYPERowChangeEvent(T_PROP_RACE_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RACE_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_RELIGION_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_RELIGION_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELIGION_TYPERowChangeEvent(T_PROP_RELIGION_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_RELIGION_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_LINK_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_LINK_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_TYPE_ENUMRowChangeEvent(T_LINK_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_SERIALIZERRowChangeEvent : global::System.EventArgs {
            
            private T_SERIALIZERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRowChangeEvent(T_SERIALIZERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SERIALIZERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_LINK_ACTION_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_LINK_ACTION_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_ACTION_TYPE_ENUMRowChangeEvent(T_LINK_ACTION_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_LINK_ACTION_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_EMAIL_BOX_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_EMAIL_BOX_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOX_TYPE_ENUMRowChangeEvent(T_EMAIL_BOX_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_EMAIL_BOX_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_SETTINGRowChangeEvent : global::System.EventArgs {
            
            private T_SETTINGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SETTINGRowChangeEvent(T_SETTINGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_SETTINGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_ADS_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_ADS_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_ADS_TYPERowChangeEvent(T_ADS_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_ADS_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_PROP_LOCATION_VISIBILITY_TYPERowChangeEvent : global::System.EventArgs {
            
            private T_PROP_LOCATION_VISIBILITY_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LOCATION_VISIBILITY_TYPERowChangeEvent(T_PROP_LOCATION_VISIBILITY_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_PROP_LOCATION_VISIBILITY_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_USER_LOCATION_TYPE_ENUMRowChangeEvent : global::System.EventArgs {
            
            private T_USER_LOCATION_TYPE_ENUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_LOCATION_TYPE_ENUMRowChangeEvent(T_USER_LOCATION_TYPE_ENUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_USER_LOCATION_TYPE_ENUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DatePercent_T_USERRowChangeEvent : global::System.EventArgs {
            
            private DatePercent_T_USERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatePercent_T_USERRowChangeEvent(DatePercent_T_USERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DatePercent_T_USERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591