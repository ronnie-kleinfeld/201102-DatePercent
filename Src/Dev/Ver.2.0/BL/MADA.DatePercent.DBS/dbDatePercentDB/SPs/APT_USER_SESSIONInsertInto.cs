//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by the Database Schema tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
//
//     Exception should be handled in a higher layer.
//
//     generation time: 07/12/2011 12:25
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using Microsoft.Practices.EnterpriseLibrary.Data;

namespace MADA.DatePercent.DBS.dbDatePercentDB.SPs
{
public class procAPT_USER_SESSIONInsertInto
{
public const string _Name = "APT_USER_SESSIONInsertInto";
public const string _Caption = "APT_ USER_ SESSIONInsert Into";

public static SqlCommand SqlCommand()
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "APT_USER_SESSIONInsertInto";
SqlParameterCollection(cmd.Parameters);
return cmd;
}
public static SqlCommand SqlCommand(
System.Nullable<int> p_iUSD_ID, string p_strUSD_SID, System.Nullable<int> p_iUSD_USER_ID)
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "APT_USER_SESSIONInsertInto";
SqlParameterCollection(cmd.Parameters, p_iUSD_ID, p_strUSD_SID, p_iUSD_USER_ID);
return cmd;
}
public static void SqlCommandOutput(
System.Data.SqlClient.SqlCommand p_cmd,
out object p_iUSD_ID)
{
p_iUSD_ID = p_cmd.Parameters["@USD_ID"].Value;
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parUSD_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUSD_SID._SqlParameter());
p_oSqlParameterCollection.Add(parUSD_USER_ID._SqlParameter());
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection
, System.Nullable<int> p_iUSD_ID, string p_strUSD_SID, System.Nullable<int> p_iUSD_USER_ID)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parUSD_ID._SqlParameter());
p_oSqlParameterCollection.Add(parUSD_SID._SqlParameter(p_strUSD_SID));
p_oSqlParameterCollection.Add(parUSD_USER_ID._SqlParameter(p_iUSD_USER_ID));
}
public class parUSD_ID
{
public const string _Name = "@USD_ID";
public const string _Caption = "@ USD_ ID";
public const string _ParentName = "APT_USER_SESSIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_USER_SESSIONInsertInto.DefaultView.[0].@USD_ID";
public const string _BindDataReader = "[@USD_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Output;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameter("@USD_ID", 10, 0, 4, SqlDbType.Int, ParameterDirection.Output, true);
}
}
public class parUSD_SID
{
public const string _Name = "@USD_SID";
public const string _Caption = "@ USD_ SID";
public const string _ParentName = "APT_USER_SESSIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 50;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_USER_SESSIONInsertInto.DefaultView.[0].@USD_SID";
public const string _BindDataReader = "[@USD_SID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_SID", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_SID", 50, -1, 50, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parUSD_USER_ID
{
public const string _Name = "@USD_USER_ID";
public const string _Caption = "@ USD_ USER_ ID";
public const string _ParentName = "APT_USER_SESSIONInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_USER_SESSIONInsertInto.DefaultView.[0].@USD_USER_ID";
public const string _BindDataReader = "[@USD_USER_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(System.Nullable<int> Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@USD_USER_ID", 10, 0, 4, SqlDbType.Int, "int", ParameterDirection.Input, true, false, "", Value);
}
}
public class inUSD_SID : parUSD_SID {}
public class inUSD_USER_ID : parUSD_USER_ID {}
public class outUSD_ID : parUSD_ID {}
public static int ExecuteNonQuery(
System.Nullable<int> p_iUSD_ID, string p_strUSD_SID, System.Nullable<int> p_iUSD_USER_ID,out object p_iUSD_IDOut)
{
try
{
Microsoft.Practices.EnterpriseLibrary.Data.Database db = DatabaseFactory.CreateDatabase();
SqlCommand cmd = SqlCommand(p_iUSD_ID, p_strUSD_SID, p_iUSD_USER_ID);
int iResult = db.ExecuteNonQuery(cmd);
SqlCommandOutput(cmd, out p_iUSD_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
public static int ExecuteNonQuery(
System.Nullable<int> p_iUSD_ID, string p_strUSD_SID, System.Nullable<int> p_iUSD_USER_ID,out object p_iUSD_IDOut,Microsoft.Practices.EnterpriseLibrary.Data.Database p_db,System.Data.Common.DbTransaction p_trn)
{
try
{
SqlCommand cmd = SqlCommand(p_iUSD_ID, p_strUSD_SID, p_iUSD_USER_ID);
int iResult = p_db.ExecuteNonQuery(cmd, p_trn);
SqlCommandOutput(cmd, out p_iUSD_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
}
}
