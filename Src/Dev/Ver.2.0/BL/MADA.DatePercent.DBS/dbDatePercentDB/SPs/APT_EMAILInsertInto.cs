//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by the Database Schema tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
//
//     Exception should be handled in a higher layer.
//
//     generation time: 07/12/2011 12:25
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using Microsoft.Practices.EnterpriseLibrary.Data;

namespace MADA.DatePercent.DBS.dbDatePercentDB.SPs
{
public class procAPT_EMAILInsertInto
{
public const string _Name = "APT_EMAILInsertInto";
public const string _Caption = "APT_ EMAILInsert Into";

public static SqlCommand SqlCommand()
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "APT_EMAILInsertInto";
SqlParameterCollection(cmd.Parameters);
return cmd;
}
public static SqlCommand SqlCommand(
string p_strEML_BODY, string p_strEML_GETTER_EMAIL, string p_strEML_GETTER_NAME, System.Nullable<int> p_iEML_ID, string p_strEML_SENDER_NAME, string p_strEML_SUBJECT)
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "APT_EMAILInsertInto";
SqlParameterCollection(cmd.Parameters, p_strEML_BODY, p_strEML_GETTER_EMAIL, p_strEML_GETTER_NAME, p_iEML_ID, p_strEML_SENDER_NAME, p_strEML_SUBJECT);
return cmd;
}
public static void SqlCommandOutput(
System.Data.SqlClient.SqlCommand p_cmd,
out object p_iEML_ID)
{
p_iEML_ID = p_cmd.Parameters["@EML_ID"].Value;
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parEML_BODY._SqlParameter());
p_oSqlParameterCollection.Add(parEML_GETTER_EMAIL._SqlParameter());
p_oSqlParameterCollection.Add(parEML_GETTER_NAME._SqlParameter());
p_oSqlParameterCollection.Add(parEML_ID._SqlParameter());
p_oSqlParameterCollection.Add(parEML_SENDER_NAME._SqlParameter());
p_oSqlParameterCollection.Add(parEML_SUBJECT._SqlParameter());
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection
, string p_strEML_BODY, string p_strEML_GETTER_EMAIL, string p_strEML_GETTER_NAME, System.Nullable<int> p_iEML_ID, string p_strEML_SENDER_NAME, string p_strEML_SUBJECT)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parEML_BODY._SqlParameter(p_strEML_BODY));
p_oSqlParameterCollection.Add(parEML_GETTER_EMAIL._SqlParameter(p_strEML_GETTER_EMAIL));
p_oSqlParameterCollection.Add(parEML_GETTER_NAME._SqlParameter(p_strEML_GETTER_NAME));
p_oSqlParameterCollection.Add(parEML_ID._SqlParameter());
p_oSqlParameterCollection.Add(parEML_SENDER_NAME._SqlParameter(p_strEML_SENDER_NAME));
p_oSqlParameterCollection.Add(parEML_SUBJECT._SqlParameter(p_strEML_SUBJECT));
}
public class parEML_BODY
{
public const string _Name = "@EML_BODY";
public const string _Caption = "@ EML_ BODY";
public const string _ParentName = "APT_EMAILInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 0;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_EMAILInsertInto.DefaultView.[0].@EML_BODY";
public const string _BindDataReader = "[@EML_BODY]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_BODY", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_BODY", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parEML_GETTER_EMAIL
{
public const string _Name = "@EML_GETTER_EMAIL";
public const string _Caption = "@ EML_ GETTER_ EMAIL";
public const string _ParentName = "APT_EMAILInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_EMAILInsertInto.DefaultView.[0].@EML_GETTER_EMAIL";
public const string _BindDataReader = "[@EML_GETTER_EMAIL]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_GETTER_EMAIL", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_GETTER_EMAIL", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parEML_GETTER_NAME
{
public const string _Name = "@EML_GETTER_NAME";
public const string _Caption = "@ EML_ GETTER_ NAME";
public const string _ParentName = "APT_EMAILInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_EMAILInsertInto.DefaultView.[0].@EML_GETTER_NAME";
public const string _BindDataReader = "[@EML_GETTER_NAME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_GETTER_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_GETTER_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parEML_ID
{
public const string _Name = "@EML_ID";
public const string _Caption = "@ EML_ ID";
public const string _ParentName = "APT_EMAILInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_EMAILInsertInto.DefaultView.[0].@EML_ID";
public const string _BindDataReader = "[@EML_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Output;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameter("@EML_ID", 10, 0, 4, SqlDbType.Int, ParameterDirection.Output, true);
}
}
public class parEML_SENDER_NAME
{
public const string _Name = "@EML_SENDER_NAME";
public const string _Caption = "@ EML_ SENDER_ NAME";
public const string _ParentName = "APT_EMAILInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_EMAILInsertInto.DefaultView.[0].@EML_SENDER_NAME";
public const string _BindDataReader = "[@EML_SENDER_NAME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_SENDER_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_SENDER_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parEML_SUBJECT
{
public const string _Name = "@EML_SUBJECT";
public const string _Caption = "@ EML_ SUBJECT";
public const string _ParentName = "APT_EMAILInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "APT_EMAILInsertInto.DefaultView.[0].@EML_SUBJECT";
public const string _BindDataReader = "[@EML_SUBJECT]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_SUBJECT", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EML_SUBJECT", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class inEML_BODY : parEML_BODY {}
public class inEML_GETTER_EMAIL : parEML_GETTER_EMAIL {}
public class inEML_GETTER_NAME : parEML_GETTER_NAME {}
public class inEML_SENDER_NAME : parEML_SENDER_NAME {}
public class inEML_SUBJECT : parEML_SUBJECT {}
public class outEML_ID : parEML_ID {}
public static int ExecuteNonQuery(
string p_strEML_BODY, string p_strEML_GETTER_EMAIL, string p_strEML_GETTER_NAME, System.Nullable<int> p_iEML_ID, string p_strEML_SENDER_NAME, string p_strEML_SUBJECT,out object p_iEML_IDOut)
{
try
{
Microsoft.Practices.EnterpriseLibrary.Data.Database db = DatabaseFactory.CreateDatabase();
SqlCommand cmd = SqlCommand(p_strEML_BODY, p_strEML_GETTER_EMAIL, p_strEML_GETTER_NAME, p_iEML_ID, p_strEML_SENDER_NAME, p_strEML_SUBJECT);
int iResult = db.ExecuteNonQuery(cmd);
SqlCommandOutput(cmd, out p_iEML_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
public static int ExecuteNonQuery(
string p_strEML_BODY, string p_strEML_GETTER_EMAIL, string p_strEML_GETTER_NAME, System.Nullable<int> p_iEML_ID, string p_strEML_SENDER_NAME, string p_strEML_SUBJECT,out object p_iEML_IDOut,Microsoft.Practices.EnterpriseLibrary.Data.Database p_db,System.Data.Common.DbTransaction p_trn)
{
try
{
SqlCommand cmd = SqlCommand(p_strEML_BODY, p_strEML_GETTER_EMAIL, p_strEML_GETTER_NAME, p_iEML_ID, p_strEML_SENDER_NAME, p_strEML_SUBJECT);
int iResult = p_db.ExecuteNonQuery(cmd, p_trn);
SqlCommandOutput(cmd, out p_iEML_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
}
}
