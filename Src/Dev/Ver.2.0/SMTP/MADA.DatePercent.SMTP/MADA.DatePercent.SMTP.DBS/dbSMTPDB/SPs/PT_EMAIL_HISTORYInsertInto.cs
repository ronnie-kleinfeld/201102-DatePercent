//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by the Database Schema tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
//
//     Exception should be handled in a higher layer.
//
//     generation time: 20/12/2011 16:10
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using Microsoft.Practices.EnterpriseLibrary.Data;

namespace MADA.DatePercent.SMTP.DBS.dbSmtpDB.SPs
{
public class procPT_EMAIL_HISTORYInsertInto
{
public const string _Name = "PT_EMAIL_HISTORYInsertInto";
public const string _Caption = "PT_ EMAIL_ HISTORYInsert Into";

public static SqlCommand SqlCommand()
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "PT_EMAIL_HISTORYInsertInto";
SqlParameterCollection(cmd.Parameters);
return cmd;
}
public static SqlCommand SqlCommand(
string p_strEMH_BODY, string p_strEMH_GETTER_EMAIL, string p_strEMH_GETTER_NAME, System.Nullable<int> p_iEMH_ID, string p_strEMH_SUBJECT)
{
System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand();
cmd.CommandType = CommandType.StoredProcedure;
cmd.CommandText = "PT_EMAIL_HISTORYInsertInto";
SqlParameterCollection(cmd.Parameters, p_strEMH_BODY, p_strEMH_GETTER_EMAIL, p_strEMH_GETTER_NAME, p_iEMH_ID, p_strEMH_SUBJECT);
return cmd;
}
public static void SqlCommandOutput(
System.Data.SqlClient.SqlCommand p_cmd,
out object p_iEMH_ID)
{
p_iEMH_ID = p_cmd.Parameters["@EMH_ID"].Value;
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parEMH_BODY._SqlParameter());
p_oSqlParameterCollection.Add(parEMH_GETTER_EMAIL._SqlParameter());
p_oSqlParameterCollection.Add(parEMH_GETTER_NAME._SqlParameter());
p_oSqlParameterCollection.Add(parEMH_ID._SqlParameter());
p_oSqlParameterCollection.Add(parEMH_SUBJECT._SqlParameter());
}
public static void SqlParameterCollection(
System.Data.SqlClient.SqlParameterCollection p_oSqlParameterCollection
, string p_strEMH_BODY, string p_strEMH_GETTER_EMAIL, string p_strEMH_GETTER_NAME, System.Nullable<int> p_iEMH_ID, string p_strEMH_SUBJECT)
{
p_oSqlParameterCollection.Clear();
p_oSqlParameterCollection.Add(parEMH_BODY._SqlParameter(p_strEMH_BODY));
p_oSqlParameterCollection.Add(parEMH_GETTER_EMAIL._SqlParameter(p_strEMH_GETTER_EMAIL));
p_oSqlParameterCollection.Add(parEMH_GETTER_NAME._SqlParameter(p_strEMH_GETTER_NAME));
p_oSqlParameterCollection.Add(parEMH_ID._SqlParameter());
p_oSqlParameterCollection.Add(parEMH_SUBJECT._SqlParameter(p_strEMH_SUBJECT));
}
public class parEMH_BODY
{
public const string _Name = "@EMH_BODY";
public const string _Caption = "@ EMH_ BODY";
public const string _ParentName = "PT_EMAIL_HISTORYInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 0;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_EMAIL_HISTORYInsertInto.DefaultView.[0].@EMH_BODY";
public const string _BindDataReader = "[@EMH_BODY]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_BODY", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_BODY", -1, -1, 0, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parEMH_GETTER_EMAIL
{
public const string _Name = "@EMH_GETTER_EMAIL";
public const string _Caption = "@ EMH_ GETTER_ EMAIL";
public const string _ParentName = "PT_EMAIL_HISTORYInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_EMAIL_HISTORYInsertInto.DefaultView.[0].@EMH_GETTER_EMAIL";
public const string _BindDataReader = "[@EMH_GETTER_EMAIL]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_GETTER_EMAIL", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_GETTER_EMAIL", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parEMH_GETTER_NAME
{
public const string _Name = "@EMH_GETTER_NAME";
public const string _Caption = "@ EMH_ GETTER_ NAME";
public const string _ParentName = "PT_EMAIL_HISTORYInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_EMAIL_HISTORYInsertInto.DefaultView.[0].@EMH_GETTER_NAME";
public const string _BindDataReader = "[@EMH_GETTER_NAME]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_GETTER_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_GETTER_NAME", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class parEMH_ID
{
public const string _Name = "@EMH_ID";
public const string _Caption = "@ EMH_ ID";
public const string _ParentName = "PT_EMAIL_HISTORYInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.Int;
public const Int32 _Length = 4;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_EMAIL_HISTORYInsertInto.DefaultView.[0].@EMH_ID";
public const string _BindDataReader = "[@EMH_ID]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Output;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameter("@EMH_ID", 10, 0, 4, SqlDbType.Int, ParameterDirection.Output, true);
}
}
public class parEMH_SUBJECT
{
public const string _Name = "@EMH_SUBJECT";
public const string _Caption = "@ EMH_ SUBJECT";
public const string _ParentName = "PT_EMAIL_HISTORYInsertInto";
public const SqlDbType _SqlDbType = SqlDbType.NVarChar;
public const Int32 _Length = 255;
public const bool _IsNullable = true;
public const string _BindDataAdapter = "PT_EMAIL_HISTORYInsertInto.DefaultView.[0].@EMH_SUBJECT";
public const string _BindDataReader = "[@EMH_SUBJECT]";
public const ParameterDirection _ParameterDirection = ParameterDirection.Input;
public static SqlParameter _SqlParameter()
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_SUBJECT", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "");
}
public static SqlParameter _SqlParameter(string Value)
{
return DBS.Tools.CreateSqlParameterReferenceType("@EMH_SUBJECT", 255, -1, 255, SqlDbType.NVarChar, "string", ParameterDirection.Input, true, false, "", Value);
}
}
public class inEMH_BODY : parEMH_BODY {}
public class inEMH_GETTER_EMAIL : parEMH_GETTER_EMAIL {}
public class inEMH_GETTER_NAME : parEMH_GETTER_NAME {}
public class inEMH_SUBJECT : parEMH_SUBJECT {}
public class outEMH_ID : parEMH_ID {}
public static int ExecuteNonQuery(
string p_strEMH_BODY, string p_strEMH_GETTER_EMAIL, string p_strEMH_GETTER_NAME, System.Nullable<int> p_iEMH_ID, string p_strEMH_SUBJECT,out object p_iEMH_IDOut)
{
try
{
Microsoft.Practices.EnterpriseLibrary.Data.Database db = DatabaseFactory.CreateDatabase();
SqlCommand cmd = SqlCommand(p_strEMH_BODY, p_strEMH_GETTER_EMAIL, p_strEMH_GETTER_NAME, p_iEMH_ID, p_strEMH_SUBJECT);
int iResult = db.ExecuteNonQuery(cmd);
SqlCommandOutput(cmd, out p_iEMH_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.SMTP.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
public static int ExecuteNonQuery(
string p_strEMH_BODY, string p_strEMH_GETTER_EMAIL, string p_strEMH_GETTER_NAME, System.Nullable<int> p_iEMH_ID, string p_strEMH_SUBJECT,out object p_iEMH_IDOut,Microsoft.Practices.EnterpriseLibrary.Data.Database p_db,System.Data.Common.DbTransaction p_trn)
{
try
{
SqlCommand cmd = SqlCommand(p_strEMH_BODY, p_strEMH_GETTER_EMAIL, p_strEMH_GETTER_NAME, p_iEMH_ID, p_strEMH_SUBJECT);
int iResult = p_db.ExecuteNonQuery(cmd, p_trn);
SqlCommandOutput(cmd, out p_iEMH_IDOut);

return iResult;
}
catch (System.Exception ex)
{
MADA.DatePercent.SMTP.DBS.Tools.WriteToLog(ex, System.Reflection.MethodBase.GetCurrentMethod());
throw;
}
}
}
}
